// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prop types snapshot 1`] = `
<YozoraCodeLive
  lang="jsx"
  runners={
    Array [
      Object {
        "pattern": /\\^jsx\\$/,
        "runner": [Function],
        "title": "jsx",
      },
    ]
  }
  value="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
>
  <div
    className="yozora-code-live"
  >
    <div
      className="yozora-code-live__toolbar"
      key="toolbar"
      onDoubleClick={[Function]}
    >
      <YozoraLightButtons
        key="light-buttons"
        onMaximize={[Function]}
        onMinimize={[Function]}
      >
        <span
          className="css-9y6172"
        >
          <span
            className="css-t4q37b"
            key="close"
            title="close"
          />
          <span
            className="css-p28dfd"
            key="minimize"
            onClick={[Function]}
            title="minimize"
          />
          <span
            className="css-6luv6p"
            key="maximize"
            onClick={[Function]}
            title="maximize"
          />
        </span>
      </YozoraLightButtons>
      <span
        className="yozora-code-live__title"
        key="title"
      >
        Â 
      </span>
      <span
        className="yozora-code-live__copy-button"
        key="copy-btn"
        onClick={[Function]}
      >
        <YozoraCopyButton
          value="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
        >
          <button
            aria-label="Copy to clipboard"
            className="css-jbwb7c"
            data-copy-status="waiting"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            copy
          </button>
        </YozoraCopyButton>
      </span>
    </div>
    <div
      className="yozora-code-live__main yozora-code-live__main--vertical"
      key="main"
    >
      <div
        className="yozora-code-live__editor"
        key="editor"
      >
        <YozoraCodeEditor
          code="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
          collapsed={false}
          lang="jsx"
          onChange={[Function]}
        >
          <SimpleCodeEditor
            className="yozora-code-editor"
            highlight={[Function]}
            ignoreTabKey={false}
            insertSpaces={true}
            linenoWidth="2.2em"
            onScroll={[Function]}
            onValueChange={[Function]}
            padding={10}
            preStyle={
              Object {
                "tabSize": 2,
                "whiteSpace": "pre",
              }
            }
            style={
              Object {
                "lineHeight": "1.6rem",
              }
            }
            tabSize={2}
            textareaStyle={
              Object {
                "padding": "0.5rem 0.6em 0 12px",
                "tabSize": 2,
                "whiteSpace": "pre",
              }
            }
            value="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
          >
            <div
              className="yozora-code-editor yozora-code-editor"
              padding={10}
              style={
                Object {
                  "lineHeight": "1.6rem",
                  "tabSize": 2,
                }
              }
            >
              <div
                className="yozora-code-editor__textarea-wrapper"
              >
                <div
                  className="yozora-code-editor__textarea-linenos"
                  style={
                    Object {
                      "width": "2.2em",
                    }
                  }
                />
                <textarea
                  autoCapitalize="off"
                  autoComplete="off"
                  autoCorrect="off"
                  className="yozora-code-editor__textarea"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onScroll={[Function]}
                  spellCheck={false}
                  style={
                    Object {
                      "padding": "0.5rem 0.6em 0 12px",
                      "tabSize": 2,
                      "whiteSpace": "pre",
                    }
                  }
                  value="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
                />
              </div>
              <pre
                aria-hidden="true"
                className="yozora-code-editor__previewer"
                style={
                  Object {
                    "tabSize": 2,
                    "whiteSpace": "pre",
                  }
                }
              >
                <YozoraCodeHighlighter
                  codesRef={
                    Object {
                      "current": <div
                        class="yozora-code-highlighter__codes"
                      >
                        <div
                          class="yozora-code-highlighter__codes-wrapper"
                        >
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                              style="display: inline-block;"
                            >
                              

                            </span>
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                            >
                                
                            </span>
                            <span
                              class="token keyword"
                              style="color: rgb(86, 156, 214);"
                            >
                              function
                            </span>
                            <span
                              class="token plain"
                            >
                               
                            </span>
                            <span
                              class="token function"
                              style="color: rgb(86, 156, 214);"
                            >
                              Counter
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              (
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              )
                            </span>
                            <span
                              class="token plain"
                            >
                               
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              {
                            </span>
                            <span
                              class="token plain"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                            >
                                  
                            </span>
                            <span
                              class="token keyword"
                              style="color: rgb(86, 156, 214);"
                            >
                              const
                            </span>
                            <span
                              class="token plain"
                            >
                               
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              [
                            </span>
                            <span
                              class="token plain"
                            >
                              count
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              ,
                            </span>
                            <span
                              class="token plain"
                            >
                               setCount
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              ]
                            </span>
                            <span
                              class="token plain"
                            >
                               
                            </span>
                            <span
                              class="token operator"
                              style="color: rgb(212, 212, 212);"
                            >
                              =
                            </span>
                            <span
                              class="token plain"
                            >
                               React
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              .
                            </span>
                            <span
                              class="token function"
                              style="color: rgb(86, 156, 214);"
                            >
                              useState
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              (
                            </span>
                            <span
                              class="token number"
                              style="color: rgb(181, 206, 168);"
                            >
                              0
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              )
                            </span>
                            <span
                              class="token plain"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                            >
                                  
                            </span>
                            <span
                              class="token keyword"
                              style="color: rgb(86, 156, 214);"
                            >
                              return
                            </span>
                            <span
                              class="token plain"
                            >
                               
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              (
                            </span>
                            <span
                              class="token plain"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                            >
                                    
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              div
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token plain-text"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain-text"
                            >
                                      
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              button
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag attr-name"
                              style="color: rgb(156, 220, 254);"
                            >
                              onClick
                            </span>
                            <span
                              class="token tag script language-javascript script-punctuation punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              =
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              {
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              (
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              )
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript operator"
                              style="color: rgb(212, 212, 212);"
                            >
                              =&gt;
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript function"
                              style="color: rgb(86, 156, 214);"
                            >
                              setCount
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              (
                            </span>
                            <span
                              class="token tag script language-javascript parameter"
                              style="color: rgb(86, 156, 214);"
                            >
                              c
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript operator"
                              style="color: rgb(212, 212, 212);"
                            >
                              =&gt;
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               c 
                            </span>
                            <span
                              class="token tag script language-javascript operator"
                              style="color: rgb(212, 212, 212);"
                            >
                              +
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript number"
                              style="color: rgb(181, 206, 168);"
                            >
                              1
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              )
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              }
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token plain-text"
                            >
                              +
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;/
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              button
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token plain-text"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain-text"
                            >
                                      
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              span
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag attr-name"
                              style="color: rgb(156, 220, 254);"
                            >
                              data-type
                            </span>
                            <span
                              class="token tag attr-value punctuation attr-equals"
                              style="color: rgb(106, 153, 85);"
                            >
                              =
                            </span>
                            <span
                              class="token tag attr-value punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              "
                            </span>
                            <span
                              class="token tag attr-value"
                              style="color: rgb(206, 145, 120);"
                            >
                              value
                            </span>
                            <span
                              class="token tag attr-value punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              "
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              {
                            </span>
                            <span
                              class="token plain"
                            >
                              count
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              }
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;/
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              span
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token plain-text"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain-text"
                            >
                                      
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              button
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag attr-name"
                              style="color: rgb(156, 220, 254);"
                            >
                              onClick
                            </span>
                            <span
                              class="token tag script language-javascript script-punctuation punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              =
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              {
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              (
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              )
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript operator"
                              style="color: rgb(212, 212, 212);"
                            >
                              =&gt;
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript function"
                              style="color: rgb(86, 156, 214);"
                            >
                              setCount
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              (
                            </span>
                            <span
                              class="token tag script language-javascript parameter"
                              style="color: rgb(86, 156, 214);"
                            >
                              c
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript operator"
                              style="color: rgb(212, 212, 212);"
                            >
                              =&gt;
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               c 
                            </span>
                            <span
                              class="token tag script language-javascript operator"
                              style="color: rgb(212, 212, 212);"
                            >
                              -
                            </span>
                            <span
                              class="token tag script language-javascript"
                              style="color: rgb(86, 156, 214);"
                            >
                               
                            </span>
                            <span
                              class="token tag script language-javascript number"
                              style="color: rgb(181, 206, 168);"
                            >
                              1
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              )
                            </span>
                            <span
                              class="token tag script language-javascript punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              }
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token plain-text"
                            >
                              -
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;/
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              button
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token plain-text"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain-text"
                            >
                                    
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &lt;/
                            </span>
                            <span
                              class="token tag"
                              style="color: rgb(86, 156, 214);"
                            >
                              div
                            </span>
                            <span
                              class="token tag punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              &gt;
                            </span>
                            <span
                              class="token plain"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                            >
                                  
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              )
                            </span>
                            <span
                              class="token plain"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                            >
                                
                            </span>
                            <span
                              class="token punctuation"
                              style="color: rgb(106, 153, 85);"
                            >
                              }
                            </span>
                            <span
                              class="token plain"
                            />
                          </div>
                          <div
                            class="yozora-code-highlighter__line token-line"
                            style="color: rgb(212, 212, 212);"
                          >
                            <span
                              class="token plain"
                              style="display: inline-block;"
                            >
                              

                            </span>
                          </div>
                        </div>
                      </div>,
                    }
                  }
                  collapsed={false}
                  lang="jsx"
                  lineHeight="1.6rem"
                  onLinenoWidthChange={[Function]}
                  value="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
                >
                  <Highlight
                    Prism={
                      Object {
                        "Token": [Function],
                        "default": [Circular],
                        "highlight": [Function],
                        "hooks": Object {
                          "add": [Function],
                          "all": Object {
                            "after-tokenize": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "before-tokenize": Array [
                              [Function],
                            ],
                            "wrap": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "run": [Function],
                        },
                        "languages": Object {
                          "DFS": [Function],
                          "atom": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "bash": Object {
                            "assign-left": Object {
                              "alias": "variable",
                              "inside": Object {
                                "environment": Object {
                                  "alias": "constant",
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                            },
                            "boolean": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "builtin": Object {
                              "alias": "class-name",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "comment": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                            },
                            "environment": Object {
                              "alias": "constant",
                              "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                            },
                            "file-descriptor": Object {
                              "alias": "important",
                              "pattern": /\\\\B&\\\\d\\\\b/,
                            },
                            "for-or-select": Object {
                              "alias": "variable",
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                            },
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "function-name": Array [
                              Object {
                                "alias": "function",
                                "lookbehind": true,
                                "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                              },
                              Object {
                                "alias": "function",
                                "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                              },
                            ],
                            "keyword": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                            },
                            "operator": Object {
                              "inside": Object {
                                "file-descriptor": Object {
                                  "alias": "important",
                                  "pattern": /\\^\\\\d/,
                                },
                              },
                              "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                            },
                            "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                            "shebang": Object {
                              "alias": "important",
                              "pattern": /\\^#!\\\\s\\*\\\\/\\.\\*/,
                            },
                            "string": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "bash": Object {
                                    "alias": "punctuation",
                                    "inside": [Circular],
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                  },
                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                  "environment": Object {
                                    "alias": "constant",
                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "variable": Array [
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|<<=\\?\\|>>=\\?\\|&&\\|\\\\\\|\\\\\\|\\|\\[=!\\+\\\\-\\*/%<>\\^&\\|\\]=\\?\\|\\[\\?~:\\]/,
                                        "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                        "variable": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                          },
                                          /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                        ],
                                      },
                                      "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "assign-left": Object {
                                          "alias": "variable",
                                          "inside": Object {
                                            "environment": Object {
                                              "alias": "constant",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                        },
                                        "boolean": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "builtin": Object {
                                          "alias": "class-name",
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "comment": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                        },
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "file-descriptor": Object {
                                          "alias": "important",
                                          "pattern": /\\\\B&\\\\d\\\\b/,
                                        },
                                        "for-or-select": Object {
                                          "alias": "variable",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                        },
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "function-name": Array [
                                          Object {
                                            "alias": "function",
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                          },
                                          Object {
                                            "alias": "function",
                                            "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                        },
                                        "operator": Object {
                                          "inside": Object {
                                            "file-descriptor": Object {
                                              "alias": "important",
                                              "pattern": /\\^\\\\d/,
                                            },
                                          },
                                          "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                                        },
                                        "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                        "string": [Circular],
                                        "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "environment": Object {
                                          "alias": "constant",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                        "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                    },
                                    /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                  ],
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "bash": Object {
                                    "alias": "punctuation",
                                    "inside": [Circular],
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "bash": Object {
                                    "alias": "punctuation",
                                    "inside": [Circular],
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                  },
                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                  "environment": Object {
                                    "alias": "constant",
                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "variable": Array [
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|<<=\\?\\|>>=\\?\\|&&\\|\\\\\\|\\\\\\|\\|\\[=!\\+\\\\-\\*/%<>\\^&\\|\\]=\\?\\|\\[\\?~:\\]/,
                                        "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                        "variable": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                          },
                                          /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                        ],
                                      },
                                      "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "assign-left": Object {
                                          "alias": "variable",
                                          "inside": Object {
                                            "environment": Object {
                                              "alias": "constant",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                        },
                                        "boolean": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "builtin": Object {
                                          "alias": "class-name",
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "comment": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                        },
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "file-descriptor": Object {
                                          "alias": "important",
                                          "pattern": /\\\\B&\\\\d\\\\b/,
                                        },
                                        "for-or-select": Object {
                                          "alias": "variable",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                        },
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "function-name": Array [
                                          Object {
                                            "alias": "function",
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                          },
                                          Object {
                                            "alias": "function",
                                            "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                        },
                                        "operator": Object {
                                          "inside": Object {
                                            "file-descriptor": Object {
                                              "alias": "important",
                                              "pattern": /\\^\\\\d/,
                                            },
                                          },
                                          "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                                        },
                                        "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                        "string": [Circular],
                                        "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "environment": Object {
                                          "alias": "constant",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                        "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                    },
                                    /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                  ],
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\[\\^"\\\\\\\\\`\\$\\]\\)\\*"/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\\\\\\\]\\)'\\[\\^'\\]\\*'/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                },
                                "pattern": /\\\\\\$'\\(\\?:\\[\\^'\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*'/,
                              },
                            ],
                            "variable": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|<<=\\?\\|>>=\\?\\|&&\\|\\\\\\|\\\\\\|\\|\\[=!\\+\\\\-\\*/%<>\\^&\\|\\]=\\?\\|\\[\\?~:\\]/,
                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                  "variable": Array [
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                    },
                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                  ],
                                },
                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "assign-left": Object {
                                    "alias": "variable",
                                    "inside": Object {
                                      "environment": Object {
                                        "alias": "constant",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                  },
                                  "boolean": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "builtin": Object {
                                    "alias": "class-name",
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                  },
                                  "environment": Object {
                                    "alias": "constant",
                                    "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "file-descriptor": Object {
                                    "alias": "important",
                                    "pattern": /\\\\B&\\\\d\\\\b/,
                                  },
                                  "for-or-select": Object {
                                    "alias": "variable",
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                  },
                                  "function": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "function-name": Array [
                                    Object {
                                      "alias": "function",
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                    },
                                    Object {
                                      "alias": "function",
                                      "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                    },
                                  ],
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                  },
                                  "operator": Object {
                                    "inside": Object {
                                      "file-descriptor": Object {
                                        "alias": "important",
                                        "pattern": /\\^\\\\d/,
                                      },
                                    },
                                    "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                                  },
                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                  "string": Array [
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "bash": Object {
                                          "alias": "punctuation",
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                        },
                                        "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "variable": [Circular],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "bash": Object {
                                          "alias": "punctuation",
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "bash": Object {
                                          "alias": "punctuation",
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                        },
                                        "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "variable": [Circular],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\[\\^"\\\\\\\\\`\\$\\]\\)\\*"/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\\\\\\\]\\)'\\[\\^'\\]\\*'/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                      },
                                      "pattern": /\\\\\\$'\\(\\?:\\[\\^'\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*'/,
                                    },
                                  ],
                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                },
                                "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "environment": Object {
                                    "alias": "constant",
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                  "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                },
                                "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                              },
                              /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                            ],
                          },
                          "c": Object {
                            "char": Object {
                              "greedy": true,
                              "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                            },
                            "class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:enum\\|struct\\)\\\\s\\+\\(\\?:__attribute__\\\\s\\*\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\\\)\\\\s\\*\\)\\?\\)\\\\w\\+\\|\\\\b\\[a-z\\]\\\\w\\*_t\\\\b/,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                            },
                            "constant": /\\\\b\\(\\?:EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|__DATE__\\|__FILE__\\|__LINE__\\|__TIMESTAMP__\\|__TIME__\\|__func__\\|stderr\\|stdin\\|stdout\\)\\\\b/,
                            "function": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                            "keyword": /\\\\b\\(\\?:_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|__attribute__\\|asm\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|inline\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|typeof\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                            "macro": Object {
                              "alias": "property",
                              "greedy": true,
                              "inside": Object {
                                "char": Object {
                                  "greedy": true,
                                  "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                },
                                "comment": Object {
                                  "greedy": true,
                                  "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                },
                                "directive": Object {
                                  "alias": "keyword",
                                  "lookbehind": true,
                                  "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                },
                                "directive-hash": /\\^#/,
                                "expression": Object {
                                  "inside": [Circular],
                                  "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                },
                                "macro-name": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                  },
                                  Object {
                                    "alias": "function",
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                  },
                                ],
                                "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                "string": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[\\\\t \\]\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                            },
                            "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                            "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                            },
                          },
                          "clike": Object {
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "class-name": Object {
                              "inside": Object {
                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                            },
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "function": /\\\\b\\\\w\\+\\(\\?=\\\\\\(\\)/,
                            "keyword": /\\\\b\\(\\?:break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|null\\|return\\|throw\\|try\\|while\\)\\\\b/,
                            "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                            "operator": /\\[<>\\]=\\?\\|\\[!=\\]=\\?=\\?\\|--\\?\\|\\\\\\+\\\\\\+\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[\\?\\*/~\\^%\\]/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            },
                          },
                          "coffee": Object {
                            "arrow": Object {
                              "alias": "operator",
                              "pattern": /=>/,
                            },
                            "block-regex": Object {
                              "alias": "regex",
                              "inside": Object {
                                "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                "interpolation": Object {
                                  "alias": "variable",
                                  "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                },
                              },
                              "pattern": /\\\\/\\{3\\}\\[\\\\s\\\\S\\]\\*\\?\\\\/\\{3\\}/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "class-member": Object {
                              "alias": "variable",
                              "pattern": /@\\(\\?!\\\\d\\)\\\\w\\+/,
                            },
                            "class-name": Array [
                              Object {
                                "inside": Object {
                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                              },
                            ],
                            "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                            "console": Object {
                              "alias": "class-name",
                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                            },
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "dom": Object {
                              "alias": "variable",
                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                            },
                            "exports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                            },
                            "function": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "function-variable": Object {
                              "alias": "function",
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/,
                            },
                            "imports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                            },
                            "inline-javascript": Object {
                              "inside": Object {
                                "delimiter": Object {
                                  "alias": "punctuation",
                                  "pattern": /\\^\`\\|\`\\$/,
                                },
                                "script": Object {
                                  "alias": "language-javascript",
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                            },
                            "keyword": /\\\\b\\(\\?:and\\|break\\|by\\|catch\\|class\\|continue\\|debugger\\|delete\\|do\\|each\\|else\\|extend\\|extends\\|false\\|finally\\|for\\|if\\|in\\|instanceof\\|is\\|isnt\\|let\\|loop\\|namespace\\|new\\|no\\|not\\|null\\|of\\|off\\|on\\|or\\|own\\|return\\|super\\|switch\\|then\\|this\\|throw\\|true\\|try\\|typeof\\|undefined\\|unless\\|until\\|when\\|while\\|window\\|with\\|yes\\|yield\\)\\\\b/,
                            "known-class-name": Array [
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                              },
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                              },
                            ],
                            "literal-property": Object {
                              "alias": "property",
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "maybe-class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "method": Object {
                              "alias": Array [
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "method-variable": Object {
                              "alias": Array [
                                "function-variable",
                                "method",
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "multiline-comment": Object {
                              "alias": "comment",
                              "pattern": /###\\[\\\\s\\\\S\\]\\+\\?###/,
                            },
                            "multiline-string": Array [
                              Object {
                                "alias": "string",
                                "greedy": true,
                                "pattern": /'''\\[\\\\s\\\\S\\]\\*\\?'''/,
                              },
                              Object {
                                "alias": "string",
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                  },
                                },
                                "pattern": /"""\\[\\\\s\\\\S\\]\\*\\?"""/,
                              },
                            ],
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "parameter": Array [
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                              },
                            ],
                            "property": /\\(\\?!\\\\d\\)\\\\w\\+\\(\\?=\\\\s\\*:\\(\\?!:\\)\\)/,
                            "property-access": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                            },
                            "spread": Object {
                              "alias": "operator",
                              "pattern": /\\\\\\.\\{3\\}/,
                            },
                            "string": Array [
                              Object {
                                "greedy": true,
                                "pattern": /'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                  },
                                },
                                "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"/,
                              },
                            ],
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                            },
                          },
                          "coffeescript": Object {
                            "arrow": Object {
                              "alias": "operator",
                              "pattern": /=>/,
                            },
                            "block-regex": Object {
                              "alias": "regex",
                              "inside": Object {
                                "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                "interpolation": Object {
                                  "alias": "variable",
                                  "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                },
                              },
                              "pattern": /\\\\/\\{3\\}\\[\\\\s\\\\S\\]\\*\\?\\\\/\\{3\\}/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "class-member": Object {
                              "alias": "variable",
                              "pattern": /@\\(\\?!\\\\d\\)\\\\w\\+/,
                            },
                            "class-name": Array [
                              Object {
                                "inside": Object {
                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                              },
                            ],
                            "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                            "console": Object {
                              "alias": "class-name",
                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                            },
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "dom": Object {
                              "alias": "variable",
                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                            },
                            "exports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                            },
                            "function": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "function-variable": Object {
                              "alias": "function",
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/,
                            },
                            "imports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                            },
                            "inline-javascript": Object {
                              "inside": Object {
                                "delimiter": Object {
                                  "alias": "punctuation",
                                  "pattern": /\\^\`\\|\`\\$/,
                                },
                                "script": Object {
                                  "alias": "language-javascript",
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                            },
                            "keyword": /\\\\b\\(\\?:and\\|break\\|by\\|catch\\|class\\|continue\\|debugger\\|delete\\|do\\|each\\|else\\|extend\\|extends\\|false\\|finally\\|for\\|if\\|in\\|instanceof\\|is\\|isnt\\|let\\|loop\\|namespace\\|new\\|no\\|not\\|null\\|of\\|off\\|on\\|or\\|own\\|return\\|super\\|switch\\|then\\|this\\|throw\\|true\\|try\\|typeof\\|undefined\\|unless\\|until\\|when\\|while\\|window\\|with\\|yes\\|yield\\)\\\\b/,
                            "known-class-name": Array [
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                              },
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                              },
                            ],
                            "literal-property": Object {
                              "alias": "property",
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "maybe-class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "method": Object {
                              "alias": Array [
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "method-variable": Object {
                              "alias": Array [
                                "function-variable",
                                "method",
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "multiline-comment": Object {
                              "alias": "comment",
                              "pattern": /###\\[\\\\s\\\\S\\]\\+\\?###/,
                            },
                            "multiline-string": Array [
                              Object {
                                "alias": "string",
                                "greedy": true,
                                "pattern": /'''\\[\\\\s\\\\S\\]\\*\\?'''/,
                              },
                              Object {
                                "alias": "string",
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                  },
                                },
                                "pattern": /"""\\[\\\\s\\\\S\\]\\*\\?"""/,
                              },
                            ],
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "parameter": Array [
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                              },
                            ],
                            "property": /\\(\\?!\\\\d\\)\\\\w\\+\\(\\?=\\\\s\\*:\\(\\?!:\\)\\)/,
                            "property-access": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                            },
                            "spread": Object {
                              "alias": "operator",
                              "pattern": /\\\\\\.\\{3\\}/,
                            },
                            "string": Array [
                              Object {
                                "greedy": true,
                                "pattern": /'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                  },
                                },
                                "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"/,
                              },
                            ],
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                            },
                          },
                          "cpp": Object {
                            "base-clause": Object {
                              "greedy": true,
                              "inside": Object {
                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                "char": Object {
                                  "greedy": true,
                                  "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                },
                                "class-name": /\\\\b\\[a-z_\\]\\\\w\\*\\\\b\\(\\?!\\\\s\\*::\\)/i,
                                "comment": Object {
                                  "greedy": true,
                                  "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                },
                                "constant": /\\\\b\\(\\?:EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|__DATE__\\|__FILE__\\|__LINE__\\|__TIMESTAMP__\\|__TIME__\\|__func__\\|stderr\\|stdin\\|stdout\\)\\\\b/,
                                "double-colon": Object {
                                  "alias": "punctuation",
                                  "pattern": /::/,
                                },
                                "function": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                "generic-function": Object {
                                  "inside": Object {
                                    "function": /\\^\\\\w\\+/,
                                    "generic": Object {
                                      "alias": "class-name",
                                      "inside": Object {
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "char": Object {
                                          "greedy": true,
                                          "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                        },
                                        "class-name": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|concept\\|enum\\|struct\\|typename\\)\\\\s\\+\\)\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+/,
                                          },
                                          /\\\\b\\[A-Z\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                                          /\\\\b\\[A-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*~\\\\w\\+\\\\s\\*\\\\\\(\\)/i,
                                          /\\\\b\\\\w\\+\\(\\?=\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                                        ],
                                        "comment": Object {
                                          "greedy": true,
                                          "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        "constant": /\\\\b\\(\\?:EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|__DATE__\\|__FILE__\\|__LINE__\\|__TIMESTAMP__\\|__TIME__\\|__func__\\|stderr\\|stdin\\|stdout\\)\\\\b/,
                                        "double-colon": Object {
                                          "alias": "punctuation",
                                          "pattern": /::/,
                                        },
                                        "function": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                        "generic-function": [Circular],
                                        "keyword": /\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b/,
                                        "macro": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "inside": Object {
                                            "char": Object {
                                              "greedy": true,
                                              "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                            },
                                            "comment": Object {
                                              "greedy": true,
                                              "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            "directive": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                            },
                                            "directive-hash": /\\^#/,
                                            "expression": Object {
                                              "inside": [Circular],
                                              "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "macro-name": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                              },
                                              Object {
                                                "alias": "function",
                                                "lookbehind": true,
                                                "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                              },
                                            ],
                                            "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                            "string": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                              },
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\\\t \\]\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                        },
                                        "module": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "operator": /:/,
                                            "punctuation": /\\\\\\./,
                                            "string": /\\^\\[<"\\]\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:import\\|module\\)\\\\s\\+\\)\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|<\\[\\^<>\\\\r\\\\n\\]\\*>\\|\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\(\\?:\\\\s\\*:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)\\?\\|:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)/,
                                        },
                                        "number": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:\\\\b0b\\[01'\\]\\+\\|\\\\b0x\\(\\?:\\[\\\\da-f'\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f'\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f'\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\|\\(\\?:\\\\b\\[\\\\d'\\]\\+\\(\\?:\\\\\\.\\[\\\\d'\\]\\*\\)\\?\\|\\\\B\\\\\\.\\[\\\\d'\\]\\+\\)\\(\\?:e\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                        },
                                        "operator": />>=\\?\\|<<=\\?\\|->\\|--\\|\\\\\\+\\\\\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\[\\?:~\\]\\|<=>\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\b\\(\\?:and\\|and_eq\\|bitand\\|bitor\\|not\\|not_eq\\|or\\|or_eq\\|xor\\|xor_eq\\)\\\\b/,
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "raw-string": Object {
                                          "alias": "string",
                                          "greedy": true,
                                          "pattern": /R"\\(\\[\\^\\(\\)\\\\\\\\ \\]\\{0,16\\}\\)\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\1"/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                        },
                                      },
                                      "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                    },
                                  },
                                  "pattern": /\\\\b\\(\\?!operator\\\\b\\)\\[a-z_\\]\\\\w\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                },
                                "keyword": /\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b/,
                                "macro": Object {
                                  "alias": "property",
                                  "greedy": true,
                                  "inside": Object {
                                    "char": Object {
                                      "greedy": true,
                                      "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                    },
                                    "directive": Object {
                                      "alias": "keyword",
                                      "lookbehind": true,
                                      "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                    },
                                    "directive-hash": /\\^#/,
                                    "expression": Object {
                                      "inside": Object {
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "char": Object {
                                          "greedy": true,
                                          "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                        },
                                        "class-name": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|concept\\|enum\\|struct\\|typename\\)\\\\s\\+\\)\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+/,
                                          },
                                          /\\\\b\\[A-Z\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                                          /\\\\b\\[A-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*~\\\\w\\+\\\\s\\*\\\\\\(\\)/i,
                                          /\\\\b\\\\w\\+\\(\\?=\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                                        ],
                                        "comment": Object {
                                          "greedy": true,
                                          "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        "constant": /\\\\b\\(\\?:EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|__DATE__\\|__FILE__\\|__LINE__\\|__TIMESTAMP__\\|__TIME__\\|__func__\\|stderr\\|stdin\\|stdout\\)\\\\b/,
                                        "double-colon": Object {
                                          "alias": "punctuation",
                                          "pattern": /::/,
                                        },
                                        "function": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                        "generic-function": Object {
                                          "inside": Object {
                                            "function": /\\^\\\\w\\+/,
                                            "generic": Object {
                                              "alias": "class-name",
                                              "inside": [Circular],
                                              "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                            },
                                          },
                                          "pattern": /\\\\b\\(\\?!operator\\\\b\\)\\[a-z_\\]\\\\w\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                        },
                                        "keyword": /\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b/,
                                        "macro": [Circular],
                                        "module": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "operator": /:/,
                                            "punctuation": /\\\\\\./,
                                            "string": /\\^\\[<"\\]\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:import\\|module\\)\\\\s\\+\\)\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|<\\[\\^<>\\\\r\\\\n\\]\\*>\\|\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\(\\?:\\\\s\\*:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)\\?\\|:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)/,
                                        },
                                        "number": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:\\\\b0b\\[01'\\]\\+\\|\\\\b0x\\(\\?:\\[\\\\da-f'\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f'\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f'\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\|\\(\\?:\\\\b\\[\\\\d'\\]\\+\\(\\?:\\\\\\.\\[\\\\d'\\]\\*\\)\\?\\|\\\\B\\\\\\.\\[\\\\d'\\]\\+\\)\\(\\?:e\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                        },
                                        "operator": />>=\\?\\|<<=\\?\\|->\\|--\\|\\\\\\+\\\\\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\[\\?:~\\]\\|<=>\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\b\\(\\?:and\\|and_eq\\|bitand\\|bitor\\|not\\|not_eq\\|or\\|or_eq\\|xor\\|xor_eq\\)\\\\b/,
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "raw-string": Object {
                                          "alias": "string",
                                          "greedy": true,
                                          "pattern": /R"\\(\\[\\^\\(\\)\\\\\\\\ \\]\\{0,16\\}\\)\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\1"/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                        },
                                      },
                                      "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                    },
                                    "macro-name": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                      },
                                      Object {
                                        "alias": "function",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                      },
                                    ],
                                    "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                    "string": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                      },
                                    ],
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\\\t \\]\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                },
                                "module": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "operator": /:/,
                                    "punctuation": /\\\\\\./,
                                    "string": /\\^\\[<"\\]\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\b\\(\\?:import\\|module\\)\\\\s\\+\\)\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|<\\[\\^<>\\\\r\\\\n\\]\\*>\\|\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\(\\?:\\\\s\\*:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)\\?\\|:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)/,
                                },
                                "number": Object {
                                  "greedy": true,
                                  "pattern": /\\(\\?:\\\\b0b\\[01'\\]\\+\\|\\\\b0x\\(\\?:\\[\\\\da-f'\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f'\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f'\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\|\\(\\?:\\\\b\\[\\\\d'\\]\\+\\(\\?:\\\\\\.\\[\\\\d'\\]\\*\\)\\?\\|\\\\B\\\\\\.\\[\\\\d'\\]\\+\\)\\(\\?:e\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                },
                                "operator": />>=\\?\\|<<=\\?\\|->\\|--\\|\\\\\\+\\\\\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\[\\?:~\\]\\|<=>\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\b\\(\\?:and\\|and_eq\\|bitand\\|bitor\\|not\\|not_eq\\|or\\|or_eq\\|xor\\|xor_eq\\)\\\\b/,
                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                "raw-string": Object {
                                  "alias": "string",
                                  "greedy": true,
                                  "pattern": /R"\\(\\[\\^\\(\\)\\\\\\\\ \\]\\{0,16\\}\\)\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\1"/,
                                },
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:class\\|struct\\)\\\\s\\+\\\\w\\+\\\\s\\*:\\\\s\\*\\)\\[\\^;\\{\\}"'\\\\s\\]\\+\\(\\?:\\\\s\\+\\[\\^;\\{\\}"'\\\\s\\]\\+\\)\\*\\(\\?=\\\\s\\*\\[;\\{\\]\\)/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "char": Object {
                              "greedy": true,
                              "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                            },
                            "class-name": Array [
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\\\b\\(\\?:class\\|concept\\|enum\\|struct\\|typename\\)\\\\s\\+\\)\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+/,
                              },
                              /\\\\b\\[A-Z\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                              /\\\\b\\[A-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*~\\\\w\\+\\\\s\\*\\\\\\(\\)/i,
                              /\\\\b\\\\w\\+\\(\\?=\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                            ],
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                            },
                            "constant": /\\\\b\\(\\?:EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|__DATE__\\|__FILE__\\|__LINE__\\|__TIMESTAMP__\\|__TIME__\\|__func__\\|stderr\\|stdin\\|stdout\\)\\\\b/,
                            "double-colon": Object {
                              "alias": "punctuation",
                              "pattern": /::/,
                            },
                            "function": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                            "generic-function": Object {
                              "inside": Object {
                                "function": /\\^\\\\w\\+/,
                                "generic": Object {
                                  "alias": "class-name",
                                  "inside": [Circular],
                                  "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "pattern": /\\\\b\\(\\?!operator\\\\b\\)\\[a-z_\\]\\\\w\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                            },
                            "keyword": /\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b/,
                            "macro": Object {
                              "alias": "property",
                              "greedy": true,
                              "inside": Object {
                                "char": Object {
                                  "greedy": true,
                                  "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                },
                                "comment": Object {
                                  "greedy": true,
                                  "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                },
                                "directive": Object {
                                  "alias": "keyword",
                                  "lookbehind": true,
                                  "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                },
                                "directive-hash": /\\^#/,
                                "expression": Object {
                                  "inside": [Circular],
                                  "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                },
                                "macro-name": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                  },
                                  Object {
                                    "alias": "function",
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                  },
                                ],
                                "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                "string": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[\\\\t \\]\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                            },
                            "module": Object {
                              "greedy": true,
                              "inside": Object {
                                "operator": /:/,
                                "punctuation": /\\\\\\./,
                                "string": /\\^\\[<"\\]\\[\\\\s\\\\S\\]\\+/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:import\\|module\\)\\\\s\\+\\)\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|<\\[\\^<>\\\\r\\\\n\\]\\*>\\|\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\(\\?:\\\\s\\*:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)\\?\\|:\\\\s\\*\\\\b\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|char8_t\\|class\\|co_await\\|co_return\\|co_yield\\|compl\\|concept\\|const\\|const_cast\\|consteval\\|constexpr\\|constinit\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|final\\|float\\|for\\|friend\\|goto\\|if\\|import\\|inline\\|int\\|int16_t\\|int32_t\\|int64_t\\|int8_t\\|long\\|module\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|override\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|uint16_t\\|uint32_t\\|uint64_t\\|uint8_t\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\)\\*\\\\b\\)/,
                            },
                            "number": Object {
                              "greedy": true,
                              "pattern": /\\(\\?:\\\\b0b\\[01'\\]\\+\\|\\\\b0x\\(\\?:\\[\\\\da-f'\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f'\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f'\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\|\\(\\?:\\\\b\\[\\\\d'\\]\\+\\(\\?:\\\\\\.\\[\\\\d'\\]\\*\\)\\?\\|\\\\B\\\\\\.\\[\\\\d'\\]\\+\\)\\(\\?:e\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                            },
                            "operator": />>=\\?\\|<<=\\?\\|->\\|--\\|\\\\\\+\\\\\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\[\\?:~\\]\\|<=>\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\b\\(\\?:and\\|and_eq\\|bitand\\|bitor\\|not\\|not_eq\\|or\\|or_eq\\|xor\\|xor_eq\\)\\\\b/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "raw-string": Object {
                              "alias": "string",
                              "greedy": true,
                              "pattern": /R"\\(\\[\\^\\(\\)\\\\\\\\ \\]\\{0,16\\}\\)\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\1"/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                            },
                          },
                          "css": Object {
                            "atrule": Object {
                              "inside": Object {
                                "keyword": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                },
                                "rest": [Circular],
                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                "selector-function-argument": Object {
                                  "alias": "selector",
                                  "inside": Object {
                                    "attribute": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                        },
                                        "attr-value": Array [
                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                          },
                                        ],
                                        "case-sensitivity": Object {
                                          "alias": "keyword",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                        },
                                        "namespace": Object {
                                          "inside": Object {
                                            "punctuation": /\\\\\\|\\$/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                        },
                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                      },
                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                    },
                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                    "id": /#\\[-\\\\w\\]\\+/,
                                    "n-th": Array [
                                      Object {
                                        "inside": Object {
                                          "number": /\\[\\\\dn\\]\\+/,
                                          "operator": /\\[\\+-\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                      },
                                    ],
                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                    "punctuation": /\\[\\(\\),\\]/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                },
                              },
                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                            },
                            "color": Array [
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                              },
                              Object {
                                "inside": Object {
                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "punctuation": /\\[\\(\\),\\]/,
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                  },
                                },
                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                              },
                            ],
                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                            },
                            "hexcode": Object {
                              "alias": "color",
                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                            },
                            "important": /!important\\\\b/i,
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                            },
                            "operator": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                            },
                            "property": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                            },
                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                            "selector": Object {
                              "inside": Object {
                                "attribute": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "attr-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                    },
                                    "attr-value": Array [
                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                      },
                                    ],
                                    "case-sensitivity": Object {
                                      "alias": "keyword",
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                    },
                                    "namespace": Object {
                                      "inside": Object {
                                        "punctuation": /\\\\\\|\\$/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                    },
                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                  },
                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                },
                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                "id": /#\\[-\\\\w\\]\\+/,
                                "n-th": Array [
                                  Object {
                                    "inside": Object {
                                      "number": /\\[\\\\dn\\]\\+/,
                                      "operator": /\\[\\+-\\]/,
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                  },
                                ],
                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                "punctuation": /\\[\\(\\),\\]/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                            },
                            "unit": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                            },
                            "url": Object {
                              "greedy": true,
                              "inside": Object {
                                "function": /\\^url/i,
                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                "string": Object {
                                  "alias": "url",
                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                },
                              },
                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                            },
                            "variable": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                            },
                          },
                          "diff": Object {
                            "coord": Array [
                              /\\^\\(\\?:\\\\\\*\\{3\\}\\|-\\{3\\}\\|\\\\\\+\\{3\\}\\)\\.\\*\\$/m,
                              /\\^@@\\.\\*@@\\$/m,
                              /\\^\\\\d\\.\\*\\$/m,
                            ],
                            "deleted-arrow": Object {
                              "alias": Array [
                                "deleted",
                              ],
                              "inside": Object {
                                "line": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                },
                                "prefix": Object {
                                  "alias": "deleted",
                                  "pattern": /\\[\\\\s\\\\S\\]/,
                                },
                              },
                              "pattern": /\\^\\(\\?:\\[<\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                            },
                            "deleted-sign": Object {
                              "alias": Array [
                                "deleted",
                              ],
                              "inside": Object {
                                "line": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                },
                                "prefix": Object {
                                  "alias": "deleted",
                                  "pattern": /\\[\\\\s\\\\S\\]/,
                                },
                              },
                              "pattern": /\\^\\(\\?:\\[-\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                            },
                            "diff": Object {
                              "alias": Array [
                                "bold",
                              ],
                              "inside": Object {
                                "line": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                },
                                "prefix": Object {
                                  "alias": "diff",
                                  "pattern": /\\[\\\\s\\\\S\\]/,
                                },
                              },
                              "pattern": /\\^\\(\\?:\\[!\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                            },
                            "inserted-arrow": Object {
                              "alias": Array [
                                "inserted",
                              ],
                              "inside": Object {
                                "line": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                },
                                "prefix": Object {
                                  "alias": "inserted",
                                  "pattern": /\\[\\\\s\\\\S\\]/,
                                },
                              },
                              "pattern": /\\^\\(\\?:\\[>\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                            },
                            "inserted-sign": Object {
                              "alias": Array [
                                "inserted",
                              ],
                              "inside": Object {
                                "line": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                },
                                "prefix": Object {
                                  "alias": "inserted",
                                  "pattern": /\\[\\\\s\\\\S\\]/,
                                },
                              },
                              "pattern": /\\^\\(\\?:\\[\\+\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                            },
                            "unchanged": Object {
                              "alias": Array [],
                              "inside": Object {
                                "line": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                },
                                "prefix": Object {
                                  "alias": "unchanged",
                                  "pattern": /\\[\\\\s\\\\S\\]/,
                                },
                              },
                              "pattern": /\\^\\(\\?:\\[ \\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                            },
                          },
                          "dot": Object {
                            "attr-name": Object {
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\[\\[;, \\\\t\\\\r\\\\n\\]\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)\\(\\?=\\[ \\\\t\\\\r\\\\n\\]\\*=\\)/,
                            },
                            "attr-value": Object {
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(=\\[ \\\\t\\\\r\\\\n\\]\\*\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)/,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\.\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\^#\\.\\*/m,
                            },
                            "compass-point": Object {
                              "alias": "builtin",
                              "lookbehind": true,
                              "pattern": /\\(:\\[ \\\\t\\\\r\\\\n\\]\\*\\)\\(\\?:\\[ns\\]\\[ew\\]\\?\\|\\[ewc_\\]\\)\\(\\?!\\[\\\\w\\\\x80-\\\\uFFFF\\]\\)/,
                            },
                            "graph-name": Object {
                              "alias": "class-name",
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:digraph\\|graph\\|subgraph\\)\\[ \\\\t\\\\r\\\\n\\]\\+\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)/i,
                            },
                            "keyword": /\\\\b\\(\\?:digraph\\|edge\\|graph\\|node\\|strict\\|subgraph\\)\\\\b/i,
                            "node": Object {
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-\\.\\\\w\\\\x80-\\\\uFFFF\\\\\\\\\\]\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)/,
                            },
                            "operator": /\\[=:\\]\\|-\\[->\\]/,
                            "punctuation": /\\[\\[\\\\\\]\\{\\};,\\]/,
                          },
                          "extend": [Function],
                          "git": Object {
                            "command": Object {
                              "inside": Object {
                                "parameter": /\\\\s--\\?\\\\w\\+/,
                              },
                              "pattern": /\\^\\.\\*\\\\\\$ git \\.\\*\\$/m,
                            },
                            "comment": /\\^#\\.\\*/m,
                            "commit-sha1": /\\^commit \\\\w\\{40\\}\\$/m,
                            "coord": /\\^@@\\.\\*@@\\$/m,
                            "deleted": /\\^\\[-â\\]\\.\\*/m,
                            "inserted": /\\^\\\\\\+\\.\\*/m,
                            "string": /\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                          },
                          "go": Object {
                            "boolean": /\\\\b\\(\\?:_\\|false\\|iota\\|nil\\|true\\)\\\\b/,
                            "builtin": /\\\\b\\(\\?:append\\|bool\\|byte\\|cap\\|close\\|complex\\|complex\\(\\?:64\\|128\\)\\|copy\\|delete\\|error\\|float\\(\\?:32\\|64\\)\\|u\\?int\\(\\?:8\\|16\\|32\\|64\\)\\?\\|imag\\|len\\|make\\|new\\|panic\\|print\\(\\?:ln\\)\\?\\|real\\|recover\\|rune\\|string\\|uintptr\\)\\\\b/,
                            "char": Object {
                              "greedy": true,
                              "pattern": /'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,10\\}'/,
                            },
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "function": /\\\\b\\\\w\\+\\(\\?=\\\\\\(\\)/,
                            "keyword": /\\\\b\\(\\?:break\\|case\\|chan\\|const\\|continue\\|default\\|defer\\|else\\|fallthrough\\|for\\|func\\|go\\(\\?:to\\)\\?\\|if\\|import\\|interface\\|map\\|package\\|range\\|return\\|select\\|struct\\|switch\\|type\\|var\\)\\\\b/,
                            "number": Array [
                              /\\\\b0\\(\\?:b\\[01_\\]\\+\\|o\\[0-7_\\]\\+\\)i\\?\\\\b/i,
                              /\\\\b0x\\(\\?:\\[a-f\\\\d_\\]\\+\\(\\?:\\\\\\.\\[a-f\\\\d_\\]\\*\\)\\?\\|\\\\\\.\\[a-f\\\\d_\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?i\\?\\(\\?!\\\\w\\)/i,
                              /\\(\\?:\\\\b\\\\d\\[\\\\d_\\]\\*\\(\\?:\\\\\\.\\[\\\\d_\\]\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\[\\\\d_\\]\\*\\)\\(\\?:e\\[\\+-\\]\\?\\[\\\\d_\\]\\+\\)\\?i\\?\\(\\?!\\\\w\\)/i,
                            ],
                            "operator": /\\[\\*\\\\/%\\^!=\\]=\\?\\|\\\\\\+\\[=\\+\\]\\?\\|-\\[=-\\]\\?\\|\\\\\\|\\[=\\|\\]\\?\\|&\\(\\?:=\\|&\\|\\\\\\^=\\?\\)\\?\\|>\\(\\?:>=\\?\\|=\\)\\?\\|<\\(\\?:<=\\?\\|=\\|-\\)\\?\\|:=\\|\\\\\\.\\\\\\.\\\\\\./,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|\`\\[\\^\`\\]\\*\`/,
                            },
                          },
                          "graphql": Object {
                            "atom-input": Object {
                              "alias": "class-name",
                              "pattern": /\\\\b\\[A-Z\\]\\\\w\\*Input\\\\b/,
                            },
                            "attr-name": Object {
                              "greedy": true,
                              "pattern": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)"\\]\\|"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\)\\*\\\\\\)\\)\\?:\\)/i,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:enum\\|implements\\|interface\\|on\\|scalar\\|type\\|union\\)\\\\s\\+\\|&\\\\s\\*\\|:\\\\s\\*\\|\\\\\\[\\)\\[A-Z_\\]\\\\w\\*/,
                            },
                            "comment": /#\\.\\*/,
                            "constant": /\\\\b\\[A-Z\\]\\[A-Z_\\\\d\\]\\*\\\\b/,
                            "definition-mutation": Object {
                              "alias": "function",
                              "lookbehind": true,
                              "pattern": /\\(\\\\bmutation\\\\s\\+\\)\\[a-zA-Z_\\]\\\\w\\*/,
                            },
                            "definition-query": Object {
                              "alias": "function",
                              "lookbehind": true,
                              "pattern": /\\(\\\\bquery\\\\s\\+\\)\\[a-zA-Z_\\]\\\\w\\*/,
                            },
                            "description": Object {
                              "alias": "string",
                              "greedy": true,
                              "inside": Object {
                                "language-markdown": Object {
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\(\\^"\\(\\?:""\\)\\?\\)\\(\\?!\\\\1\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                },
                              },
                              "pattern": /\\(\\?:"""\\(\\?:\\[\\^"\\]\\|\\(\\?!"""\\)"\\)\\*"""\\|"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\)\\(\\?=\\\\s\\*\\[a-z_\\]\\)/i,
                            },
                            "directive": Object {
                              "alias": "function",
                              "pattern": /@\\[a-z_\\]\\\\w\\*/i,
                            },
                            "fragment": Object {
                              "alias": "function",
                              "lookbehind": true,
                              "pattern": /\\(\\\\bfragment\\\\s\\+\\|\\\\\\.\\{3\\}\\\\s\\*\\(\\?!on\\\\b\\)\\)\\[a-zA-Z_\\]\\\\w\\*/,
                            },
                            "keyword": /\\\\b\\(\\?:directive\\|enum\\|extend\\|fragment\\|implements\\|input\\|interface\\|mutation\\|on\\|query\\|repeatable\\|scalar\\|schema\\|subscription\\|type\\|union\\)\\\\b/,
                            "number": /\\(\\?:\\\\B-\\|\\\\b\\)\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\\\b/i,
                            "object": /\\\\w\\+\\(\\?=\\\\s\\*\\\\\\{\\)/,
                            "operator": /\\[!=\\|&\\]\\|\\\\\\.\\{3\\}/,
                            "property": /\\\\w\\+/,
                            "property-query": /\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\)/,
                            "punctuation": /\\[!\\(\\)\\{\\}\\\\\\[\\\\\\]:=,\\]/,
                            "scalar": /\\\\b\\(\\?:Boolean\\|Float\\|ID\\|Int\\|String\\)\\\\b/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /"""\\(\\?:\\[\\^"\\]\\|\\(\\?!"""\\)"\\)\\*"""\\|"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"/,
                            },
                            "variable": /\\\\\\$\\[a-z_\\]\\\\w\\*/i,
                          },
                          "gv": Object {
                            "attr-name": Object {
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\[\\[;, \\\\t\\\\r\\\\n\\]\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)\\(\\?=\\[ \\\\t\\\\r\\\\n\\]\\*=\\)/,
                            },
                            "attr-value": Object {
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(=\\[ \\\\t\\\\r\\\\n\\]\\*\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)/,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\.\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\^#\\.\\*/m,
                            },
                            "compass-point": Object {
                              "alias": "builtin",
                              "lookbehind": true,
                              "pattern": /\\(:\\[ \\\\t\\\\r\\\\n\\]\\*\\)\\(\\?:\\[ns\\]\\[ew\\]\\?\\|\\[ewc_\\]\\)\\(\\?!\\[\\\\w\\\\x80-\\\\uFFFF\\]\\)/,
                            },
                            "graph-name": Object {
                              "alias": "class-name",
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:digraph\\|graph\\|subgraph\\)\\[ \\\\t\\\\r\\\\n\\]\\+\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)/i,
                            },
                            "keyword": /\\\\b\\(\\?:digraph\\|edge\\|graph\\|node\\|strict\\|subgraph\\)\\\\b/i,
                            "node": Object {
                              "greedy": true,
                              "inside": Object {
                                "markup": Object {
                                  "alias": Array [
                                    "language-markup",
                                    "language-html",
                                    "language-xml",
                                  ],
                                  "inside": Object {
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                    },
                                    "comment": Object {
                                      "greedy": true,
                                      "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                                    },
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                    },
                                    "tag": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "attr-name": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                          },
                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                        "attr-value": Object {
                                          "inside": Object {
                                            "entity": Array [
                                              Object {
                                                "alias": "named-entity",
                                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                              },
                                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                            ],
                                            "punctuation": Array [
                                              Object {
                                                "alias": "attr-equals",
                                                "pattern": /\\^=/,
                                              },
                                              /"\\|'/,
                                            ],
                                          },
                                          "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                        },
                                        "punctuation": /\\\\/\\?>/,
                                        "special-attr": Array [
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "css",
                                                      "language-css",
                                                    ],
                                                    "inside": Object {
                                                      "atrule": Object {
                                                        "inside": Object {
                                                          "keyword": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": Object {
                                                            "alias": "selector",
                                                            "inside": Object {
                                                              "attribute": Object {
                                                                "greedy": true,
                                                                "inside": Object {
                                                                  "attr-name": Object {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": Array [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    Object {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": Object {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": Object {
                                                                    "inside": Object {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": Array [
                                                                Object {
                                                                  "inside": Object {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": Array [
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                        },
                                                        Object {
                                                          "inside": Object {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      },
                                                      "hexcode": Object {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      },
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": Object {
                                                        "inside": Object {
                                                          "attribute": Object {
                                                            "greedy": true,
                                                            "inside": Object {
                                                              "attr-name": Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": Array [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                Object {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": Object {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": Object {
                                                                "inside": Object {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": Array [
                                                            Object {
                                                              "inside": Object {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                      },
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                      "url": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": Object {
                                                            "alias": "url",
                                                            "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "punctuation": Array [
                                                    Object {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "value": Object {
                                                    "alias": Array [
                                                      "javascript",
                                                      "language-javascript",
                                                    ],
                                                    "inside": Object {
                                                      "arrow": Object {
                                                        "alias": "operator",
                                                        "pattern": /=>/,
                                                      },
                                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                      "class-name": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "console": Object {
                                                        "alias": "class-name",
                                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                      },
                                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                      "dom": Object {
                                                        "alias": "variable",
                                                        "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                      },
                                                      "exports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                      },
                                                      "function": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "function-variable": Object {
                                                        "alias": "function",
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "hashbang": Object {
                                                        "alias": "comment",
                                                        "greedy": true,
                                                        "pattern": /\\^#!\\.\\*/,
                                                      },
                                                      "imports": Object {
                                                        "inside": [Circular],
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                      },
                                                      "keyword": Array [
                                                        Object {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": Array [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "known-class-name": Array [
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                        },
                                                        Object {
                                                          "alias": "class-name",
                                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                        },
                                                      ],
                                                      "literal-property": Object {
                                                        "alias": "property",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "maybe-class-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                      },
                                                      "method": Object {
                                                        "alias": Array [
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      },
                                                      "method-variable": Object {
                                                        "alias": Array [
                                                          "function-variable",
                                                          "method",
                                                          "function",
                                                          "property-access",
                                                        ],
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                      },
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                      },
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "parameter": Array [
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                        },
                                                        Object {
                                                          "inside": [Circular],
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                      ],
                                                      "property-access": Object {
                                                        "inside": Object {
                                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                      },
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "regex": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                          "regex-source": Object {
                                                            "alias": "language-regex",
                                                            "inside": undefined,
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                      },
                                                      "spread": Object {
                                                        "alias": "operator",
                                                        "pattern": /\\\\\\.\\{3\\}/,
                                                      },
                                                      "string": Object {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "string-property": Object {
                                                        "alias": "property",
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                      },
                                                      "template-string": Array [
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "css",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "html",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "embedded-code": Object {
                                                              "alias": "svg",
                                                              "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                            },
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                        Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "interpolation": Object {
                                                              "inside": Object {
                                                                "interpolation-punctuation": Object {
                                                                  "alias": "punctuation",
                                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                                },
                                                                "rest": [Circular],
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                            },
                                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                                            "template-punctuation": Object {
                                                              "alias": "string",
                                                              "pattern": /\\^\`\\|\`\\$/,
                                                            },
                                                          },
                                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                        },
                                                      ],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                          },
                                        ],
                                        "tag": Object {
                                          "inside": Object {
                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            "punctuation": /\\^<\\\\/\\?/,
                                          },
                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                        },
                                      },
                                      "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^<\\)\\[\\\\s\\\\S\\]\\+\\(\\?=>\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-\\.\\\\w\\\\x80-\\\\uFFFF\\\\\\\\\\]\\)\\(\\?:\\[a-zA-Z_\\\\x80-\\\\uFFFF\\]\\[\\\\w\\\\x80-\\\\uFFFF\\]\\*\\|-\\?\\(\\?:\\\\\\.\\\\d\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\|"\\[\\^"\\\\\\\\\\]\\*\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\[\\^"\\\\\\\\\\]\\*\\)\\*"\\|<\\(\\?:\\[\\^<>\\]\\|\\(\\?!<!--\\)<\\(\\?:\\[\\^<>"'\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+>\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*>\\)/,
                            },
                            "operator": /\\[=:\\]\\|-\\[->\\]/,
                            "punctuation": /\\[\\[\\\\\\]\\{\\};,\\]/,
                          },
                          "handlebars": Object {
                            "block": Object {
                              "alias": "keyword",
                              "lookbehind": true,
                              "pattern": /\\^\\(\\\\s\\*\\(\\?:~\\\\s\\*\\)\\?\\)\\[#\\\\/\\]\\\\S\\+\\?\\(\\?=\\\\s\\*\\(\\?:~\\\\s\\*\\)\\?\\$\\|\\\\s\\)/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "brackets": Object {
                              "inside": Object {
                                "punctuation": /\\\\\\[\\|\\\\\\]/,
                                "variable": /\\[\\\\s\\\\S\\]\\+/,
                              },
                              "pattern": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                            },
                            "comment": /\\\\\\{\\\\\\{!\\[\\\\s\\\\S\\]\\*\\?\\\\\\}\\\\\\}/,
                            "delimiter": Object {
                              "alias": "punctuation",
                              "pattern": /\\^\\\\\\{\\\\\\{\\\\\\{\\?\\|\\\\\\}\\\\\\}\\\\\\}\\?\\$/,
                            },
                            "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                            "punctuation": /\\[!"#%&':\\(\\)\\*\\+,\\.\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\]/,
                            "string": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            "variable": /\\[\\^!"#%&'\\(\\)\\*\\+,\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\\\s\\]\\+/,
                          },
                          "hbs": Object {
                            "block": Object {
                              "alias": "keyword",
                              "lookbehind": true,
                              "pattern": /\\^\\(\\\\s\\*\\(\\?:~\\\\s\\*\\)\\?\\)\\[#\\\\/\\]\\\\S\\+\\?\\(\\?=\\\\s\\*\\(\\?:~\\\\s\\*\\)\\?\\$\\|\\\\s\\)/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "brackets": Object {
                              "inside": Object {
                                "punctuation": /\\\\\\[\\|\\\\\\]/,
                                "variable": /\\[\\\\s\\\\S\\]\\+/,
                              },
                              "pattern": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                            },
                            "comment": /\\\\\\{\\\\\\{!\\[\\\\s\\\\S\\]\\*\\?\\\\\\}\\\\\\}/,
                            "delimiter": Object {
                              "alias": "punctuation",
                              "pattern": /\\^\\\\\\{\\\\\\{\\\\\\{\\?\\|\\\\\\}\\\\\\}\\\\\\}\\?\\$/,
                            },
                            "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                            "punctuation": /\\[!"#%&':\\(\\)\\*\\+,\\.\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\]/,
                            "string": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            "variable": /\\[\\^!"#%&'\\(\\)\\*\\+,\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\\\s\\]\\+/,
                          },
                          "html": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "arrow": Object {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": Object {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                              },
                                              "exports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": Object {
                                                "alias": "function",
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "imports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": Array [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                Object {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": Array [
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "maybe-class-name": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": Object {
                                                "alias": Array [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": Object {
                                                "alias": Array [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": Object {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Array [
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "css",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "html",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "svg",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              ],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "insertBefore": [Function],
                          "javascript": Object {
                            "arrow": Object {
                              "alias": "operator",
                              "pattern": /=>/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "class-name": Array [
                              Object {
                                "inside": Object {
                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                              },
                            ],
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "console": Object {
                              "alias": "class-name",
                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                            },
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "dom": Object {
                              "alias": "variable",
                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                            },
                            "exports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                            },
                            "function": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "function-variable": Object {
                              "alias": "function",
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/,
                            },
                            "imports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                            },
                            "keyword": Array [
                              Object {
                                "alias": "module",
                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                              },
                              Object {
                                "alias": "control-flow",
                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                              },
                              Object {
                                "alias": Array [
                                  "null",
                                  "nil",
                                ],
                                "pattern": /\\\\bnull\\\\b/,
                              },
                              Object {
                                "alias": "nil",
                                "pattern": /\\\\bundefined\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                              },
                            ],
                            "known-class-name": Array [
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                              },
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                              },
                            ],
                            "literal-property": Object {
                              "alias": "property",
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "maybe-class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "method": Object {
                              "alias": Array [
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "method-variable": Object {
                              "alias": Array [
                                "function-variable",
                                "method",
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "parameter": Array [
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                              },
                            ],
                            "property-access": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                            },
                            "spread": Object {
                              "alias": "operator",
                              "pattern": /\\\\\\.\\{3\\}/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            },
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "template-string": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "css",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "html",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "svg",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "inside": Object {
                                      "interpolation-punctuation": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                  },
                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                            ],
                          },
                          "js": Object {
                            "arrow": Object {
                              "alias": "operator",
                              "pattern": /=>/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "class-name": Array [
                              Object {
                                "inside": Object {
                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                              },
                            ],
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "console": Object {
                              "alias": "class-name",
                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                            },
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "dom": Object {
                              "alias": "variable",
                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                            },
                            "exports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                            },
                            "function": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "function-variable": Object {
                              "alias": "function",
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/,
                            },
                            "imports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                            },
                            "keyword": Array [
                              Object {
                                "alias": "module",
                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                              },
                              Object {
                                "alias": "control-flow",
                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                              },
                              Object {
                                "alias": Array [
                                  "null",
                                  "nil",
                                ],
                                "pattern": /\\\\bnull\\\\b/,
                              },
                              Object {
                                "alias": "nil",
                                "pattern": /\\\\bundefined\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                              },
                            ],
                            "known-class-name": Array [
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                              },
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                              },
                            ],
                            "literal-property": Object {
                              "alias": "property",
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "maybe-class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "method": Object {
                              "alias": Array [
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "method-variable": Object {
                              "alias": Array [
                                "function-variable",
                                "method",
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "parameter": Array [
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                              },
                              Object {
                                "inside": [Circular],
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                              },
                            ],
                            "property-access": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                            },
                            "spread": Object {
                              "alias": "operator",
                              "pattern": /\\\\\\.\\{3\\}/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            },
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "template-string": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "css",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "html",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "svg",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "inside": Object {
                                      "interpolation-punctuation": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                  },
                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                            ],
                          },
                          "json": Object {
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\.\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                            },
                            "null": Object {
                              "alias": "keyword",
                              "pattern": /\\\\bnull\\\\b/,
                            },
                            "number": /-\\?\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\\\b/i,
                            "operator": /:/,
                            "property": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?=\\\\s\\*:\\)/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\],\\]/,
                            "string": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?!\\\\s\\*:\\)/,
                            },
                          },
                          "jsx": Object {
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/gi,
                            },
                            "class-name": Array [
                              Object {
                                "inside": Object {
                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                              },
                            ],
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                              },
                            ],
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/gi,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            "function-variable": Object {
                              "alias": "function",
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/g,
                            },
                            "keyword": Array [
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                              },
                            ],
                            "literal-property": Object {
                              "alias": "property",
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "parameter": Array [
                              Object {
                                "inside": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "class-name": Array [
                                    Object {
                                      "inside": Object {
                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                    },
                                  ],
                                  "comment": Array [
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                    },
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                    },
                                  ],
                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                  "function-variable": Object {
                                    "alias": "function",
                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                  },
                                  "hashbang": Object {
                                    "alias": "comment",
                                    "greedy": true,
                                    "pattern": /\\^#!\\.\\*/g,
                                  },
                                  "keyword": Array [
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                    },
                                  ],
                                  "literal-property": Object {
                                    "alias": "property",
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                  },
                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                  "parameter": [Circular],
                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                  "regex": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                      "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                      "regex-source": Object {
                                        "alias": "language-regex",
                                        "inside": undefined,
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                  },
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                  },
                                  "string-property": Object {
                                    "alias": "property",
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                  },
                                  "template-string": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                              },
                              Object {
                                "inside": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "class-name": Array [
                                    Object {
                                      "inside": Object {
                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                    },
                                  ],
                                  "comment": Array [
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                    },
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                    },
                                  ],
                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                  "function-variable": Object {
                                    "alias": "function",
                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                  },
                                  "hashbang": Object {
                                    "alias": "comment",
                                    "greedy": true,
                                    "pattern": /\\^#!\\.\\*/g,
                                  },
                                  "keyword": Array [
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                    },
                                  ],
                                  "literal-property": Object {
                                    "alias": "property",
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                  },
                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                  "parameter": [Circular],
                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                  "regex": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                      "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                      "regex-source": Object {
                                        "alias": "language-regex",
                                        "inside": undefined,
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                  },
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                  },
                                  "string-property": Object {
                                    "alias": "property",
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                  },
                                  "template-string": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                              },
                              Object {
                                "inside": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "class-name": Array [
                                    Object {
                                      "inside": Object {
                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                    },
                                  ],
                                  "comment": Array [
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                    },
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                    },
                                  ],
                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                  "function-variable": Object {
                                    "alias": "function",
                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                  },
                                  "hashbang": Object {
                                    "alias": "comment",
                                    "greedy": true,
                                    "pattern": /\\^#!\\.\\*/g,
                                  },
                                  "keyword": Array [
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                    },
                                  ],
                                  "literal-property": Object {
                                    "alias": "property",
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                  },
                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                  "parameter": [Circular],
                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                  "regex": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                      "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                      "regex-source": Object {
                                        "alias": "language-regex",
                                        "inside": undefined,
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                  },
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                  },
                                  "string-property": Object {
                                    "alias": "property",
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                  },
                                  "template-string": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                              },
                              Object {
                                "inside": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "class-name": Array [
                                    Object {
                                      "inside": Object {
                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                    },
                                  ],
                                  "comment": Array [
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                    },
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                    },
                                  ],
                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                  "function-variable": Object {
                                    "alias": "function",
                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                  },
                                  "hashbang": Object {
                                    "alias": "comment",
                                    "greedy": true,
                                    "pattern": /\\^#!\\.\\*/g,
                                  },
                                  "keyword": Array [
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                    },
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                    },
                                  ],
                                  "literal-property": Object {
                                    "alias": "property",
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                  },
                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                  "parameter": [Circular],
                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                  "regex": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                      "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                      "regex-source": Object {
                                        "alias": "language-regex",
                                        "inside": undefined,
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                  },
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                  },
                                  "string-property": Object {
                                    "alias": "property",
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                  },
                                  "template-string": Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                              },
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/g,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        "function-variable": Object {
                                          "alias": "function",
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "interpolation-punctuation": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                            },
                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                            "template-punctuation": Object {
                                              "alias": "string",
                                              "pattern": /\\^\`\\|\`\\$/,
                                            },
                                          },
                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    "function-variable": Object {
                                      "alias": "function",
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "interpolation": Object {
                                          "inside": Object {
                                            "interpolation-punctuation": Object {
                                              "alias": "punctuation",
                                              "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                            },
                                            "rest": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                        },
                                        "string": /\\[\\\\s\\\\S\\]\\+/,
                                        "template-punctuation": Object {
                                          "alias": "string",
                                          "pattern": /\\^\`\\|\`\\$/,
                                        },
                                      },
                                      "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/gi,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                            },
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/gi,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\(\\?!\\\\\\{\\)\\(\\?:"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s'">\\]\\+\\)/,
                                },
                                "comment": Array [
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                  },
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                  },
                                ],
                                "punctuation": /\\\\/\\?>/,
                                "script": Object {
                                  "alias": "language-javascript",
                                  "inside": Object {
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "cdata": Object {
                                      "greedy": true,
                                      "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/gi,
                                    },
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                      },
                                    ],
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "doctype": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "doctype-tag": /\\^DOCTYPE/i,
                                        "internal-subset": Object {
                                          "greedy": true,
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                        },
                                        "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                        "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                        },
                                      },
                                      "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/gi,
                                    },
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    "function-variable": Object {
                                      "alias": "function",
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/g,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                          "class-name": Array [
                                            Object {
                                              "inside": Object {
                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                            },
                                          ],
                                          "comment": Array [
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "hashbang": Object {
                                            "alias": "comment",
                                            "greedy": true,
                                            "pattern": /\\^#!\\.\\*/g,
                                          },
                                          "keyword": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                            },
                                          ],
                                          "literal-property": Object {
                                            "alias": "property",
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                          },
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                          },
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "parameter": [Circular],
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                              "regex-source": Object {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                          },
                                          "string-property": Object {
                                            "alias": "property",
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                          "class-name": Array [
                                            Object {
                                              "inside": Object {
                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                            },
                                          ],
                                          "comment": Array [
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "hashbang": Object {
                                            "alias": "comment",
                                            "greedy": true,
                                            "pattern": /\\^#!\\.\\*/g,
                                          },
                                          "keyword": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                            },
                                          ],
                                          "literal-property": Object {
                                            "alias": "property",
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                          },
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                          },
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "parameter": [Circular],
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                              "regex-source": Object {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                          },
                                          "string-property": Object {
                                            "alias": "property",
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                          "class-name": Array [
                                            Object {
                                              "inside": Object {
                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                            },
                                          ],
                                          "comment": Array [
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "hashbang": Object {
                                            "alias": "comment",
                                            "greedy": true,
                                            "pattern": /\\^#!\\.\\*/g,
                                          },
                                          "keyword": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                            },
                                          ],
                                          "literal-property": Object {
                                            "alias": "property",
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                          },
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                          },
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "parameter": [Circular],
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                              "regex-source": Object {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                          },
                                          "string-property": Object {
                                            "alias": "property",
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                          "class-name": Array [
                                            Object {
                                              "inside": Object {
                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                            },
                                          ],
                                          "comment": Array [
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "hashbang": Object {
                                            "alias": "comment",
                                            "greedy": true,
                                            "pattern": /\\^#!\\.\\*/g,
                                          },
                                          "keyword": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                            },
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                            },
                                          ],
                                          "literal-property": Object {
                                            "alias": "property",
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                          },
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                          },
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "parameter": [Circular],
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                              "regex-source": Object {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                          },
                                          "string-property": Object {
                                            "alias": "property",
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "prolog": Object {
                                      "greedy": true,
                                      "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/g,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                    },
                                    "script": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-javascript": Object {
                                              "inside": Object {
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "class-name": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                  },
                                                ],
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "literal-property": Object {
                                                  "alias": "property",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": Array [
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  Object {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-javascript": Object {
                                          "inside": Object {
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "class-name": Array [
                                              Object {
                                                "inside": Object {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                              },
                                            ],
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "function-variable": Object {
                                              "alias": "function",
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "literal-property": Object {
                                              "alias": "property",
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "parameter": Array [
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                              },
                                              Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "interpolation": Object {
                                                  "inside": Object {
                                                    "interpolation-punctuation": Object {
                                                      "alias": "punctuation",
                                                      "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                    },
                                                    "rest": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                },
                                                "string": /\\[\\\\s\\\\S\\]\\+/,
                                                "template-punctuation": Object {
                                                  "alias": "string",
                                                  "pattern": /\\^\`\\|\`\\$/,
                                                },
                                              },
                                              "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/gi,
                                    },
                                    "script-punctuation": Object {
                                      "alias": "punctuation",
                                      "pattern": /\\^=\\(\\?=\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                    },
                                    "style": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "included-cdata": Object {
                                          "inside": Object {
                                            "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                            "language-css": Object {
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                    },
                                                    "rest": [Circular],
                                                    "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                    "selector-function-argument": Object {
                                                      "alias": "selector",
                                                      "inside": Object {
                                                        "attribute": Object {
                                                          "greedy": true,
                                                          "inside": Object {
                                                            "attr-name": Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                            },
                                                            "attr-value": Array [
                                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                              },
                                                            ],
                                                            "case-sensitivity": Object {
                                                              "alias": "keyword",
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                            },
                                                            "namespace": Object {
                                                              "inside": Object {
                                                                "punctuation": /\\\\\\|\\$/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                            },
                                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                          },
                                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                        },
                                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                        "id": /#\\[-\\\\w\\]\\+/,
                                                        "n-th": Array [
                                                          Object {
                                                            "inside": Object {
                                                              "number": /\\[\\\\dn\\]\\+/,
                                                              "operator": /\\[\\+-\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                          },
                                                        ],
                                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                },
                                                "color": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                  },
                                                  Object {
                                                    "inside": Object {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                },
                                                "hexcode": Object {
                                                  "alias": "color",
                                                  "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                                },
                                                "important": /!important\\\\b/i,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                },
                                                "property": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                },
                                                "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                                },
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                },
                                                "url": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "function": /\\^url/i,
                                                    "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                    "string": Object {
                                                      "alias": "url",
                                                      "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                    },
                                                  },
                                                  "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                            },
                                          },
                                          "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                        },
                                        "language-css": Object {
                                          "inside": Object {
                                            "atrule": Object {
                                              "inside": Object {
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                },
                                                "rest": [Circular],
                                                "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                "selector-function-argument": Object {
                                                  "alias": "selector",
                                                  "inside": Object {
                                                    "attribute": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                        },
                                                        "attr-value": Array [
                                                          /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                          },
                                                        ],
                                                        "case-sensitivity": Object {
                                                          "alias": "keyword",
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                        },
                                                        "namespace": Object {
                                                          "inside": Object {
                                                            "punctuation": /\\\\\\|\\$/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                        },
                                                        "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                        "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                      },
                                                      "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                    },
                                                    "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                    "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                    "id": /#\\[-\\\\w\\]\\+/,
                                                    "n-th": Array [
                                                      Object {
                                                        "inside": Object {
                                                          "number": /\\[\\\\dn\\]\\+/,
                                                          "operator": /\\[\\+-\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                      },
                                                    ],
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                              },
                                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                            },
                                            "color": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                              },
                                              Object {
                                                "inside": Object {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                            },
                                            "hexcode": Object {
                                              "alias": "color",
                                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                            },
                                            "important": /!important\\\\b/i,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                            },
                                            "property": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                            },
                                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                            "selector": Object {
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                            },
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "function": /\\^url/i,
                                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                "string": Object {
                                                  "alias": "url",
                                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                },
                                              },
                                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                            },
                                            "variable": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                            },
                                          },
                                          "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/gi,
                                    },
                                    "tag": [Circular],
                                    "template-string": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "interpolation": Object {
                                          "inside": Object {
                                            "interpolation-punctuation": Object {
                                              "alias": "punctuation",
                                              "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                            },
                                            "rest": Object {
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                                },
                                              ],
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              "function-variable": Object {
                                                "alias": "function",
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/g,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                              },
                                              "template-string": [Circular],
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                        },
                                        "string": /\\[\\\\s\\\\S\\]\\+/,
                                        "template-punctuation": Object {
                                          "alias": "string",
                                          "pattern": /\\^\`\\|\`\\$/,
                                        },
                                      },
                                      "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                                    },
                                  },
                                  "pattern": /=\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)/,
                                },
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              "function-variable": Object {
                                                "alias": "function",
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "spread": Object {
                                  "inside": [Circular],
                                  "pattern": /\\(\\?:\\\\\\{\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\*\\\\\\.\\{3\\}\\(\\?:\\[\\^\\{\\}\\]\\|\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)\\)\\*\\\\\\}\\)/,
                                },
                                "tag": Object {
                                  "inside": Object {
                                    "class-name": /\\^\\[A-Z\\]\\\\w\\*\\(\\?:\\\\\\.\\[A-Z\\]\\\\w\\*\\)\\*\\$/,
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\*/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?:\\[\\\\w\\.:-\\]\\+\\(\\?:\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\+\\(\\?:\\[\\\\w\\.:\\$-\\]\\+\\(\\?:=\\(\\?:"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s\\{'"/>=\\]\\+\\|\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)\\)\\)\\?\\|\\(\\?:\\\\\\{\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\*\\\\\\.\\{3\\}\\(\\?:\\[\\^\\{\\}\\]\\|\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)\\)\\*\\\\\\}\\)\\)\\)\\*\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\*\\\\/\\?\\)\\?>/g,
                            },
                            "template-string": Object {
                              "greedy": true,
                              "inside": Object {
                                "interpolation": Object {
                                  "inside": Object {
                                    "interpolation-punctuation": Object {
                                      "alias": "punctuation",
                                      "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                    },
                                    "rest": Object {
                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                      "class-name": Array [
                                        Object {
                                          "inside": Object {
                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                        },
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                        },
                                      ],
                                      "comment": Array [
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/g,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "hashbang": Object {
                                        "alias": "comment",
                                        "greedy": true,
                                        "pattern": /\\^#!\\.\\*/g,
                                      },
                                      "keyword": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                        },
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                        },
                                      ],
                                      "literal-property": Object {
                                        "alias": "property",
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                      },
                                      "number": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                      },
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "parameter": Array [
                                        Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                        Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                        },
                                        Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                        },
                                        Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                          "regex-source": Object {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/g,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/g,
                                      },
                                      "string-property": Object {
                                        "alias": "property",
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/gm,
                                      },
                                      "template-string": [Circular],
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                },
                                "string": /\\[\\\\s\\\\S\\]\\+/,
                                "template-punctuation": Object {
                                  "alias": "string",
                                  "pattern": /\\^\`\\|\`\\$/,
                                },
                              },
                              "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/g,
                            },
                          },
                          "less": Object {
                            "atrule": Object {
                              "inside": Object {
                                "punctuation": /\\[:\\(\\)\\]/,
                              },
                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\{\\}\\]\\|\\\\\\(\\[\\^\\(\\)\\{\\}\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\[\\^\\(\\)\\{\\};\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\)\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/,
                            },
                            "color": Array [
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                              },
                              Object {
                                "inside": Object {
                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "punctuation": /\\[\\(\\),\\]/,
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                  },
                                },
                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                              },
                            ],
                            "comment": Array [
                              /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                            },
                            "hexcode": Object {
                              "alias": "color",
                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                            },
                            "important": /!important\\\\b/i,
                            "mixin-usage": Object {
                              "alias": "function",
                              "lookbehind": true,
                              "pattern": /\\(\\[\\{;\\]\\\\s\\*\\)\\[\\.#\\]\\(\\?!\\\\d\\)\\[\\\\w-\\]\\.\\*\\?\\(\\?=\\[\\(;\\]\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                            },
                            "operator": /\\[\\+\\\\-\\*\\\\/\\]/,
                            "property": /\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\[\\\\w-\\]\\)\\+\\(\\?:\\\\\\+_\\?\\)\\?\\(\\?=\\\\s\\*:\\)/,
                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                            "selector": Object {
                              "inside": Object {
                                "variable": /@\\+\\[\\\\w-\\]\\+/,
                              },
                              "pattern": /\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\[\\^\\{\\};\\\\s@\\]\\)\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\{\\}\\]\\|\\\\\\(\\[\\^\\(\\)\\{\\}\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\[\\^\\(\\)\\{\\};@\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\)\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                            },
                            "unit": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                            },
                            "url": Object {
                              "greedy": true,
                              "inside": Object {
                                "function": /\\^url/i,
                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                "string": Object {
                                  "alias": "url",
                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                },
                              },
                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                            },
                            "variable": Array [
                              Object {
                                "inside": Object {
                                  "punctuation": /:/,
                                },
                                "pattern": /@\\[\\\\w-\\]\\+\\\\s\\*:/,
                              },
                              /@@\\?\\[\\\\w-\\]\\+/,
                            ],
                          },
                          "makefile": Object {
                            "builtin-target": Object {
                              "alias": "builtin",
                              "pattern": /\\\\\\.\\[A-Z\\]\\[\\^:#=\\\\s\\]\\+\\(\\?=\\\\s\\*:\\(\\?!=\\)\\)/,
                            },
                            "comment": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*/,
                            },
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\(\\)\\(\\?:abspath\\|addsuffix\\|and\\|basename\\|call\\|dir\\|error\\|eval\\|file\\|filter\\(\\?:-out\\)\\?\\|findstring\\|firstword\\|flavor\\|foreach\\|guile\\|if\\|info\\|join\\|lastword\\|load\\|notdir\\|or\\|origin\\|patsubst\\|realpath\\|shell\\|sort\\|strip\\|subst\\|suffix\\|value\\|warning\\|wildcard\\|word\\(\\?:list\\|s\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\)/,
                            },
                            "keyword": /-include\\\\b\\|\\\\b\\(\\?:define\\|else\\|endef\\|endif\\|export\\|ifn\\?def\\|ifn\\?eq\\|include\\|override\\|private\\|sinclude\\|undefine\\|unexport\\|vpath\\)\\\\b/,
                            "operator": /\\(\\?:::\\|\\[\\?:\\+!\\]\\)\\?=\\|\\[\\|@\\]/,
                            "punctuation": /\\[:;\\(\\)\\{\\}\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            },
                            "target": Object {
                              "alias": "symbol",
                              "inside": Object {
                                "variable": /\\\\\\$\\+\\(\\?:\\(\\?!\\\\\\$\\)\\[\\^\\(\\)\\{\\}:#=\\\\s\\]\\+\\|\\(\\?=\\[\\(\\{\\]\\)\\)/,
                              },
                              "pattern": /\\^\\(\\?:\\[\\^:=\\\\s\\]\\|\\[ \\\\t\\]\\+\\(\\?!\\[\\\\s:\\]\\)\\)\\+\\(\\?=\\\\s\\*:\\(\\?!=\\)\\)/m,
                            },
                            "variable": /\\\\\\$\\+\\(\\?:\\(\\?!\\\\\\$\\)\\[\\^\\(\\)\\{\\}:#=\\\\s\\]\\+\\|\\\\\\(\\[@\\*%<\\^\\+\\?\\]\\[DF\\]\\\\\\)\\|\\(\\?=\\[\\(\\{\\]\\)\\)/,
                          },
                          "markdown": Object {
                            "blockquote": Object {
                              "alias": "punctuation",
                              "pattern": /\\^>\\(\\?:\\[\\\\t \\]\\*>\\)\\*/m,
                            },
                            "bold": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "italic": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": [Circular],
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                        },
                                        "punctuation": /\\[\\*_\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                    },
                                    "strike": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": [Circular],
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                        },
                                        "punctuation": /~~\\?/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": [Circular],
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                        },
                                        "operator": /\\^!/,
                                        "string": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                        },
                                        "url": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                },
                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                            },
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "code": Array [
                              Object {
                                "alias": "keyword",
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\n\\)\\[ \\\\t\\]\\*\\\\n\\|\\(\\?:\\^\\|\\\\r\\\\n\\?\\)\\[ \\\\t\\]\\*\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\)\\*/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "code-block": Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(\`\`\`\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\^\`\`\`\\$\\)/m,
                                  },
                                  "code-language": Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(\`\`\`\\)\\.\\+/,
                                  },
                                  "punctuation": /\`\`\`/,
                                },
                                "pattern": /\\^\`\`\`\\[\\\\s\\\\S\\]\\*\\?\\^\`\`\`\\$/m,
                              },
                            ],
                            "code-snippet": Object {
                              "alias": Array [
                                "code",
                                "keyword",
                              ],
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "front-matter-block": Object {
                              "greedy": true,
                              "inside": Object {
                                "front-matter": Object {
                                  "alias": Array [
                                    "yaml",
                                    "language-yaml",
                                  ],
                                  "inside": undefined,
                                  "pattern": /\\\\S\\+\\(\\?:\\\\s\\+\\\\S\\+\\)\\*/,
                                },
                                "punctuation": /\\^---\\|---\\$/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\(\\?:\\\\s\\*\\[\\\\r\\\\n\\]\\)\\?\\)---\\(\\?!\\.\\)\\[\\\\s\\\\S\\]\\*\\?\\[\\\\r\\\\n\\]---\\(\\?!\\.\\)/,
                            },
                            "hr": Object {
                              "alias": "punctuation",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\\\s\\*\\)\\(\\[\\*-\\]\\)\\(\\?:\\[\\\\t \\]\\*\\\\2\\)\\{2,\\}\\(\\?=\\\\s\\*\\$\\)/m,
                            },
                            "italic": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "bold": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": [Circular],
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                        },
                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                    },
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "strike": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": [Circular],
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                        },
                                        "punctuation": /~~\\?/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": [Circular],
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                        },
                                        "operator": /\\^!/,
                                        "string": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                        },
                                        "url": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                },
                                "punctuation": /\\[\\*_\\]/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                            },
                            "list": Object {
                              "alias": "punctuation",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\\\s\\*\\)\\(\\?:\\[\\*\\+-\\]\\|\\\\d\\+\\\\\\.\\)\\(\\?=\\[\\\\t \\]\\.\\)/m,
                            },
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                            },
                            "strike": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "bold": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": [Circular],
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                        },
                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                    },
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "italic": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "strike": [Circular],
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                        },
                                        "punctuation": /\\[\\*_\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                        },
                                        "operator": /\\^!/,
                                        "string": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                        },
                                        "url": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                },
                                "punctuation": /~~\\?/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                            },
                            "table": Object {
                              "inside": Object {
                                "table-data-rows": Object {
                                  "inside": Object {
                                    "punctuation": /\\\\\\|/,
                                    "table-data": Object {
                                      "inside": [Circular],
                                      "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*\\$/,
                                },
                                "table-header-row": Object {
                                  "inside": Object {
                                    "punctuation": /\\\\\\|/,
                                    "table-header": Object {
                                      "alias": "important",
                                      "inside": [Circular],
                                      "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                    },
                                  },
                                  "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\$/,
                                },
                                "table-line": Object {
                                  "inside": Object {
                                    "punctuation": /\\\\\\|\\|:\\?-\\{3,\\}:\\?/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\$/,
                                },
                              },
                              "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*/m,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "arrow": Object {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": Object {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                              },
                                              "exports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": Object {
                                                "alias": "function",
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "imports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": Array [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                Object {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": Array [
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "maybe-class-name": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": Object {
                                                "alias": Array [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": Object {
                                                "alias": Array [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": Object {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Array [
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "css",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "html",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "svg",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              ],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                            "title": Array [
                              Object {
                                "alias": "important",
                                "inside": Object {
                                  "punctuation": /==\\+\\$\\|--\\+\\$/,
                                },
                                "pattern": /\\\\S\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:==\\+\\|--\\+\\)\\(\\?=\\[ \\\\t\\]\\*\\$\\)/m,
                              },
                              Object {
                                "alias": "important",
                                "inside": Object {
                                  "punctuation": /\\^#\\+\\|#\\+\\$/,
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\^\\\\s\\*\\)#\\.\\+/m,
                              },
                            ],
                            "url": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "bold": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                        },
                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                    },
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "italic": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                        },
                                        "punctuation": /\\[\\*_\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                    },
                                    "strike": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "url": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                        },
                                        "punctuation": /~~\\?/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                },
                                "operator": /\\^!/,
                                "string": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                },
                                "url": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                },
                                "variable": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                            },
                            "url-reference": Object {
                              "alias": "url",
                              "inside": Object {
                                "punctuation": /\\^\\[\\\\\\[\\\\\\]!:\\]\\|\\[<>\\]/,
                                "string": /\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\$/,
                                "variable": Object {
                                  "lookbehind": true,
                                  "pattern": /\\^\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+/,
                                },
                              },
                              "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]:\\[\\\\t \\]\\+\\(\\?:\\\\S\\+\\|<\\(\\?:\\\\\\\\\\.\\|\\[\\^>\\\\\\\\\\]\\)\\+>\\)\\(\\?:\\[\\\\t \\]\\+\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\)\\?/,
                            },
                          },
                          "markup": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "arrow": Object {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": Object {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                              },
                                              "exports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": Object {
                                                "alias": "function",
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "imports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": Array [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                Object {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": Array [
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "maybe-class-name": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": Object {
                                                "alias": Array [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": Object {
                                                "alias": Array [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": Object {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Array [
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "css",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "html",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "svg",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              ],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "markup-templating": Object {},
                          "mathml": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "arrow": Object {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": Object {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                              },
                                              "exports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": Object {
                                                "alias": "function",
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "imports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": Array [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                Object {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": Array [
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "maybe-class-name": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": Object {
                                                "alias": Array [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": Object {
                                                "alias": Array [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": Object {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Array [
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "css",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "html",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "svg",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              ],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "md": Object {
                            "blockquote": Object {
                              "alias": "punctuation",
                              "pattern": /\\^>\\(\\?:\\[\\\\t \\]\\*>\\)\\*/m,
                            },
                            "bold": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "italic": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": [Circular],
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                        },
                                        "punctuation": /\\[\\*_\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                    },
                                    "strike": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": [Circular],
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                        },
                                        "punctuation": /~~\\?/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": [Circular],
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                        },
                                        "operator": /\\^!/,
                                        "string": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                        },
                                        "url": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                },
                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                            },
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "code": Array [
                              Object {
                                "alias": "keyword",
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\n\\)\\[ \\\\t\\]\\*\\\\n\\|\\(\\?:\\^\\|\\\\r\\\\n\\?\\)\\[ \\\\t\\]\\*\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\)\\*/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "code-block": Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(\`\`\`\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\^\`\`\`\\$\\)/m,
                                  },
                                  "code-language": Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(\`\`\`\\)\\.\\+/,
                                  },
                                  "punctuation": /\`\`\`/,
                                },
                                "pattern": /\\^\`\`\`\\[\\\\s\\\\S\\]\\*\\?\\^\`\`\`\\$/m,
                              },
                            ],
                            "code-snippet": Object {
                              "alias": Array [
                                "code",
                                "keyword",
                              ],
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "front-matter-block": Object {
                              "greedy": true,
                              "inside": Object {
                                "front-matter": Object {
                                  "alias": Array [
                                    "yaml",
                                    "language-yaml",
                                  ],
                                  "inside": undefined,
                                  "pattern": /\\\\S\\+\\(\\?:\\\\s\\+\\\\S\\+\\)\\*/,
                                },
                                "punctuation": /\\^---\\|---\\$/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\(\\?:\\\\s\\*\\[\\\\r\\\\n\\]\\)\\?\\)---\\(\\?!\\.\\)\\[\\\\s\\\\S\\]\\*\\?\\[\\\\r\\\\n\\]---\\(\\?!\\.\\)/,
                            },
                            "hr": Object {
                              "alias": "punctuation",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\\\s\\*\\)\\(\\[\\*-\\]\\)\\(\\?:\\[\\\\t \\]\\*\\\\2\\)\\{2,\\}\\(\\?=\\\\s\\*\\$\\)/m,
                            },
                            "italic": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "bold": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": [Circular],
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                        },
                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                    },
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "strike": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": [Circular],
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                        },
                                        "punctuation": /~~\\?/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": [Circular],
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                        },
                                        "operator": /\\^!/,
                                        "string": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                        },
                                        "url": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                },
                                "punctuation": /\\[\\*_\\]/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                            },
                            "list": Object {
                              "alias": "punctuation",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\\\s\\*\\)\\(\\?:\\[\\*\\+-\\]\\|\\\\d\\+\\\\\\.\\)\\(\\?=\\[\\\\t \\]\\.\\)/m,
                            },
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                            },
                            "strike": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "bold": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": [Circular],
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                        },
                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                    },
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "italic": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                    "url": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                        },
                                                        "operator": /\\^!/,
                                                        "string": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                        },
                                                        "url": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                        },
                                                        "variable": Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "strike": [Circular],
                                            "url": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                },
                                                "operator": /\\^!/,
                                                "string": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                },
                                                "url": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                },
                                                "variable": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                        },
                                        "punctuation": /\\[\\*_\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                        },
                                        "operator": /\\^!/,
                                        "string": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                        },
                                        "url": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                },
                                "punctuation": /~~\\?/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                            },
                            "table": Object {
                              "inside": Object {
                                "table-data-rows": Object {
                                  "inside": Object {
                                    "punctuation": /\\\\\\|/,
                                    "table-data": Object {
                                      "inside": [Circular],
                                      "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*\\$/,
                                },
                                "table-header-row": Object {
                                  "inside": Object {
                                    "punctuation": /\\\\\\|/,
                                    "table-header": Object {
                                      "alias": "important",
                                      "inside": [Circular],
                                      "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                    },
                                  },
                                  "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\$/,
                                },
                                "table-line": Object {
                                  "inside": Object {
                                    "punctuation": /\\\\\\|\\|:\\?-\\{3,\\}:\\?/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\$/,
                                },
                              },
                              "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*/m,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "arrow": Object {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": Object {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                              },
                                              "exports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": Object {
                                                "alias": "function",
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "imports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": Array [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                Object {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": Array [
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "maybe-class-name": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": Object {
                                                "alias": Array [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": Object {
                                                "alias": Array [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": Object {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Array [
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "css",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "html",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "svg",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              ],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                            "title": Array [
                              Object {
                                "alias": "important",
                                "inside": Object {
                                  "punctuation": /==\\+\\$\\|--\\+\\$/,
                                },
                                "pattern": /\\\\S\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:==\\+\\|--\\+\\)\\(\\?=\\[ \\\\t\\]\\*\\$\\)/m,
                              },
                              Object {
                                "alias": "important",
                                "inside": Object {
                                  "punctuation": /\\^#\\+\\|#\\+\\$/,
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\^\\\\s\\*\\)#\\.\\+/m,
                              },
                            ],
                            "url": Object {
                              "greedy": true,
                              "inside": Object {
                                "content": Object {
                                  "inside": Object {
                                    "bold": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": [Circular],
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                        },
                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                    },
                                    "code-snippet": Object {
                                      "alias": Array [
                                        "code",
                                        "keyword",
                                      ],
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                    },
                                    "italic": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "strike": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                        },
                                                        "punctuation": /~~\\?/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                                    },
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "strike": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                },
                                                "punctuation": /~~\\?/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                            },
                                            "url": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                        },
                                        "punctuation": /\\[\\*_\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                    },
                                    "strike": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "content": Object {
                                          "inside": Object {
                                            "bold": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "italic": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "bold": [Circular],
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\[\\*_\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                },
                                                "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                            },
                                            "code-snippet": Object {
                                              "alias": Array [
                                                "code",
                                                "keyword",
                                              ],
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                            },
                                            "italic": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "content": Object {
                                                  "inside": Object {
                                                    "bold": Object {
                                                      "greedy": true,
                                                      "inside": Object {
                                                        "content": Object {
                                                          "inside": Object {
                                                            "code-snippet": Object {
                                                              "alias": Array [
                                                                "code",
                                                                "keyword",
                                                              ],
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                            },
                                                            "italic": [Circular],
                                                            "strike": [Circular],
                                                            "url": [Circular],
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                        },
                                                        "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                    },
                                                    "code-snippet": Object {
                                                      "alias": Array [
                                                        "code",
                                                        "keyword",
                                                      ],
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\`\\]\\)\\(\\?:\`\`\\[\\^\`\\\\r\\\\n\\]\\+\\(\\?:\`\\[\\^\`\\\\r\\\\n\\]\\+\\)\\*\`\`\\(\\?!\`\\)\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\(\\?!\`\\)\\)/,
                                                    },
                                                    "strike": [Circular],
                                                    "url": [Circular],
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                },
                                                "punctuation": /\\[\\*_\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                            },
                                            "url": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                        },
                                        "punctuation": /~~\\?/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\2\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                },
                                "operator": /\\^!/,
                                "string": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                },
                                "url": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                },
                                "variable": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\+\\\\\\]\\)\\)/,
                            },
                            "url-reference": Object {
                              "alias": "url",
                              "inside": Object {
                                "punctuation": /\\^\\[\\\\\\[\\\\\\]!:\\]\\|\\[<>\\]/,
                                "string": /\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\$/,
                                "variable": Object {
                                  "lookbehind": true,
                                  "pattern": /\\^\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+/,
                                },
                              },
                              "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]:\\[\\\\t \\]\\+\\(\\?:\\\\S\\+\\|<\\(\\?:\\\\\\\\\\.\\|\\[\\^>\\\\\\\\\\]\\)\\+>\\)\\(\\?:\\[\\\\t \\]\\+\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\)\\?/,
                            },
                          },
                          "objc": Object {
                            "char": Object {
                              "greedy": true,
                              "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                            },
                            "constant": /\\\\b\\(\\?:EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|__DATE__\\|__FILE__\\|__LINE__\\|__TIMESTAMP__\\|__TIME__\\|__func__\\|stderr\\|stdin\\|stdout\\)\\\\b/,
                            "function": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                            "keyword": /\\\\b\\(\\?:asm\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|in\\|inline\\|int\\|long\\|register\\|return\\|self\\|short\\|signed\\|sizeof\\|static\\|struct\\|super\\|switch\\|typedef\\|typeof\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b\\|\\(\\?:@interface\\|@end\\|@implementation\\|@protocol\\|@class\\|@public\\|@protected\\|@private\\|@property\\|@try\\|@catch\\|@finally\\|@throw\\|@synthesize\\|@dynamic\\|@selector\\)\\\\b/,
                            "macro": Object {
                              "alias": "property",
                              "greedy": true,
                              "inside": Object {
                                "char": Object {
                                  "greedy": true,
                                  "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                },
                                "comment": Object {
                                  "greedy": true,
                                  "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                },
                                "directive": Object {
                                  "alias": "keyword",
                                  "lookbehind": true,
                                  "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                },
                                "directive-hash": /\\^#/,
                                "expression": Object {
                                  "inside": [Circular],
                                  "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                },
                                "macro-name": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                  },
                                  Object {
                                    "alias": "function",
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                  },
                                ],
                                "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                "string": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[\\\\t \\]\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                            },
                            "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                            "operator": /-\\[->\\]\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?\\|<<\\?=\\?\\|>>\\?=\\?\\|==\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[~\\^%\\?\\*\\\\/@\\]/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /@\\?"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                            },
                          },
                          "objectivec": Object {
                            "char": Object {
                              "greedy": true,
                              "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                            },
                            "constant": /\\\\b\\(\\?:EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|__DATE__\\|__FILE__\\|__LINE__\\|__TIMESTAMP__\\|__TIME__\\|__func__\\|stderr\\|stdin\\|stdout\\)\\\\b/,
                            "function": /\\\\b\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                            "keyword": /\\\\b\\(\\?:asm\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|in\\|inline\\|int\\|long\\|register\\|return\\|self\\|short\\|signed\\|sizeof\\|static\\|struct\\|super\\|switch\\|typedef\\|typeof\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b\\|\\(\\?:@interface\\|@end\\|@implementation\\|@protocol\\|@class\\|@public\\|@protected\\|@private\\|@property\\|@try\\|@catch\\|@finally\\|@throw\\|@synthesize\\|@dynamic\\|@selector\\)\\\\b/,
                            "macro": Object {
                              "alias": "property",
                              "greedy": true,
                              "inside": Object {
                                "char": Object {
                                  "greedy": true,
                                  "pattern": /'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\{0,32\\}'/,
                                },
                                "comment": Object {
                                  "greedy": true,
                                  "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                },
                                "directive": Object {
                                  "alias": "keyword",
                                  "lookbehind": true,
                                  "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                },
                                "directive-hash": /\\^#/,
                                "expression": Object {
                                  "inside": [Circular],
                                  "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                },
                                "macro-name": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                  },
                                  Object {
                                    "alias": "function",
                                    "lookbehind": true,
                                    "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                  },
                                ],
                                "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                "string": Array [
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[\\\\t \\]\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                            },
                            "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                            "operator": /-\\[->\\]\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?\\|<<\\?=\\?\\|>>\\?=\\?\\|==\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[~\\^%\\?\\*\\\\/@\\]/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /@\\?"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                            },
                          },
                          "ocaml": Object {
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "char": Object {
                              "greedy": true,
                              "pattern": /'\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n'\\]\\|\\\\\\\\\\(\\?:\\.\\|\\[ox\\]\\?\\[0-9a-f\\]\\{1,3\\}\\)\\)'/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\\\(\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\\\)/,
                            },
                            "directive": Object {
                              "alias": "property",
                              "pattern": /\\\\B#\\\\w\\+/,
                            },
                            "keyword": /\\\\b\\(\\?:as\\|assert\\|begin\\|class\\|constraint\\|do\\|done\\|downto\\|else\\|end\\|exception\\|external\\|for\\|fun\\|function\\|functor\\|if\\|in\\|include\\|inherit\\|initializer\\|lazy\\|let\\|match\\|method\\|module\\|mutable\\|new\\|nonrec\\|object\\|of\\|open\\|private\\|rec\\|sig\\|struct\\|then\\|to\\|try\\|type\\|val\\|value\\|virtual\\|when\\|where\\|while\\|with\\)\\\\b/,
                            "label": Object {
                              "alias": "property",
                              "pattern": /\\\\B~\\\\w\\+/,
                            },
                            "number": Array [
                              /\\\\b\\(\\?:0b\\[01\\]\\[01_\\]\\*\\|0o\\[0-7\\]\\[0-7_\\]\\*\\)\\\\b/i,
                              /\\\\b0x\\[a-f0-9\\]\\[a-f0-9_\\]\\*\\(\\?:\\\\\\.\\[a-f0-9_\\]\\*\\)\\?\\(\\?:p\\[\\+-\\]\\?\\\\d\\[\\\\d_\\]\\*\\)\\?\\(\\?!\\\\w\\)/i,
                              /\\\\b\\\\d\\[\\\\d_\\]\\*\\(\\?:\\\\\\.\\[\\\\d_\\]\\*\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\[\\\\d_\\]\\*\\)\\?\\(\\?!\\\\w\\)/i,
                            ],
                            "operator": /\\\\\\.\\[\\.~\\]\\|:\\[=>\\]\\|\\[=<>@\\^\\|&\\+\\\\-\\*\\\\/\\$%!\\?~\\]\\[!\\$%&\\*\\+\\\\-\\.\\\\/:<=>\\?@\\^\\|~\\]\\*\\|\\\\b\\(\\?:and\\|asr\\|land\\|lor\\|lsl\\|lsr\\|lxor\\|mod\\|or\\)\\\\b/,
                            "operator-like-punctuation": Object {
                              "alias": "punctuation",
                              "pattern": /\\\\\\[\\[<>\\|\\]\\|\\[>\\|\\]\\\\\\]\\|\\\\\\{<\\|>\\\\\\}/,
                            },
                            "punctuation": /;;\\|::\\|\\[\\(\\)\\{\\}\\\\\\[\\\\\\]\\.,:;#\\]\\|\\\\b_\\\\b/,
                            "string": Array [
                              Object {
                                "greedy": true,
                                "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\[\\\\s\\\\S\\]\\|\\\\r\\\\n\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n"\\]\\)\\*"/,
                              },
                              Object {
                                "greedy": true,
                                "pattern": /\\\\\\{\\(\\[a-z_\\]\\*\\)\\\\\\|\\[\\\\s\\\\S\\]\\*\\?\\\\\\|\\\\1\\\\\\}/,
                              },
                            ],
                            "type-variable": Object {
                              "alias": "function",
                              "pattern": /\\\\B'\\\\w\\+/,
                            },
                            "variant": Object {
                              "alias": "symbol",
                              "pattern": /\`\\\\w\\+/,
                            },
                          },
                          "plain": Object {},
                          "plaintext": Object {},
                          "py": Object {
                            "boolean": /\\\\b\\(\\?:False\\|None\\|True\\)\\\\b/,
                            "builtin": /\\\\b\\(\\?:__import__\\|abs\\|all\\|any\\|apply\\|ascii\\|basestring\\|bin\\|bool\\|buffer\\|bytearray\\|bytes\\|callable\\|chr\\|classmethod\\|cmp\\|coerce\\|compile\\|complex\\|delattr\\|dict\\|dir\\|divmod\\|enumerate\\|eval\\|execfile\\|file\\|filter\\|float\\|format\\|frozenset\\|getattr\\|globals\\|hasattr\\|hash\\|help\\|hex\\|id\\|input\\|int\\|intern\\|isinstance\\|issubclass\\|iter\\|len\\|list\\|locals\\|long\\|map\\|max\\|memoryview\\|min\\|next\\|object\\|oct\\|open\\|ord\\|pow\\|property\\|range\\|raw_input\\|reduce\\|reload\\|repr\\|reversed\\|round\\|set\\|setattr\\|slice\\|sorted\\|staticmethod\\|str\\|sum\\|super\\|tuple\\|type\\|unichr\\|unicode\\|vars\\|xrange\\|zip\\)\\\\b/,
                            "class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\bclass\\\\s\\+\\)\\\\w\\+/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\.\\*/,
                            },
                            "decorator": Object {
                              "alias": Array [
                                "annotation",
                                "punctuation",
                              ],
                              "inside": Object {
                                "punctuation": /\\\\\\./,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[\\\\t \\]\\*\\)@\\\\w\\+\\(\\?:\\\\\\.\\\\w\\+\\)\\*/m,
                            },
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\\\s\\)def\\[ \\\\t\\]\\+\\)\\[a-zA-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/g,
                            },
                            "keyword": /\\\\b\\(\\?:_\\(\\?=\\\\s\\*:\\)\\|and\\|as\\|assert\\|async\\|await\\|break\\|case\\|class\\|continue\\|def\\|del\\|elif\\|else\\|except\\|exec\\|finally\\|for\\|from\\|global\\|if\\|import\\|in\\|is\\|lambda\\|match\\|nonlocal\\|not\\|or\\|pass\\|print\\|raise\\|return\\|try\\|while\\|with\\|yield\\)\\\\b/,
                            "number": /\\\\b0\\(\\?:b\\(\\?:_\\?\\[01\\]\\)\\+\\|o\\(\\?:_\\?\\[0-7\\]\\)\\+\\|x\\(\\?:_\\?\\[a-f0-9\\]\\)\\+\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?j\\?\\(\\?!\\\\w\\)/i,
                            "operator": /\\[-\\+%=\\]=\\?\\|!=\\|:=\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/\\\\/\\?=\\?\\|<\\[<=>\\]\\?\\|>\\[=>\\]\\?\\|\\[&\\|\\^~\\]/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\?:\\[rub\\]\\|br\\|rb\\)\\?\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/i,
                            },
                            "string-interpolation": Object {
                              "greedy": true,
                              "inside": Object {
                                "interpolation": Object {
                                  "inside": Object {
                                    "conversion-option": Object {
                                      "alias": "punctuation",
                                      "pattern": /!\\[sra\\]\\(\\?=\\[:\\}\\]\\$\\)/,
                                    },
                                    "format-spec": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(:\\)\\[\\^:\\(\\)\\{\\}\\]\\+\\(\\?=\\\\\\}\\$\\)/,
                                    },
                                    "rest": [Circular],
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\{\\]\\)\\(\\?:\\\\\\{\\\\\\{\\)\\*\\)\\\\\\{\\(\\?!\\\\\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?!\\\\\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?!\\\\\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\)\\+\\\\\\}\\)\\+\\\\\\}\\)\\+\\\\\\}/,
                                },
                                "string": /\\[\\\\s\\\\S\\]\\+/,
                              },
                              "pattern": /\\(\\?:f\\|fr\\|rf\\)\\(\\?:\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\)/i,
                            },
                            "triple-quoted-string": Object {
                              "alias": "string",
                              "greedy": true,
                              "pattern": /\\(\\?:\\[rub\\]\\|br\\|rb\\)\\?\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1/i,
                            },
                          },
                          "python": Object {
                            "boolean": /\\\\b\\(\\?:False\\|None\\|True\\)\\\\b/,
                            "builtin": /\\\\b\\(\\?:__import__\\|abs\\|all\\|any\\|apply\\|ascii\\|basestring\\|bin\\|bool\\|buffer\\|bytearray\\|bytes\\|callable\\|chr\\|classmethod\\|cmp\\|coerce\\|compile\\|complex\\|delattr\\|dict\\|dir\\|divmod\\|enumerate\\|eval\\|execfile\\|file\\|filter\\|float\\|format\\|frozenset\\|getattr\\|globals\\|hasattr\\|hash\\|help\\|hex\\|id\\|input\\|int\\|intern\\|isinstance\\|issubclass\\|iter\\|len\\|list\\|locals\\|long\\|map\\|max\\|memoryview\\|min\\|next\\|object\\|oct\\|open\\|ord\\|pow\\|property\\|range\\|raw_input\\|reduce\\|reload\\|repr\\|reversed\\|round\\|set\\|setattr\\|slice\\|sorted\\|staticmethod\\|str\\|sum\\|super\\|tuple\\|type\\|unichr\\|unicode\\|vars\\|xrange\\|zip\\)\\\\b/,
                            "class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\bclass\\\\s\\+\\)\\\\w\\+/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\.\\*/,
                            },
                            "decorator": Object {
                              "alias": Array [
                                "annotation",
                                "punctuation",
                              ],
                              "inside": Object {
                                "punctuation": /\\\\\\./,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[\\\\t \\]\\*\\)@\\\\w\\+\\(\\?:\\\\\\.\\\\w\\+\\)\\*/m,
                            },
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\\\s\\)def\\[ \\\\t\\]\\+\\)\\[a-zA-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/g,
                            },
                            "keyword": /\\\\b\\(\\?:_\\(\\?=\\\\s\\*:\\)\\|and\\|as\\|assert\\|async\\|await\\|break\\|case\\|class\\|continue\\|def\\|del\\|elif\\|else\\|except\\|exec\\|finally\\|for\\|from\\|global\\|if\\|import\\|in\\|is\\|lambda\\|match\\|nonlocal\\|not\\|or\\|pass\\|print\\|raise\\|return\\|try\\|while\\|with\\|yield\\)\\\\b/,
                            "number": /\\\\b0\\(\\?:b\\(\\?:_\\?\\[01\\]\\)\\+\\|o\\(\\?:_\\?\\[0-7\\]\\)\\+\\|x\\(\\?:_\\?\\[a-f0-9\\]\\)\\+\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?j\\?\\(\\?!\\\\w\\)/i,
                            "operator": /\\[-\\+%=\\]=\\?\\|!=\\|:=\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/\\\\/\\?=\\?\\|<\\[<=>\\]\\?\\|>\\[=>\\]\\?\\|\\[&\\|\\^~\\]/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\?:\\[rub\\]\\|br\\|rb\\)\\?\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/i,
                            },
                            "string-interpolation": Object {
                              "greedy": true,
                              "inside": Object {
                                "interpolation": Object {
                                  "inside": Object {
                                    "conversion-option": Object {
                                      "alias": "punctuation",
                                      "pattern": /!\\[sra\\]\\(\\?=\\[:\\}\\]\\$\\)/,
                                    },
                                    "format-spec": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(:\\)\\[\\^:\\(\\)\\{\\}\\]\\+\\(\\?=\\\\\\}\\$\\)/,
                                    },
                                    "rest": [Circular],
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\{\\]\\)\\(\\?:\\\\\\{\\\\\\{\\)\\*\\)\\\\\\{\\(\\?!\\\\\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?!\\\\\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?!\\\\\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\)\\+\\\\\\}\\)\\+\\\\\\}\\)\\+\\\\\\}/,
                                },
                                "string": /\\[\\\\s\\\\S\\]\\+/,
                              },
                              "pattern": /\\(\\?:f\\|fr\\|rf\\)\\(\\?:\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\)/i,
                            },
                            "triple-quoted-string": Object {
                              "alias": "string",
                              "greedy": true,
                              "pattern": /\\(\\?:\\[rub\\]\\|br\\|rb\\)\\?\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1/i,
                            },
                          },
                          "reason": Object {
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "char": Object {
                              "greedy": true,
                              "pattern": /'\\(\\?:\\\\\\\\x\\[\\\\da-f\\]\\{2\\}\\|\\\\\\\\o\\[0-3\\]\\[0-7\\]\\[0-7\\]\\|\\\\\\\\\\\\d\\{3\\}\\|\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)'/,
                            },
                            "class-name": /\\\\b\\[A-Z\\]\\\\w\\*/,
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "constructor": /\\\\b\\[A-Z\\]\\\\w\\*\\\\b\\(\\?!\\\\s\\*\\\\\\.\\)/,
                            "keyword": /\\\\b\\(\\?:and\\|as\\|assert\\|begin\\|class\\|constraint\\|do\\|done\\|downto\\|else\\|end\\|exception\\|external\\|for\\|fun\\|function\\|functor\\|if\\|in\\|include\\|inherit\\|initializer\\|lazy\\|let\\|method\\|module\\|mutable\\|new\\|nonrec\\|object\\|of\\|open\\|or\\|private\\|rec\\|sig\\|struct\\|switch\\|then\\|to\\|try\\|type\\|val\\|virtual\\|when\\|while\\|with\\)\\\\b/,
                            "label": Object {
                              "alias": "symbol",
                              "pattern": /\\\\b\\[a-z\\]\\\\w\\*\\(\\?=::\\)/,
                            },
                            "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                            "operator": /\\\\\\.\\{3\\}\\|:\\[:=\\]\\|\\\\\\|>\\|->\\|=\\(\\?:==\\?\\|>\\)\\?\\|<=\\?\\|>=\\?\\|\\[\\|\\^\\?'#!~\`\\]\\|\\[\\+\\\\-\\*\\\\/\\]\\\\\\.\\?\\|\\\\b\\(\\?:asr\\|land\\|lor\\|lsl\\|lsr\\|lxor\\|mod\\)\\\\b/,
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n"\\]\\)\\*"/,
                            },
                          },
                          "rss": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "sass": Object {
                            "atrule-line": Object {
                              "greedy": true,
                              "inside": Object {
                                "atrule": /\\(\\?:@\\[\\\\w-\\]\\+\\|\\[\\+=\\]\\)/,
                              },
                              "pattern": /\\^\\(\\?:\\[ \\\\t\\]\\*\\)\\[@\\+=\\]\\.\\+/m,
                            },
                            "color": Array [
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                              },
                              Object {
                                "inside": Object {
                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "punctuation": /\\[\\(\\),\\]/,
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                  },
                                },
                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                              },
                            ],
                            "comment": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\^\\(\\[ \\\\t\\]\\*\\)\\\\/\\[\\\\/\\*\\]\\.\\*\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\1\\[ \\\\t\\]\\.\\+\\)\\*/m,
                            },
                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                            },
                            "hexcode": Object {
                              "alias": "color",
                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                            },
                            "operator": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                            },
                            "property-line": Object {
                              "greedy": true,
                              "inside": Object {
                                "important": /!important\\\\b/i,
                                "operator": Array [
                                  /\\[\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|\\\\b\\(\\?:and\\|not\\|or\\)\\\\b/,
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\s\\)-\\(\\?=\\\\s\\)/,
                                  },
                                ],
                                "property": Array [
                                  /\\[\\^:\\\\s\\]\\+\\(\\?=\\\\s\\*:\\)/,
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(:\\)\\[\\^:\\\\s\\]\\+/,
                                  },
                                ],
                                "punctuation": /:/,
                                "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                              },
                              "pattern": /\\^\\[ \\\\t\\]\\*\\(\\?:\\[\\^:\\\\s\\]\\+ \\*:\\.\\*\\|:\\[\\^:\\\\s\\]\\.\\*\\)/m,
                            },
                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                            "selector": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\^\\(\\[ \\\\t\\]\\*\\)\\\\S\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\|\\[\\^,\\\\r\\\\n\\]\\*\\)\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\)\\*\\(\\?:,\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\1\\[ \\\\t\\]\\+\\\\S\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\|\\[\\^,\\\\r\\\\n\\]\\*\\)\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\)\\*\\)\\*/m,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                            },
                            "unit": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                            },
                            "url": Object {
                              "greedy": true,
                              "inside": Object {
                                "function": /\\^url/i,
                                "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                "string": Object {
                                  "alias": "url",
                                  "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                },
                              },
                              "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                            },
                            "variable": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                            },
                            "variable-line": Object {
                              "greedy": true,
                              "inside": Object {
                                "operator": Array [
                                  /\\[\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|\\\\b\\(\\?:and\\|not\\|or\\)\\\\b/,
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\s\\)-\\(\\?=\\\\s\\)/,
                                  },
                                ],
                                "punctuation": /:/,
                                "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                              },
                              "pattern": /\\^\\[ \\\\t\\]\\*\\\\\\$\\.\\+/m,
                            },
                          },
                          "scss": Object {
                            "atrule": Object {
                              "inside": Object {
                                "rest": [Circular],
                                "rule": /@\\[\\\\w-\\]\\+/,
                              },
                              "pattern": /@\\[\\\\w-\\]\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\)\\*\\?\\(\\?=\\\\s\\+\\[\\{;\\]\\)/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "color": Array [
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                              },
                              Object {
                                "inside": Object {
                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "punctuation": /\\[\\(\\),\\]/,
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                  },
                                },
                                "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                              },
                            ],
                            "comment": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                            },
                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                            },
                            "hexcode": Object {
                              "alias": "color",
                              "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                            },
                            "important": /!important\\\\b/i,
                            "keyword": Array [
                              /@\\(\\?:content\\|debug\\|each\\|else\\(\\?: if\\)\\?\\|extend\\|for\\|forward\\|function\\|if\\|import\\|include\\|mixin\\|return\\|use\\|warn\\|while\\)\\\\b/i,
                              Object {
                                "lookbehind": true,
                                "pattern": /\\( \\)\\(\\?:from\\|through\\)\\(\\?= \\)/,
                              },
                            ],
                            "module-modifier": Object {
                              "alias": "keyword",
                              "pattern": /\\\\b\\(\\?:as\\|hide\\|show\\|with\\)\\\\b/i,
                            },
                            "null": Object {
                              "alias": "keyword",
                              "pattern": /\\\\bnull\\\\b/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                            },
                            "operator": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\s\\)\\(\\?:\\[-\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|and\\|not\\|or\\)\\(\\?=\\\\s\\)/,
                            },
                            "placeholder": Object {
                              "alias": "selector",
                              "pattern": /%\\[-\\\\w\\]\\+/,
                            },
                            "property": Object {
                              "inside": Object {
                                "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                              },
                              "pattern": /\\(\\?:\\[-\\\\w\\]\\|\\\\\\$\\[-\\\\w\\]\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}\\)\\+\\(\\?=\\\\s\\*:\\)/,
                            },
                            "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                            "selector": Object {
                              "inside": Object {
                                "parent": Object {
                                  "alias": "important",
                                  "pattern": /&/,
                                },
                                "placeholder": /%\\[-\\\\w\\]\\+/,
                                "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                              },
                              "pattern": /\\(\\?=\\\\S\\)\\[\\^@;\\{\\}\\(\\)\\]\\?\\(\\?:\\[\\^@;\\{\\}\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}\\)\\+\\(\\?=\\\\s\\*\\\\\\{\\(\\?:\\\\\\}\\|\\\\s\\|\\[\\^\\}\\]\\[\\^:\\{\\}\\]\\*\\[:\\{\\]\\[\\^\\}\\]\\)\\)/,
                            },
                            "statement": Object {
                              "alias": "keyword",
                              "pattern": /\\\\B!\\(\\?:default\\|optional\\)\\\\b/i,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                            },
                            "unit": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                            },
                            "url": /\\(\\?:\\[-a-z\\]\\+-\\)\\?url\\(\\?=\\\\\\(\\)/i,
                            "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                          },
                          "shell": Object {
                            "assign-left": Object {
                              "alias": "variable",
                              "inside": Object {
                                "environment": Object {
                                  "alias": "constant",
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                            },
                            "boolean": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "builtin": Object {
                              "alias": "class-name",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "comment": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                            },
                            "environment": Object {
                              "alias": "constant",
                              "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                            },
                            "file-descriptor": Object {
                              "alias": "important",
                              "pattern": /\\\\B&\\\\d\\\\b/,
                            },
                            "for-or-select": Object {
                              "alias": "variable",
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                            },
                            "function": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "function-name": Array [
                              Object {
                                "alias": "function",
                                "lookbehind": true,
                                "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                              },
                              Object {
                                "alias": "function",
                                "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                              },
                            ],
                            "keyword": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                            },
                            "operator": Object {
                              "inside": Object {
                                "file-descriptor": Object {
                                  "alias": "important",
                                  "pattern": /\\^\\\\d/,
                                },
                              },
                              "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                            },
                            "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                            "shebang": Object {
                              "alias": "important",
                              "pattern": /\\^#!\\\\s\\*\\\\/\\.\\*/,
                            },
                            "string": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "bash": Object {
                                    "alias": "punctuation",
                                    "inside": [Circular],
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                  },
                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                  "environment": Object {
                                    "alias": "constant",
                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "variable": Array [
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|<<=\\?\\|>>=\\?\\|&&\\|\\\\\\|\\\\\\|\\|\\[=!\\+\\\\-\\*/%<>\\^&\\|\\]=\\?\\|\\[\\?~:\\]/,
                                        "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                        "variable": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                          },
                                          /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                        ],
                                      },
                                      "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "assign-left": Object {
                                          "alias": "variable",
                                          "inside": Object {
                                            "environment": Object {
                                              "alias": "constant",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                        },
                                        "boolean": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "builtin": Object {
                                          "alias": "class-name",
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "comment": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                        },
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "file-descriptor": Object {
                                          "alias": "important",
                                          "pattern": /\\\\B&\\\\d\\\\b/,
                                        },
                                        "for-or-select": Object {
                                          "alias": "variable",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                        },
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "function-name": Array [
                                          Object {
                                            "alias": "function",
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                          },
                                          Object {
                                            "alias": "function",
                                            "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                        },
                                        "operator": Object {
                                          "inside": Object {
                                            "file-descriptor": Object {
                                              "alias": "important",
                                              "pattern": /\\^\\\\d/,
                                            },
                                          },
                                          "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                                        },
                                        "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                        "string": [Circular],
                                        "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "environment": Object {
                                          "alias": "constant",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                        "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                    },
                                    /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                  ],
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "bash": Object {
                                    "alias": "punctuation",
                                    "inside": [Circular],
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "bash": Object {
                                    "alias": "punctuation",
                                    "inside": [Circular],
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                  },
                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                  "environment": Object {
                                    "alias": "constant",
                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "variable": Array [
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|<<=\\?\\|>>=\\?\\|&&\\|\\\\\\|\\\\\\|\\|\\[=!\\+\\\\-\\*/%<>\\^&\\|\\]=\\?\\|\\[\\?~:\\]/,
                                        "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                        "variable": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                          },
                                          /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                        ],
                                      },
                                      "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "assign-left": Object {
                                          "alias": "variable",
                                          "inside": Object {
                                            "environment": Object {
                                              "alias": "constant",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                        },
                                        "boolean": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "builtin": Object {
                                          "alias": "class-name",
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "comment": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                        },
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "file-descriptor": Object {
                                          "alias": "important",
                                          "pattern": /\\\\B&\\\\d\\\\b/,
                                        },
                                        "for-or-select": Object {
                                          "alias": "variable",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                        },
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "function-name": Array [
                                          Object {
                                            "alias": "function",
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                          },
                                          Object {
                                            "alias": "function",
                                            "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                        },
                                        "operator": Object {
                                          "inside": Object {
                                            "file-descriptor": Object {
                                              "alias": "important",
                                              "pattern": /\\^\\\\d/,
                                            },
                                          },
                                          "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                                        },
                                        "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                        "string": [Circular],
                                        "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "environment": Object {
                                          "alias": "constant",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                        "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                      },
                                      "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                    },
                                    /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                  ],
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\[\\^"\\\\\\\\\`\\$\\]\\)\\*"/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\\\\\\\]\\)'\\[\\^'\\]\\*'/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                },
                                "pattern": /\\\\\\$'\\(\\?:\\[\\^'\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*'/,
                              },
                            ],
                            "variable": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|<<=\\?\\|>>=\\?\\|&&\\|\\\\\\|\\\\\\|\\|\\[=!\\+\\\\-\\*/%<>\\^&\\|\\]=\\?\\|\\[\\?~:\\]/,
                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                  "variable": Array [
                                    Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                    },
                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                  ],
                                },
                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "assign-left": Object {
                                    "alias": "variable",
                                    "inside": Object {
                                      "environment": Object {
                                        "alias": "constant",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                  },
                                  "boolean": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:false\\|true\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "builtin": Object {
                                    "alias": "class-name",
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|alias\\|bind\\|break\\|builtin\\|caller\\|cd\\|command\\|continue\\|declare\\|echo\\|enable\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|pwd\\|read\\|readarray\\|readonly\\|return\\|set\\|shift\\|shopt\\|source\\|test\\|times\\|trap\\|type\\|typeset\\|ulimit\\|umask\\|unalias\\|unset\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                  },
                                  "environment": Object {
                                    "alias": "constant",
                                    "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "file-descriptor": Object {
                                    "alias": "important",
                                    "pattern": /\\\\B&\\\\d\\\\b/,
                                  },
                                  "for-or-select": Object {
                                    "alias": "variable",
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                  },
                                  "function": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|apt-cache\\|apt-get\\|aptitude\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|docker\\|docker-compose\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|node\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|podman\\|podman-compose\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vcpkg\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "function-name": Array [
                                    Object {
                                      "alias": "function",
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\[\\\\w-\\]\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                    },
                                    Object {
                                      "alias": "function",
                                      "pattern": /\\\\b\\[\\\\w-\\]\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                    },
                                  ],
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:case\\|do\\|done\\|elif\\|else\\|esac\\|fi\\|for\\|function\\|if\\|in\\|select\\|then\\|until\\|while\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                  },
                                  "operator": Object {
                                    "inside": Object {
                                      "file-descriptor": Object {
                                        "alias": "important",
                                        "pattern": /\\^\\\\d/,
                                      },
                                    },
                                    "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|=\\[=~\\]\\?\\|!=\\?\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\[<>\\]&\\?\\|\\[<>\\]\\[&=\\]\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?/,
                                  },
                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                  "string": Array [
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "bash": Object {
                                          "alias": "punctuation",
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                        },
                                        "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "variable": [Circular],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "bash": Object {
                                          "alias": "punctuation",
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "bash": Object {
                                          "alias": "punctuation",
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                        },
                                        "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                        "environment": Object {
                                          "alias": "constant",
                                          "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                        },
                                        "variable": [Circular],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\[\\^"\\\\\\\\\`\\$\\]\\)\\*"/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\\\\\\\]\\)'\\[\\^'\\]\\*'/,
                                    },
                                    Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\)/,
                                      },
                                      "pattern": /\\\\\\$'\\(\\?:\\[\\^'\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*'/,
                                    },
                                  ],
                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                },
                                "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "environment": Object {
                                    "alias": "constant",
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                  },
                                  "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                  "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                },
                                "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                              },
                              /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                            ],
                          },
                          "sql": Object {
                            "boolean": /\\\\b\\(\\?:FALSE\\|NULL\\|TRUE\\)\\\\b/i,
                            "comment": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\(\\?:--\\|\\\\/\\\\/\\|#\\)\\.\\*\\)/,
                            },
                            "function": /\\\\b\\(\\?:AVG\\|COUNT\\|FIRST\\|FORMAT\\|LAST\\|LCASE\\|LEN\\|MAX\\|MID\\|MIN\\|MOD\\|NOW\\|ROUND\\|SUM\\|UCASE\\)\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                            "identifier": Object {
                              "greedy": true,
                              "inside": Object {
                                "punctuation": /\\^\`\\|\`\\$/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^@\\\\\\\\\\]\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\`\\\\\\\\\\]\\|\`\`\\)\\*\`/,
                            },
                            "keyword": /\\\\b\\(\\?:ACTION\\|ADD\\|AFTER\\|ALGORITHM\\|ALL\\|ALTER\\|ANALYZE\\|ANY\\|APPLY\\|AS\\|ASC\\|AUTHORIZATION\\|AUTO_INCREMENT\\|BACKUP\\|BDB\\|BEGIN\\|BERKELEYDB\\|BIGINT\\|BINARY\\|BIT\\|BLOB\\|BOOL\\|BOOLEAN\\|BREAK\\|BROWSE\\|BTREE\\|BULK\\|BY\\|CALL\\|CASCADED\\?\\|CASE\\|CHAIN\\|CHAR\\(\\?:ACTER\\|SET\\)\\?\\|CHECK\\(\\?:POINT\\)\\?\\|CLOSE\\|CLUSTERED\\|COALESCE\\|COLLATE\\|COLUMNS\\?\\|COMMENT\\|COMMIT\\(\\?:TED\\)\\?\\|COMPUTE\\|CONNECT\\|CONSISTENT\\|CONSTRAINT\\|CONTAINS\\(\\?:TABLE\\)\\?\\|CONTINUE\\|CONVERT\\|CREATE\\|CROSS\\|CURRENT\\(\\?:_DATE\\|_TIME\\|_TIMESTAMP\\|_USER\\)\\?\\|CURSOR\\|CYCLE\\|DATA\\(\\?:BASES\\?\\)\\?\\|DATE\\(\\?:TIME\\)\\?\\|DAY\\|DBCC\\|DEALLOCATE\\|DEC\\|DECIMAL\\|DECLARE\\|DEFAULT\\|DEFINER\\|DELAYED\\|DELETE\\|DELIMITERS\\?\\|DENY\\|DESC\\|DESCRIBE\\|DETERMINISTIC\\|DISABLE\\|DISCARD\\|DISK\\|DISTINCT\\|DISTINCTROW\\|DISTRIBUTED\\|DO\\|DOUBLE\\|DROP\\|DUMMY\\|DUMP\\(\\?:FILE\\)\\?\\|DUPLICATE\\|ELSE\\(\\?:IF\\)\\?\\|ENABLE\\|ENCLOSED\\|END\\|ENGINE\\|ENUM\\|ERRLVL\\|ERRORS\\|ESCAPED\\?\\|EXCEPT\\|EXEC\\(\\?:UTE\\)\\?\\|EXISTS\\|EXIT\\|EXPLAIN\\|EXTENDED\\|FETCH\\|FIELDS\\|FILE\\|FILLFACTOR\\|FIRST\\|FIXED\\|FLOAT\\|FOLLOWING\\|FOR\\(\\?: EACH ROW\\)\\?\\|FORCE\\|FOREIGN\\|FREETEXT\\(\\?:TABLE\\)\\?\\|FROM\\|FULL\\|FUNCTION\\|GEOMETRY\\(\\?:COLLECTION\\)\\?\\|GLOBAL\\|GOTO\\|GRANT\\|GROUP\\|HANDLER\\|HASH\\|HAVING\\|HOLDLOCK\\|HOUR\\|IDENTITY\\(\\?:COL\\|_INSERT\\)\\?\\|IF\\|IGNORE\\|IMPORT\\|INDEX\\|INFILE\\|INNER\\|INNODB\\|INOUT\\|INSERT\\|INT\\|INTEGER\\|INTERSECT\\|INTERVAL\\|INTO\\|INVOKER\\|ISOLATION\\|ITERATE\\|JOIN\\|KEYS\\?\\|KILL\\|LANGUAGE\\|LAST\\|LEAVE\\|LEFT\\|LEVEL\\|LIMIT\\|LINENO\\|LINES\\|LINESTRING\\|LOAD\\|LOCAL\\|LOCK\\|LONG\\(\\?:BLOB\\|TEXT\\)\\|LOOP\\|MATCH\\(\\?:ED\\)\\?\\|MEDIUM\\(\\?:BLOB\\|INT\\|TEXT\\)\\|MERGE\\|MIDDLEINT\\|MINUTE\\|MODE\\|MODIFIES\\|MODIFY\\|MONTH\\|MULTI\\(\\?:LINESTRING\\|POINT\\|POLYGON\\)\\|NATIONAL\\|NATURAL\\|NCHAR\\|NEXT\\|NO\\|NONCLUSTERED\\|NULLIF\\|NUMERIC\\|OFF\\?\\|OFFSETS\\?\\|ON\\|OPEN\\(\\?:DATASOURCE\\|QUERY\\|ROWSET\\)\\?\\|OPTIMIZE\\|OPTION\\(\\?:ALLY\\)\\?\\|ORDER\\|OUT\\(\\?:ER\\|FILE\\)\\?\\|OVER\\|PARTIAL\\|PARTITION\\|PERCENT\\|PIVOT\\|PLAN\\|POINT\\|POLYGON\\|PRECEDING\\|PRECISION\\|PREPARE\\|PREV\\|PRIMARY\\|PRINT\\|PRIVILEGES\\|PROC\\(\\?:EDURE\\)\\?\\|PUBLIC\\|PURGE\\|QUICK\\|RAISERROR\\|READS\\?\\|REAL\\|RECONFIGURE\\|REFERENCES\\|RELEASE\\|RENAME\\|REPEAT\\(\\?:ABLE\\)\\?\\|REPLACE\\|REPLICATION\\|REQUIRE\\|RESIGNAL\\|RESTORE\\|RESTRICT\\|RETURN\\(\\?:ING\\|S\\)\\?\\|REVOKE\\|RIGHT\\|ROLLBACK\\|ROUTINE\\|ROW\\(\\?:COUNT\\|GUIDCOL\\|S\\)\\?\\|RTREE\\|RULE\\|SAVE\\(\\?:POINT\\)\\?\\|SCHEMA\\|SECOND\\|SELECT\\|SERIAL\\(\\?:IZABLE\\)\\?\\|SESSION\\(\\?:_USER\\)\\?\\|SET\\(\\?:USER\\)\\?\\|SHARE\\|SHOW\\|SHUTDOWN\\|SIMPLE\\|SMALLINT\\|SNAPSHOT\\|SOME\\|SONAME\\|SQL\\|START\\(\\?:ING\\)\\?\\|STATISTICS\\|STATUS\\|STRIPED\\|SYSTEM_USER\\|TABLES\\?\\|TABLESPACE\\|TEMP\\(\\?:ORARY\\|TABLE\\)\\?\\|TERMINATED\\|TEXT\\(\\?:SIZE\\)\\?\\|THEN\\|TIME\\(\\?:STAMP\\)\\?\\|TINY\\(\\?:BLOB\\|INT\\|TEXT\\)\\|TOP\\?\\|TRAN\\(\\?:SACTIONS\\?\\)\\?\\|TRIGGER\\|TRUNCATE\\|TSEQUAL\\|TYPES\\?\\|UNBOUNDED\\|UNCOMMITTED\\|UNDEFINED\\|UNION\\|UNIQUE\\|UNLOCK\\|UNPIVOT\\|UNSIGNED\\|UPDATE\\(\\?:TEXT\\)\\?\\|USAGE\\|USE\\|USER\\|USING\\|VALUES\\?\\|VAR\\(\\?:BINARY\\|CHAR\\|CHARACTER\\|YING\\)\\|VIEW\\|WAITFOR\\|WARNINGS\\|WHEN\\|WHERE\\|WHILE\\|WITH\\(\\?: ROLLUP\\|IN\\)\\?\\|WORK\\|WRITE\\(\\?:TEXT\\)\\?\\|YEAR\\)\\\\b/i,
                            "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\\\b/i,
                            "operator": /\\[-\\+\\*\\\\/=%\\^~\\]\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|!=\\?\\|<\\(\\?:=>\\?\\|<\\|>\\)\\?\\|>\\[>=\\]\\?\\|\\\\b\\(\\?:AND\\|BETWEEN\\|DIV\\|ILIKE\\|IN\\|IS\\|LIKE\\|NOT\\|OR\\|REGEXP\\|RLIKE\\|SOUNDS LIKE\\|XOR\\)\\\\b/i,
                            "punctuation": /\\[;\\[\\\\\\]\\(\\)\`,\\.\\]/,
                            "string": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^@\\\\\\\\\\]\\)\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\]\\|\\\\2\\\\2\\)\\*\\\\2/,
                            },
                            "variable": Array [
                              Object {
                                "greedy": true,
                                "pattern": /@\\(\\["'\`\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\+\\\\1/,
                              },
                              /@\\[\\\\w\\.\\$\\]\\+/,
                            ],
                          },
                          "ssml": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "stylus": Object {
                            "atrule-declaration": Object {
                              "inside": Object {
                                "atrule": /\\^@\\[\\\\w-\\]\\+/,
                                "rest": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "color": Array [
                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                    Object {
                                      "inside": Object {
                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "punctuation": /\\[\\(\\),\\]/,
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                        },
                                      },
                                      "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                    },
                                  ],
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                  },
                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                  "func": Object {
                                    "inside": Object {
                                      "function": /\\^\\[\\^\\(\\]\\+/,
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                  },
                                  "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                  "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "inside": Object {
                                      "delimiter": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                  },
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "operator": Array [
                                    /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                  ],
                                  "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                  },
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                  },
                                  "url": Object {
                                    "greedy": true,
                                    "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                  },
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)@\\.\\+/m,
                            },
                            "comment": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                            },
                            "func": Object {
                              "inside": Object {
                                "function": /\\^\\[\\^\\(\\]\\+/,
                                "rest": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "color": Array [
                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                    Object {
                                      "inside": Object {
                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "punctuation": /\\[\\(\\),\\]/,
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                        },
                                      },
                                      "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                    },
                                  ],
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                  },
                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                  "func": [Circular],
                                  "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                  "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "inside": Object {
                                      "delimiter": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                  },
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "operator": Array [
                                    /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                  ],
                                  "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                  },
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                  },
                                  "url": Object {
                                    "greedy": true,
                                    "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                  },
                                },
                              },
                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                            },
                            "interpolation": Object {
                              "alias": "variable",
                              "inside": Object {
                                "delimiter": Object {
                                  "alias": "punctuation",
                                  "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                },
                                "rest": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "color": Array [
                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                    Object {
                                      "inside": Object {
                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "punctuation": /\\[\\(\\),\\]/,
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                        },
                                      },
                                      "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                    },
                                  ],
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                  },
                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                  "func": Object {
                                    "inside": Object {
                                      "function": /\\^\\[\\^\\(\\]\\+/,
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                  },
                                  "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                  "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                  "interpolation": [Circular],
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "operator": Array [
                                    /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                  ],
                                  "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                  },
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                  },
                                  "url": Object {
                                    "greedy": true,
                                    "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                  },
                                },
                              },
                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                            },
                            "property-declaration": Object {
                              "inside": Object {
                                "property": Object {
                                  "inside": Object {
                                    "interpolation": Object {
                                      "alias": "variable",
                                      "inside": Object {
                                        "delimiter": Object {
                                          "alias": "punctuation",
                                          "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                        },
                                        "rest": Object {
                                          "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                          "color": Array [
                                            /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                            Object {
                                              "inside": Object {
                                                "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "punctuation": /\\[\\(\\),\\]/,
                                                "unit": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                },
                                              },
                                              "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                            },
                                          ],
                                          "comment": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                          },
                                          "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                          "func": Object {
                                            "inside": Object {
                                              "function": /\\^\\[\\^\\(\\]\\+/,
                                              "rest": [Circular],
                                            },
                                            "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                          },
                                          "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                          "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                          "interpolation": [Circular],
                                          "keyword": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                          },
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "operator": Array [
                                            /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                          ],
                                          "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                          },
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                          },
                                          "url": Object {
                                            "greedy": true,
                                            "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                          },
                                        },
                                      },
                                      "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                    },
                                  },
                                  "pattern": /\\^\\[\\^\\\\s:\\]\\+/,
                                },
                                "rest": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "color": Array [
                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                    Object {
                                      "inside": Object {
                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "punctuation": /\\[\\(\\),\\]/,
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                        },
                                      },
                                      "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                    },
                                  ],
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                  },
                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                  "func": Object {
                                    "inside": Object {
                                      "function": /\\^\\[\\^\\(\\]\\+/,
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                  },
                                  "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                  "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "inside": Object {
                                      "delimiter": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                  },
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "operator": Array [
                                    /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                  ],
                                  "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                  },
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                  },
                                  "url": Object {
                                    "greedy": true,
                                    "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                  },
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\\\\\{\\)\\(\\[ \\\\t\\]\\*\\)\\)\\(\\?:\\[\\\\w-\\]\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\(\\?:\\\\s\\*:\\\\s\\*\\|\\[ \\\\t\\]\\+\\)\\(\\?!\\\\s\\)\\[\\^\\{\\\\r\\\\n\\]\\*\\(\\?:;\\|\\[\\^\\{\\\\r\\\\n,\\]\\$\\(\\?!\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\\\{\\|\\\\2\\[ \\\\t\\]\\)\\)\\)/m,
                            },
                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:\\.\\]/,
                            "selector": Object {
                              "inside": Object {
                                "comment": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                },
                                "interpolation": Object {
                                  "alias": "variable",
                                  "inside": Object {
                                    "delimiter": Object {
                                      "alias": "punctuation",
                                      "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                    },
                                    "rest": Object {
                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                      "color": Array [
                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                        Object {
                                          "inside": Object {
                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "punctuation": /\\[\\(\\),\\]/,
                                            "unit": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                            },
                                          },
                                          "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                        },
                                      ],
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                      },
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "func": Object {
                                        "inside": Object {
                                          "function": /\\^\\[\\^\\(\\]\\+/,
                                          "rest": [Circular],
                                        },
                                        "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                      },
                                      "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                      "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                      "interpolation": [Circular],
                                      "keyword": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                      },
                                      "number": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                      },
                                      "operator": Array [
                                        /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                      ],
                                      "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                      },
                                      "unit": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                      },
                                      "url": Object {
                                        "greedy": true,
                                        "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                      },
                                    },
                                  },
                                  "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                },
                                "punctuation": /\\[\\{\\},\\]/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\(\\?:\\(\\?=\\\\S\\)\\(\\?:\\[\\^\\{\\}\\\\r\\\\n:\\(\\)\\]\\|::\\?\\[\\\\w-\\]\\+\\(\\?:\\\\\\(\\[\\^\\)\\\\r\\\\n\\]\\*\\\\\\)\\|\\(\\?!\\[\\\\w-\\]\\)\\)\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\)\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\1\\(\\?:\\(\\?=\\\\S\\)\\(\\?:\\[\\^\\{\\}\\\\r\\\\n:\\(\\)\\]\\|::\\?\\[\\\\w-\\]\\+\\(\\?:\\\\\\(\\[\\^\\)\\\\r\\\\n\\]\\*\\\\\\)\\|\\(\\?!\\[\\\\w-\\]\\)\\)\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\)\\)\\)\\*\\(\\?:,\\$\\|\\\\\\{\\|\\(\\?=\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\\\{\\|\\\\1\\[ \\\\t\\]\\)\\)\\)/m,
                            },
                            "statement": Object {
                              "inside": Object {
                                "keyword": /\\^\\\\S\\+/,
                                "rest": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "color": Array [
                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                    Object {
                                      "inside": Object {
                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "punctuation": /\\[\\(\\),\\]/,
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                        },
                                      },
                                      "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                    },
                                  ],
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                  },
                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                  "func": Object {
                                    "inside": Object {
                                      "function": /\\^\\[\\^\\(\\]\\+/,
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                  },
                                  "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                  "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "inside": Object {
                                      "delimiter": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                  },
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "operator": Array [
                                    /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                  ],
                                  "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                  },
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                  },
                                  "url": Object {
                                    "greedy": true,
                                    "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                  },
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\[ \\\\t\\]\\.\\+/m,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                            },
                            "variable-declaration": Object {
                              "inside": Object {
                                "rest": Object {
                                  "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                  "color": Array [
                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                    Object {
                                      "inside": Object {
                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "punctuation": /\\[\\(\\),\\]/,
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                        },
                                      },
                                      "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                    },
                                  ],
                                  "comment": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                  },
                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                  "func": Object {
                                    "inside": Object {
                                      "function": /\\^\\[\\^\\(\\]\\+/,
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                  },
                                  "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                  "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                  "interpolation": Object {
                                    "alias": "variable",
                                    "inside": Object {
                                      "delimiter": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                  },
                                  "keyword": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:else\\|for\\|if\\|return\\|unless\\)\\(\\?=\\\\s\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                  },
                                  "number": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                  },
                                  "operator": Array [
                                    /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                  ],
                                  "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                  "string": Object {
                                    "greedy": true,
                                    "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                  },
                                  "unit": Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                  },
                                  "url": Object {
                                    "greedy": true,
                                    "pattern": /\\\\burl\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                  },
                                },
                                "variable": /\\^\\\\S\\+/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\[\\\\w\\$-\\]\\+\\\\s\\*\\.\\?=\\[ \\\\t\\]\\*\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\\\S\\.\\*\\|\\$\\)/m,
                            },
                          },
                          "svg": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "arrow": Object {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": Object {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                              },
                                              "exports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": Object {
                                                "alias": "function",
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "imports": Object {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": Array [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                Object {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": Array [
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                },
                                                Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "maybe-class-name": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": Object {
                                                "alias": Array [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": Object {
                                                "alias": Array [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": Object {
                                                "inside": Object {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": Object {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Array [
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "css",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "html",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "embedded-code": Object {
                                                      "alias": "svg",
                                                      "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                    },
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                    "template-punctuation": Object {
                                                      "alias": "string",
                                                      "pattern": /\\^\`\\|\`\\$/,
                                                    },
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              ],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "text": Object {},
                          "ts": Object {
                            "arrow": Object {
                              "alias": "operator",
                              "pattern": /=>/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                            "class-name": Object {
                              "greedy": true,
                              "inside": Object {
                                "arrow": Object {
                                  "alias": "operator",
                                  "pattern": /=>/,
                                },
                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                "comment": Array [
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                  },
                                ],
                                "console": Object {
                                  "alias": "class-name",
                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                },
                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                "dom": Object {
                                  "alias": "variable",
                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                },
                                "exports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                },
                                "function": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "function-variable": Object {
                                  "alias": "function",
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "hashbang": Object {
                                  "alias": "comment",
                                  "greedy": true,
                                  "pattern": /\\^#!\\.\\*/,
                                },
                                "imports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                },
                                "keyword": Array [
                                  Object {
                                    "alias": "module",
                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "control-flow",
                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": Array [
                                      "null",
                                      "nil",
                                    ],
                                    "pattern": /\\\\bnull\\\\b/,
                                  },
                                  Object {
                                    "alias": "nil",
                                    "pattern": /\\\\bundefined\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                  },
                                  /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                  /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                  /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                ],
                                "known-class-name": Array [
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                  },
                                ],
                                "maybe-class-name": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                },
                                "method": Object {
                                  "alias": Array [
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "method-variable": Object {
                                  "alias": Array [
                                    "function-variable",
                                    "method",
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "number": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                },
                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                "property-access": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                },
                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                "regex": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                    "regex-source": Object {
                                      "alias": "language-regex",
                                      "inside": undefined,
                                      "lookbehind": true,
                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                },
                                "spread": Object {
                                  "alias": "operator",
                                  "pattern": /\\\\\\.\\{3\\}/,
                                },
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                },
                                "string-property": Object {
                                  "alias": "property",
                                  "greedy": true,
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                },
                                "template-string": Array [
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "css",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "html",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "svg",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                            },
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "console": Object {
                              "alias": "class-name",
                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                            },
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "decorator": Object {
                              "inside": Object {
                                "at": Object {
                                  "alias": "operator",
                                  "pattern": /\\^@/,
                                },
                                "function": /\\^\\[\\\\s\\\\S\\]\\+/,
                              },
                              "pattern": /@\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "dom": Object {
                              "alias": "variable",
                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                            },
                            "exports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                            },
                            "function": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "function-variable": Object {
                              "alias": "function",
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "generic-function": Object {
                              "greedy": true,
                              "inside": Object {
                                "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                "generic": Object {
                                  "alias": "class-name",
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                      /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                      /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                      /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/,
                            },
                            "imports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                            },
                            "keyword": Array [
                              Object {
                                "alias": "module",
                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                              },
                              Object {
                                "alias": "control-flow",
                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                              },
                              Object {
                                "alias": Array [
                                  "null",
                                  "nil",
                                ],
                                "pattern": /\\\\bnull\\\\b/,
                              },
                              Object {
                                "alias": "nil",
                                "pattern": /\\\\bundefined\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                              },
                              /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                              /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                              /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                            ],
                            "known-class-name": Array [
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                              },
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                              },
                            ],
                            "maybe-class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "method": Object {
                              "alias": Array [
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "method-variable": Object {
                              "alias": Array [
                                "function-variable",
                                "method",
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "property-access": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                            },
                            "spread": Object {
                              "alias": "operator",
                              "pattern": /\\\\\\.\\{3\\}/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            },
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "template-string": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "css",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "html",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "svg",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "inside": Object {
                                      "interpolation-punctuation": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                  },
                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                            ],
                          },
                          "tsx": Object {
                            "arrow": Object {
                              "alias": "operator",
                              "pattern": /=>/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "class-name": Object {
                              "greedy": true,
                              "inside": Object {
                                "arrow": Object {
                                  "alias": "operator",
                                  "pattern": /=>/,
                                },
                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                "comment": Array [
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                  },
                                ],
                                "console": Object {
                                  "alias": "class-name",
                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                },
                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                "dom": Object {
                                  "alias": "variable",
                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                },
                                "exports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                },
                                "function": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "function-variable": Object {
                                  "alias": "function",
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "hashbang": Object {
                                  "alias": "comment",
                                  "greedy": true,
                                  "pattern": /\\^#!\\.\\*/,
                                },
                                "imports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                },
                                "keyword": Array [
                                  Object {
                                    "alias": "module",
                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "control-flow",
                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": Array [
                                      "null",
                                      "nil",
                                    ],
                                    "pattern": /\\\\bnull\\\\b/,
                                  },
                                  Object {
                                    "alias": "nil",
                                    "pattern": /\\\\bundefined\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                  },
                                  /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                  /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                  /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                ],
                                "known-class-name": Array [
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                  },
                                ],
                                "maybe-class-name": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                },
                                "method": Object {
                                  "alias": Array [
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "method-variable": Object {
                                  "alias": Array [
                                    "function-variable",
                                    "method",
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "number": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                },
                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                "property-access": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                },
                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                "regex": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                    "regex-source": Object {
                                      "alias": "language-regex",
                                      "inside": undefined,
                                      "lookbehind": true,
                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                },
                                "spread": Object {
                                  "alias": "operator",
                                  "pattern": /\\\\\\.\\{3\\}/,
                                },
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                },
                                "string-property": Object {
                                  "alias": "property",
                                  "greedy": true,
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                },
                                "template-string": Array [
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "css",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "html",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "svg",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                            },
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "console": Object {
                              "alias": "class-name",
                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                            },
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "decorator": Object {
                              "inside": Object {
                                "at": Object {
                                  "alias": "operator",
                                  "pattern": /\\^@/,
                                },
                                "function": /\\^\\[\\\\s\\\\S\\]\\+/,
                              },
                              "pattern": /@\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "dom": Object {
                              "alias": "variable",
                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "exports": Object {
                              "inside": Object {
                                "arrow": Object {
                                  "alias": "operator",
                                  "pattern": /=>/,
                                },
                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                "class-name": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                      /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                      /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                      /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                },
                                "comment": Array [
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                  },
                                ],
                                "console": Object {
                                  "alias": "class-name",
                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                },
                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                "decorator": Object {
                                  "inside": Object {
                                    "at": Object {
                                      "alias": "operator",
                                      "pattern": /\\^@/,
                                    },
                                    "function": /\\^\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "pattern": /@\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                },
                                "dom": Object {
                                  "alias": "variable",
                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                },
                                "exports": [Circular],
                                "function": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "function-variable": Object {
                                  "alias": "function",
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "generic-function": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    "generic": Object {
                                      "alias": "class-name",
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                          /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                          /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                          /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                    },
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                },
                                "hashbang": Object {
                                  "alias": "comment",
                                  "greedy": true,
                                  "pattern": /\\^#!\\.\\*/,
                                },
                                "imports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                },
                                "keyword": Array [
                                  Object {
                                    "alias": "module",
                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "control-flow",
                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": Array [
                                      "null",
                                      "nil",
                                    ],
                                    "pattern": /\\\\bnull\\\\b/,
                                  },
                                  Object {
                                    "alias": "nil",
                                    "pattern": /\\\\bundefined\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                  },
                                  /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                  /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                  /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                ],
                                "known-class-name": Array [
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                  },
                                ],
                                "maybe-class-name": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                },
                                "method": Object {
                                  "alias": Array [
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "method-variable": Object {
                                  "alias": Array [
                                    "function-variable",
                                    "method",
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "number": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                },
                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                "property-access": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                },
                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                "regex": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                    "regex-source": Object {
                                      "alias": "language-regex",
                                      "inside": undefined,
                                      "lookbehind": true,
                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                },
                                "spread": Object {
                                  "alias": "operator",
                                  "pattern": /\\\\\\.\\{3\\}/,
                                },
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                },
                                "string-property": Object {
                                  "alias": "property",
                                  "greedy": true,
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                },
                                "template-string": Array [
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "css",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "html",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "svg",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                            },
                            "function": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "function-variable": Object {
                              "alias": "function",
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "generic-function": Object {
                              "greedy": true,
                              "inside": Object {
                                "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                "generic": Object {
                                  "alias": "class-name",
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                      /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                      /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                      /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/,
                            },
                            "imports": Object {
                              "inside": Object {
                                "arrow": Object {
                                  "alias": "operator",
                                  "pattern": /=>/,
                                },
                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                "class-name": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                      /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                      /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                      /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                },
                                "comment": Array [
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                  },
                                ],
                                "console": Object {
                                  "alias": "class-name",
                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                },
                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                "decorator": Object {
                                  "inside": Object {
                                    "at": Object {
                                      "alias": "operator",
                                      "pattern": /\\^@/,
                                    },
                                    "function": /\\^\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "pattern": /@\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                },
                                "dom": Object {
                                  "alias": "variable",
                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                },
                                "exports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                },
                                "function": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "function-variable": Object {
                                  "alias": "function",
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "generic-function": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    "generic": Object {
                                      "alias": "class-name",
                                      "inside": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                          /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                          /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                          /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Array [
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "css",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "html",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "embedded-code": Object {
                                                "alias": "svg",
                                                "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": Object {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        ],
                                      },
                                      "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                    },
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                },
                                "hashbang": Object {
                                  "alias": "comment",
                                  "greedy": true,
                                  "pattern": /\\^#!\\.\\*/,
                                },
                                "imports": [Circular],
                                "keyword": Array [
                                  Object {
                                    "alias": "module",
                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "control-flow",
                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": Array [
                                      "null",
                                      "nil",
                                    ],
                                    "pattern": /\\\\bnull\\\\b/,
                                  },
                                  Object {
                                    "alias": "nil",
                                    "pattern": /\\\\bundefined\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                  },
                                  /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                  /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                  /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                ],
                                "known-class-name": Array [
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                  },
                                ],
                                "maybe-class-name": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                },
                                "method": Object {
                                  "alias": Array [
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "method-variable": Object {
                                  "alias": Array [
                                    "function-variable",
                                    "method",
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "number": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                },
                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                "property-access": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                },
                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                "regex": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                    "regex-source": Object {
                                      "alias": "language-regex",
                                      "inside": undefined,
                                      "lookbehind": true,
                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                },
                                "spread": Object {
                                  "alias": "operator",
                                  "pattern": /\\\\\\.\\{3\\}/,
                                },
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                },
                                "string-property": Object {
                                  "alias": "property",
                                  "greedy": true,
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                },
                                "template-string": Array [
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "css",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "html",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "svg",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                            },
                            "keyword": Array [
                              Object {
                                "alias": "module",
                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                              },
                              Object {
                                "alias": "control-flow",
                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                              },
                              Object {
                                "alias": Array [
                                  "null",
                                  "nil",
                                ],
                                "pattern": /\\\\bnull\\\\b/,
                              },
                              Object {
                                "alias": "nil",
                                "pattern": /\\\\bundefined\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                              },
                              /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                              /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                              /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                            ],
                            "known-class-name": Array [
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                              },
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                              },
                            ],
                            "maybe-class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "method": Object {
                              "alias": Array [
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "method-variable": Object {
                              "alias": Array [
                                "function-variable",
                                "method",
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "property-access": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                            },
                            "script": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-javascript": Object {
                                      "inside": Object {
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "class-name": Array [
                                          Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                          },
                                        ],
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        "function-variable": Object {
                                          "alias": "function",
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                        ],
                                        "literal-property": Object {
                                          "alias": "property",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "parameter": Array [
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                          },
                                          Object {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                          },
                                        ],
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "interpolation-punctuation": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                            },
                                            "string": /\\[\\\\s\\\\S\\]\\+/,
                                            "template-punctuation": Object {
                                              "alias": "string",
                                              "pattern": /\\^\`\\|\`\\$/,
                                            },
                                          },
                                          "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-javascript": Object {
                                  "inside": Object {
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "class-name": Array [
                                      Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                      },
                                    ],
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    "function-variable": Object {
                                      "alias": "function",
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                    ],
                                    "literal-property": Object {
                                      "alias": "property",
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "parameter": Array [
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                      },
                                      Object {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                      },
                                    ],
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "interpolation": Object {
                                          "inside": Object {
                                            "interpolation-punctuation": Object {
                                              "alias": "punctuation",
                                              "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                            },
                                            "rest": [Circular],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                        },
                                        "string": /\\[\\\\s\\\\S\\]\\+/,
                                        "template-punctuation": Object {
                                          "alias": "string",
                                          "pattern": /\\^\`\\|\`\\$/,
                                        },
                                      },
                                      "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                            },
                            "spread": Object {
                              "alias": "operator",
                              "pattern": /\\\\\\.\\{3\\}/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            },
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "style": Object {
                              "greedy": true,
                              "inside": Object {
                                "included-cdata": Object {
                                  "inside": Object {
                                    "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                    "language-css": Object {
                                      "inside": Object {
                                        "atrule": Object {
                                          "inside": Object {
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                            },
                                            "rest": [Circular],
                                            "rule": /\\^@\\[\\\\w-\\]\\+/,
                                            "selector-function-argument": Object {
                                              "alias": "selector",
                                              "inside": Object {
                                                "attribute": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                    },
                                                    "attr-value": Array [
                                                      /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                      },
                                                    ],
                                                    "case-sensitivity": Object {
                                                      "alias": "keyword",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                    },
                                                    "namespace": Object {
                                                      "inside": Object {
                                                        "punctuation": /\\\\\\|\\$/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                    },
                                                    "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                    "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                  },
                                                  "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                },
                                                "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                "id": /#\\[-\\\\w\\]\\+/,
                                                "n-th": Array [
                                                  Object {
                                                    "inside": Object {
                                                      "number": /\\[\\\\dn\\]\\+/,
                                                      "operator": /\\[\\+-\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                  },
                                                ],
                                                "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                "punctuation": /\\[\\(\\),\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                        },
                                        "color": Array [
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                          },
                                          Object {
                                            "inside": Object {
                                              "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "punctuation": /\\[\\(\\),\\]/,
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                            },
                                            "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                          },
                                        ],
                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                        "function": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                        },
                                        "hexcode": Object {
                                          "alias": "color",
                                          "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                        },
                                        "important": /!important\\\\b/i,
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                        },
                                        "operator": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                        },
                                        "property": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                        },
                                        "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                        "selector": Object {
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                        },
                                        "unit": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                        },
                                        "url": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^url/i,
                                            "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                            "string": Object {
                                              "alias": "url",
                                              "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                            },
                                          },
                                          "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                        },
                                        "variable": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                    },
                                  },
                                  "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                },
                                "language-css": Object {
                                  "inside": Object {
                                    "atrule": Object {
                                      "inside": Object {
                                        "keyword": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                        },
                                        "rest": [Circular],
                                        "rule": /\\^@\\[\\\\w-\\]\\+/,
                                        "selector-function-argument": Object {
                                          "alias": "selector",
                                          "inside": Object {
                                            "attribute": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                },
                                                "attr-value": Array [
                                                  /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                  },
                                                ],
                                                "case-sensitivity": Object {
                                                  "alias": "keyword",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                },
                                                "namespace": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\\\\\|\\$/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                },
                                                "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                              },
                                              "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                            },
                                            "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                            "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                            "id": /#\\[-\\\\w\\]\\+/,
                                            "n-th": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\[\\\\dn\\]\\+/,
                                                  "operator": /\\[\\+-\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                              },
                                            ],
                                            "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            "punctuation": /\\[\\(\\),\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                      },
                                      "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                    },
                                    "color": Array [
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                      },
                                      Object {
                                        "inside": Object {
                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                          "number": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                          },
                                          "punctuation": /\\[\\(\\),\\]/,
                                          "unit": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                          },
                                        },
                                        "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                      },
                                    ],
                                    "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                    "function": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                    },
                                    "hexcode": Object {
                                      "alias": "color",
                                      "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                    },
                                    "important": /!important\\\\b/i,
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                    },
                                    "operator": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                    },
                                    "property": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                    },
                                    "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                    "selector": Object {
                                      "inside": Object {
                                        "attribute": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "attr-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                            },
                                            "attr-value": Array [
                                              /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                              },
                                            ],
                                            "case-sensitivity": Object {
                                              "alias": "keyword",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                            },
                                            "namespace": Object {
                                              "inside": Object {
                                                "punctuation": /\\\\\\|\\$/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                            },
                                            "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                            "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                          },
                                          "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                        },
                                        "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                        "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                        "id": /#\\[-\\\\w\\]\\+/,
                                        "n-th": Array [
                                          Object {
                                            "inside": Object {
                                              "number": /\\[\\\\dn\\]\\+/,
                                              "operator": /\\[\\+-\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                          },
                                        ],
                                        "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                        "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        "punctuation": /\\[\\(\\),\\]/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                    },
                                    "unit": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                    },
                                    "url": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "function": /\\^url/i,
                                        "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                        "string": Object {
                                          "alias": "url",
                                          "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                        },
                                      },
                                      "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                    },
                                    "variable": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                    },
                                  },
                                  "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\(\\?!\\\\\\{\\)\\(\\?:"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s'">\\]\\+\\)/,
                                },
                                "comment": Array [
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                  },
                                ],
                                "punctuation": /\\\\/\\?>/,
                                "script": Object {
                                  "alias": "language-javascript",
                                  "inside": Object {
                                    "rest": [Circular],
                                    "script-punctuation": Object {
                                      "alias": "punctuation",
                                      "pattern": /\\^=\\(\\?=\\\\\\{\\)/,
                                    },
                                  },
                                  "pattern": /=\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)/,
                                },
                                "special-attr": Array [
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "css",
                                              "language-css",
                                            ],
                                            "inside": Object {
                                              "atrule": Object {
                                                "inside": Object {
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": Object {
                                                    "alias": "selector",
                                                    "inside": Object {
                                                      "attribute": Object {
                                                        "greedy": true,
                                                        "inside": Object {
                                                          "attr-name": Object {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": Array [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            Object {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": Object {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": Object {
                                                            "inside": Object {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": Array [
                                                        Object {
                                                          "inside": Object {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\(\\?!\\[\\\\w-\\]\\)/i,
                                                },
                                                Object {
                                                  "inside": Object {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:hsl\\|rgb\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:hsl\\|rgb\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-a-z0-9\\]\\)\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              },
                                              "hexcode": Object {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\[\\\\da-f\\]\\{3,8\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              },
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": Object {
                                                "inside": Object {
                                                  "attribute": Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "attr-name": Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": Array [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": Object {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": Object {
                                                        "inside": Object {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": Array [
                                                    Object {
                                                      "inside": Object {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\{\\}\\\\s\\]\\)\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)/,
                                              },
                                              "unit": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\(\\?!\\[\\\\w-\\]\\)\\)/,
                                              },
                                              "url": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": Object {
                                                    "alias": "url",
                                                    "pattern": /\\^\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\(\\?:"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)\\*'\\)\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:style\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                  Object {
                                    "inside": Object {
                                      "attr-name": /\\^\\[\\^\\\\s=\\]\\+/,
                                      "attr-value": Object {
                                        "inside": Object {
                                          "punctuation": Array [
                                            Object {
                                              "alias": "attr-equals",
                                              "pattern": /\\^=/,
                                            },
                                            /"\\|'/,
                                          ],
                                          "value": Object {
                                            "alias": Array [
                                              "javascript",
                                              "language-javascript",
                                            ],
                                            "inside": Object {
                                              "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                              "class-name": Array [
                                                Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:constructor\\|prototype\\)\\)/,
                                                },
                                              ],
                                              "comment": Array [
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              "function-variable": Object {
                                                "alias": "function",
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "hashbang": Object {
                                                "alias": "comment",
                                                "greedy": true,
                                                "pattern": /\\^#!\\.\\*/,
                                              },
                                              "keyword": Array [
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                },
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "literal-property": Object {
                                                "alias": "property",
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "number": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                              },
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": Array [
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                  "regex-source": Object {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "string": Object {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "string-property": Object {
                                                "alias": "property",
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                              },
                                              "template-string": Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^=\\\\s\\*\\(\\["'\\]\\|\\(\\?!\\["'\\]\\)\\)\\)\\\\S\\[\\\\s\\\\S\\]\\*\\(\\?=\\\\2\\$\\)/,
                                          },
                                        },
                                        "pattern": /=\\[\\\\s\\\\S\\]\\+/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)\\(\\?:on\\(\\?:abort\\|blur\\|change\\|click\\|composition\\(\\?:end\\|start\\|update\\)\\|dblclick\\|error\\|focus\\(\\?:in\\|out\\)\\?\\|key\\(\\?:down\\|up\\)\\|load\\|mouse\\(\\?:down\\|enter\\|leave\\|move\\|out\\|over\\|up\\)\\|reset\\|resize\\|scroll\\|select\\|slotchange\\|submit\\|unload\\|wheel\\)\\)\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)/i,
                                  },
                                ],
                                "spread": Object {
                                  "inside": [Circular],
                                  "pattern": /\\(\\?:\\\\\\{\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\*\\\\\\.\\{3\\}\\(\\?:\\[\\^\\{\\}\\]\\|\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)\\)\\*\\\\\\}\\)/,
                                },
                                "tag": Object {
                                  "inside": Object {
                                    "class-name": /\\^\\[A-Z\\]\\\\w\\*\\(\\?:\\\\\\.\\[A-Z\\]\\\\w\\*\\)\\*\\$/,
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\*/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\|\\(\\?=<\\\\/\\)\\)\\(\\?:<\\\\/\\?\\(\\?:\\[\\\\w\\.:-\\]\\+\\(\\?:\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\+\\(\\?:\\[\\\\w\\.:\\$-\\]\\+\\(\\?:=\\(\\?:"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s\\{'"/>=\\]\\+\\|\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)\\)\\)\\?\\|\\(\\?:\\\\\\{\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\*\\\\\\.\\{3\\}\\(\\?:\\[\\^\\{\\}\\]\\|\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\)\\)\\*\\\\\\}\\)\\)\\)\\*\\(\\?:\\\\s\\|\\\\/\\\\/\\.\\*\\(\\?!\\.\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\\\\\*\\\\/\\)\\*\\\\/\\?\\)\\?>\\)/,
                            },
                            "template-string": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "css",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "html",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "svg",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "inside": Object {
                                      "interpolation-punctuation": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": Object {
                                        "arrow": Object {
                                          "alias": "operator",
                                          "pattern": /=>/,
                                        },
                                        "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                        "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                        "class-name": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "arrow": Object {
                                              "alias": "operator",
                                              "pattern": /=>/,
                                            },
                                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                            "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                            "comment": Array [
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "console": Object {
                                              "alias": "class-name",
                                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                            },
                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                            "dom": Object {
                                              "alias": "variable",
                                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                            },
                                            "exports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                            },
                                            "function": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "function-variable": Object {
                                              "alias": "function",
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "hashbang": Object {
                                              "alias": "comment",
                                              "greedy": true,
                                              "pattern": /\\^#!\\.\\*/,
                                            },
                                            "imports": Object {
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                            },
                                            "keyword": Array [
                                              Object {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": Array [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              Object {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                              },
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                              /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                              /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                              /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                            ],
                                            "known-class-name": Array [
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                              },
                                              Object {
                                                "alias": "class-name",
                                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                              },
                                            ],
                                            "maybe-class-name": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                            },
                                            "method": Object {
                                              "alias": Array [
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            },
                                            "method-variable": Object {
                                              "alias": Array [
                                                "function-variable",
                                                "method",
                                                "function",
                                                "property-access",
                                              ],
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                            },
                                            "number": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                            },
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "property-access": Object {
                                              "inside": Object {
                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            },
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                "regex-source": Object {
                                                  "alias": "language-regex",
                                                  "inside": undefined,
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                            },
                                            "spread": Object {
                                              "alias": "operator",
                                              "pattern": /\\\\\\.\\{3\\}/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "string-property": Object {
                                              "alias": "property",
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                            },
                                            "template-string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "css",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "html",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "embedded-code": Object {
                                                    "alias": "svg",
                                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "interpolation": Object {
                                                    "inside": Object {
                                                      "interpolation-punctuation": Object {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                      },
                                                      "rest": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": Object {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                        },
                                        "comment": Array [
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                          },
                                        ],
                                        "console": Object {
                                          "alias": "class-name",
                                          "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                        },
                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                        "decorator": Object {
                                          "inside": Object {
                                            "at": Object {
                                              "alias": "operator",
                                              "pattern": /\\^@/,
                                            },
                                            "function": /\\^\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "pattern": /@\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "dom": Object {
                                          "alias": "variable",
                                          "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                        },
                                        "exports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                        },
                                        "function": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "function-variable": Object {
                                          "alias": "function",
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "generic-function": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                            "generic": Object {
                                              "alias": "class-name",
                                              "inside": Object {
                                                "arrow": Object {
                                                  "alias": "operator",
                                                  "pattern": /=>/,
                                                },
                                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                                "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                                "comment": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "console": Object {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                },
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "dom": Object {
                                                  "alias": "variable",
                                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                                },
                                                "exports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                },
                                                "function": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "hashbang": Object {
                                                  "alias": "comment",
                                                  "greedy": true,
                                                  "pattern": /\\^#!\\.\\*/,
                                                },
                                                "imports": Object {
                                                  "inside": [Circular],
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                },
                                                "keyword": Array [
                                                  Object {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": Array [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                                  },
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                  /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                                  /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                                  /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                                ],
                                                "known-class-name": Array [
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                                  },
                                                  Object {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                  },
                                                ],
                                                "maybe-class-name": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                },
                                                "method": Object {
                                                  "alias": Array [
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                },
                                                "method-variable": Object {
                                                  "alias": Array [
                                                    "function-variable",
                                                    "method",
                                                    "function",
                                                    "property-access",
                                                  ],
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "number": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                                },
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "property-access": Object {
                                                  "inside": Object {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                },
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                                    "regex-source": Object {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "spread": Object {
                                                  "alias": "operator",
                                                  "pattern": /\\\\\\.\\{3\\}/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "string-property": Object {
                                                  "alias": "property",
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                                },
                                                "template-string": Array [
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "css",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "html",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "embedded-code": Object {
                                                        "alias": "svg",
                                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                                      },
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "inside": Object {
                                                      "interpolation": Object {
                                                        "inside": Object {
                                                          "interpolation-punctuation": Object {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                                          },
                                                          "rest": [Circular],
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": Object {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                ],
                                              },
                                              "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                            },
                                          },
                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                        },
                                        "hashbang": Object {
                                          "alias": "comment",
                                          "greedy": true,
                                          "pattern": /\\^#!\\.\\*/,
                                        },
                                        "imports": Object {
                                          "inside": [Circular],
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                        },
                                        "keyword": Array [
                                          Object {
                                            "alias": "module",
                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "control-flow",
                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": Array [
                                              "null",
                                              "nil",
                                            ],
                                            "pattern": /\\\\bnull\\\\b/,
                                          },
                                          Object {
                                            "alias": "nil",
                                            "pattern": /\\\\bundefined\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                          },
                                          Object {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          },
                                          /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                          /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                          /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                        ],
                                        "known-class-name": Array [
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                          },
                                          Object {
                                            "alias": "class-name",
                                            "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                          },
                                        ],
                                        "maybe-class-name": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                        },
                                        "method": Object {
                                          "alias": Array [
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                        },
                                        "method-variable": Object {
                                          "alias": Array [
                                            "function-variable",
                                            "method",
                                            "function",
                                            "property-access",
                                          ],
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                        },
                                        "number": Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                        },
                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                        "property-access": Object {
                                          "inside": Object {
                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                        },
                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                        "regex": Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                            "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                            "regex-source": Object {
                                              "alias": "language-regex",
                                              "inside": undefined,
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                        },
                                        "spread": Object {
                                          "alias": "operator",
                                          "pattern": /\\\\\\.\\{3\\}/,
                                        },
                                        "string": Object {
                                          "greedy": true,
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                        "string-property": Object {
                                          "alias": "property",
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                        },
                                        "template-string": [Circular],
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                  },
                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                            ],
                          },
                          "txt": Object {},
                          "typescript": Object {
                            "arrow": Object {
                              "alias": "operator",
                              "pattern": /=>/,
                            },
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                            "class-name": Object {
                              "greedy": true,
                              "inside": Object {
                                "arrow": Object {
                                  "alias": "operator",
                                  "pattern": /=>/,
                                },
                                "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                "comment": Array [
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                  },
                                ],
                                "console": Object {
                                  "alias": "class-name",
                                  "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                },
                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                "dom": Object {
                                  "alias": "variable",
                                  "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                },
                                "exports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                },
                                "function": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "function-variable": Object {
                                  "alias": "function",
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "hashbang": Object {
                                  "alias": "comment",
                                  "greedy": true,
                                  "pattern": /\\^#!\\.\\*/,
                                },
                                "imports": Object {
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                },
                                "keyword": Array [
                                  Object {
                                    "alias": "module",
                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "control-flow",
                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": Array [
                                      "null",
                                      "nil",
                                    ],
                                    "pattern": /\\\\bnull\\\\b/,
                                  },
                                  Object {
                                    "alias": "nil",
                                    "pattern": /\\\\bundefined\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                  },
                                  Object {
                                    "lookbehind": true,
                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                  },
                                  /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                  /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                  /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                ],
                                "known-class-name": Array [
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                  },
                                  Object {
                                    "alias": "class-name",
                                    "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                  },
                                ],
                                "maybe-class-name": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                },
                                "method": Object {
                                  "alias": Array [
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                },
                                "method-variable": Object {
                                  "alias": Array [
                                    "function-variable",
                                    "method",
                                    "function",
                                    "property-access",
                                  ],
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                },
                                "number": Object {
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                },
                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                "property-access": Object {
                                  "inside": Object {
                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                },
                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                "regex": Object {
                                  "greedy": true,
                                  "inside": Object {
                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                    "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                    "regex-source": Object {
                                      "alias": "language-regex",
                                      "inside": undefined,
                                      "lookbehind": true,
                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                    },
                                  },
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                },
                                "spread": Object {
                                  "alias": "operator",
                                  "pattern": /\\\\\\.\\{3\\}/,
                                },
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                },
                                "string-property": Object {
                                  "alias": "property",
                                  "greedy": true,
                                  "lookbehind": true,
                                  "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                },
                                "template-string": Array [
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "css",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "html",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "embedded-code": Object {
                                        "alias": "svg",
                                        "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                      },
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                  Object {
                                    "greedy": true,
                                    "inside": Object {
                                      "interpolation": Object {
                                        "inside": Object {
                                          "interpolation-punctuation": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                          },
                                          "rest": [Circular],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                      },
                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                      "template-punctuation": Object {
                                        "alias": "string",
                                        "pattern": /\\^\`\\|\`\\$/,
                                      },
                                    },
                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                  },
                                ],
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                            },
                            "comment": Array [
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                              },
                              Object {
                                "greedy": true,
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                              },
                            ],
                            "console": Object {
                              "alias": "class-name",
                              "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                            },
                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                            "decorator": Object {
                              "inside": Object {
                                "at": Object {
                                  "alias": "operator",
                                  "pattern": /\\^@/,
                                },
                                "function": /\\^\\[\\\\s\\\\S\\]\\+/,
                              },
                              "pattern": /@\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "dom": Object {
                              "alias": "variable",
                              "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                            },
                            "exports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                            },
                            "function": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "function-variable": Object {
                              "alias": "function",
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "generic-function": Object {
                              "greedy": true,
                              "inside": Object {
                                "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                "generic": Object {
                                  "alias": "class-name",
                                  "inside": Object {
                                    "arrow": Object {
                                      "alias": "operator",
                                      "pattern": /=>/,
                                    },
                                    "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                    "builtin": /\\\\b\\(\\?:Array\\|Function\\|Promise\\|any\\|boolean\\|console\\|never\\|number\\|string\\|symbol\\|unknown\\)\\\\b/,
                                    "comment": Array [
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                      },
                                    ],
                                    "console": Object {
                                      "alias": "class-name",
                                      "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                    },
                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                    "dom": Object {
                                      "alias": "variable",
                                      "pattern": /\\\\b\\(\\?:document\\|\\(\\?:local\\|session\\)Storage\\|location\\|navigator\\|performance\\|window\\)\\\\b/,
                                    },
                                    "exports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                    },
                                    "function": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "function-variable": Object {
                                      "alias": "function",
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "hashbang": Object {
                                      "alias": "comment",
                                      "greedy": true,
                                      "pattern": /\\^#!\\.\\*/,
                                    },
                                    "imports": Object {
                                      "inside": [Circular],
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                    },
                                    "keyword": Array [
                                      Object {
                                        "alias": "module",
                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "control-flow",
                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": Array [
                                          "null",
                                          "nil",
                                        ],
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      Object {
                                        "alias": "nil",
                                        "pattern": /\\\\bundefined\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                                      },
                                      Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      },
                                      /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                                      /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                                      /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                                    ],
                                    "known-class-name": Array [
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                                      },
                                      Object {
                                        "alias": "class-name",
                                        "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                      },
                                    ],
                                    "maybe-class-name": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                    },
                                    "method": Object {
                                      "alias": Array [
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                    },
                                    "method-variable": Object {
                                      "alias": Array [
                                        "function-variable",
                                        "method",
                                        "function",
                                        "property-access",
                                      ],
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                    },
                                    "number": Object {
                                      "lookbehind": true,
                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                                    },
                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                    "property-access": Object {
                                      "inside": Object {
                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                    },
                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                    "regex": Object {
                                      "greedy": true,
                                      "inside": Object {
                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                        "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                        "regex-source": Object {
                                          "alias": "language-regex",
                                          "inside": undefined,
                                          "lookbehind": true,
                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                        },
                                      },
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                    },
                                    "spread": Object {
                                      "alias": "operator",
                                      "pattern": /\\\\\\.\\{3\\}/,
                                    },
                                    "string": Object {
                                      "greedy": true,
                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                    },
                                    "string-property": Object {
                                      "alias": "property",
                                      "greedy": true,
                                      "lookbehind": true,
                                      "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                                    },
                                    "template-string": Array [
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "css",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "html",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "embedded-code": Object {
                                            "alias": "svg",
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": Object {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    ],
                                  },
                                  "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                },
                              },
                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                            },
                            "hashbang": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /\\^#!\\.\\*/,
                            },
                            "imports": Object {
                              "inside": [Circular],
                              "lookbehind": true,
                              "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                            },
                            "keyword": Array [
                              Object {
                                "alias": "module",
                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                              },
                              Object {
                                "alias": "control-flow",
                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|finally\\|for\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                              },
                              Object {
                                "alias": Array [
                                  "null",
                                  "nil",
                                ],
                                "pattern": /\\\\bnull\\\\b/,
                              },
                              Object {
                                "alias": "nil",
                                "pattern": /\\\\bundefined\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\^\\|\\\\\\}\\)\\\\s\\*\\)catch\\\\b/,
                              },
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|assert\\(\\?=\\\\s\\*\\\\\\{\\)\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\(\\?=\\\\s\\*\\(\\?:\\\\\\{\\|\\$\\)\\)\\|for\\|from\\(\\?=\\\\s\\*\\(\\?:\\['"\\]\\|\\$\\)\\)\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\(\\?:\\[#\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                              },
                              /\\\\b\\(\\?:abstract\\|declare\\|is\\|keyof\\|readonly\\|require\\)\\\\b/,
                              /\\\\b\\(\\?:asserts\\|infer\\|interface\\|module\\|namespace\\|type\\)\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\{_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)/,
                              /\\\\btype\\\\b\\(\\?=\\\\s\\*\\(\\?:\\[\\\\\\{\\*\\]\\|\\$\\)\\)/,
                            ],
                            "known-class-name": Array [
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\(\\?:Float\\(\\?:32\\|64\\)\\|\\(\\?:Int\\|Uint\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|\\(\\?:Weak\\)\\?\\(\\?:Map\\|Set\\)\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|WebAssembly\\)\\\\b/,
                              },
                              Object {
                                "alias": "class-name",
                                "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                              },
                            ],
                            "maybe-class-name": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                            },
                            "method": Object {
                              "alias": Array [
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                            },
                            "method-variable": Object {
                              "alias": Array [
                                "function-variable",
                                "method",
                                "function",
                                "property-access",
                              ],
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\)\\(\\?:NaN\\|Infinity\\|0\\[bB\\]\\[01\\]\\+\\(\\?:_\\[01\\]\\+\\)\\*n\\?\\|0\\[oO\\]\\[0-7\\]\\+\\(\\?:_\\[0-7\\]\\+\\)\\*n\\?\\|0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\(\\?:_\\[\\\\dA-Fa-f\\]\\+\\)\\*n\\?\\|\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*n\\|\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\(\\?:\\\\\\.\\(\\?:\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\?\\|\\\\\\.\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\(\\?:_\\\\d\\+\\)\\*\\)\\?\\)\\(\\?!\\[\\\\w\\$\\]\\)/,
                            },
                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                            "property-access": Object {
                              "inside": Object {
                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                            "regex": Object {
                              "greedy": true,
                              "inside": Object {
                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                "regex-flags": /\\^\\[a-z\\]\\+\\$/,
                                "regex-source": Object {
                                  "alias": "language-regex",
                                  "inside": undefined,
                                  "lookbehind": true,
                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                },
                              },
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[dgimyus\\]\\{0,7\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                            },
                            "spread": Object {
                              "alias": "operator",
                              "pattern": /\\\\\\.\\{3\\}/,
                            },
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                            },
                            "string-property": Object {
                              "alias": "property",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[,\\{\\]\\)\\[ \\\\t\\]\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\(\\?=\\\\s\\*:\\)/m,
                            },
                            "template-string": Array [
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "css",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\b\\(\\?:styled\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\?\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\\\w\\+\\(\\?:\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\)\\*\\)\\*\\|css\\(\\?:\\\\s\\*\\\\\\.\\\\s\\*\\(\\?:global\\|resolve\\)\\)\\?\\|createGlobalStyle\\|keyframes\\)\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "html",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bhtml\\|\\\\\\.\\\\s\\*\\(\\?:inner\\|outer\\)HTML\\\\s\\*\\\\\\+\\?=\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "embedded-code": Object {
                                    "alias": "svg",
                                    "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                  },
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "lookbehind": true,
                                "pattern": /\\(\\(\\?:\\\\bsvg\\)\\\\s\\*\\)\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                              Object {
                                "greedy": true,
                                "inside": Object {
                                  "interpolation": Object {
                                    "inside": Object {
                                      "interpolation-punctuation": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\$\\\\\\{\\|\\\\\\}\\$/,
                                      },
                                      "rest": [Circular],
                                    },
                                    "lookbehind": true,
                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}/,
                                  },
                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                  "template-punctuation": Object {
                                    "alias": "string",
                                    "pattern": /\\^\`\\|\`\\$/,
                                  },
                                },
                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\)\\*\\\\\\}\\)\\+\\\\\\}\\|\\(\\?!\\\\\\$\\\\\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                              },
                            ],
                          },
                          "vb": Object {
                            "boolean": /\\\\b\\(\\?:True\\|False\\|Nothing\\)\\\\b/i,
                            "comment": Object {
                              "inside": Object {
                                "keyword": /\\^REM/i,
                              },
                              "pattern": /\\(\\?:\\['ââ\\]\\|REM\\\\b\\)\\(\\?:\\[\\^\\\\r\\\\n_\\]\\|_\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?\\)\\*/i,
                            },
                            "date": Object {
                              "alias": "builtin",
                              "pattern": /#\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:\\\\d\\+\\(\\[/-\\]\\)\\\\d\\+\\\\1\\\\d\\+\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\+\\(\\?:\\\\d\\+\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\|\\\\d\\+:\\\\d\\+\\(\\?::\\\\d\\+\\)\\?\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\)\\?\\)\\)\\?\\|\\\\d\\+\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\|\\\\d\\+:\\\\d\\+\\(\\?::\\\\d\\+\\)\\?\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\)\\?\\)\\[\\^\\\\S\\\\r\\\\n\\]\\*#/i,
                            },
                            "directive": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /#\\(\\?:Const\\|Else\\|ElseIf\\|End\\|ExternalChecksum\\|ExternalSource\\|If\\|Region\\)\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]_\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\|\\.\\)\\+/i,
                            },
                            "keyword": /\\\\b\\(\\?:AddHandler\\|AddressOf\\|Alias\\|And\\(\\?:Also\\)\\?\\|As\\|Boolean\\|ByRef\\|Byte\\|ByVal\\|Call\\|Case\\|Catch\\|C\\(\\?:Bool\\|Byte\\|Char\\|Date\\|Dbl\\|Dec\\|Int\\|Lng\\|Obj\\|SByte\\|Short\\|Sng\\|Str\\|Type\\|UInt\\|ULng\\|UShort\\)\\|Char\\|Class\\|Const\\|Continue\\|Currency\\|Date\\|Decimal\\|Declare\\|Default\\|Delegate\\|Dim\\|DirectCast\\|Do\\|Double\\|Each\\|Else\\(\\?:If\\)\\?\\|End\\(\\?:If\\)\\?\\|Enum\\|Erase\\|Error\\|Event\\|Exit\\|Finally\\|For\\|Friend\\|Function\\|Get\\(\\?:Type\\|XMLNamespace\\)\\?\\|Global\\|GoSub\\|GoTo\\|Handles\\|If\\|Implements\\|Imports\\|In\\|Inherits\\|Integer\\|Interface\\|Is\\|IsNot\\|Let\\|Lib\\|Like\\|Long\\|Loop\\|Me\\|Mod\\|Module\\|Must\\(\\?:Inherit\\|Override\\)\\|My\\(\\?:Base\\|Class\\)\\|Namespace\\|Narrowing\\|New\\|Next\\|Not\\(\\?:Inheritable\\|Overridable\\)\\?\\|Object\\|Of\\|On\\|Operator\\|Option\\(\\?:al\\)\\?\\|Or\\(\\?:Else\\)\\?\\|Out\\|Overloads\\|Overridable\\|Overrides\\|ParamArray\\|Partial\\|Private\\|Property\\|Protected\\|Public\\|RaiseEvent\\|ReadOnly\\|ReDim\\|RemoveHandler\\|Resume\\|Return\\|SByte\\|Select\\|Set\\|Shadows\\|Shared\\|short\\|Single\\|Static\\|Step\\|Stop\\|String\\|Structure\\|Sub\\|SyncLock\\|Then\\|Throw\\|To\\|Try\\|TryCast\\|Type\\|TypeOf\\|U\\(\\?:Integer\\|Long\\|Short\\)\\|Using\\|Variant\\|Wend\\|When\\|While\\|Widening\\|With\\(\\?:Events\\)\\?\\|WriteOnly\\|Until\\|Xor\\)\\\\b/i,
                            "number": /\\(\\?:\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)\\(\\?:E\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|&\\[HO\\]\\[\\\\dA-F\\]\\+\\)\\(\\?:U\\?\\[ILS\\]\\|\\[FRD\\]\\)\\?/i,
                            "operator": Array [
                              /\\[\\+\\\\-\\*/\\\\\\\\\\^<=>&#@\\$%!\\]/,
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\[\\^\\\\S\\\\r\\\\n\\]\\)_\\(\\?=\\[\\^\\\\S\\\\r\\\\n\\]\\*\\[\\\\r\\\\n\\]\\)/,
                              },
                            ],
                            "punctuation": /\\[\\{\\}\\(\\)\\.,:\\?\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\\\\\$\\?\\["ââ\\]\\(\\?:\\["ââ\\]\\{2\\}\\|\\[\\^"ââ\\]\\)\\*\\["ââ\\]C\\?/i,
                            },
                          },
                          "vba": Object {
                            "boolean": /\\\\b\\(\\?:True\\|False\\|Nothing\\)\\\\b/i,
                            "comment": Object {
                              "inside": Object {
                                "keyword": /\\^REM/i,
                              },
                              "pattern": /\\(\\?:\\['ââ\\]\\|REM\\\\b\\)\\(\\?:\\[\\^\\\\r\\\\n_\\]\\|_\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?\\)\\*/i,
                            },
                            "date": Object {
                              "alias": "builtin",
                              "pattern": /#\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:\\\\d\\+\\(\\[/-\\]\\)\\\\d\\+\\\\1\\\\d\\+\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\+\\(\\?:\\\\d\\+\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\|\\\\d\\+:\\\\d\\+\\(\\?::\\\\d\\+\\)\\?\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\)\\?\\)\\)\\?\\|\\\\d\\+\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\|\\\\d\\+:\\\\d\\+\\(\\?::\\\\d\\+\\)\\?\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\)\\?\\)\\[\\^\\\\S\\\\r\\\\n\\]\\*#/i,
                            },
                            "directive": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /#\\(\\?:Const\\|Else\\|ElseIf\\|End\\|ExternalChecksum\\|ExternalSource\\|If\\|Region\\)\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]_\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\|\\.\\)\\+/i,
                            },
                            "keyword": /\\\\b\\(\\?:AddHandler\\|AddressOf\\|Alias\\|And\\(\\?:Also\\)\\?\\|As\\|Boolean\\|ByRef\\|Byte\\|ByVal\\|Call\\|Case\\|Catch\\|C\\(\\?:Bool\\|Byte\\|Char\\|Date\\|Dbl\\|Dec\\|Int\\|Lng\\|Obj\\|SByte\\|Short\\|Sng\\|Str\\|Type\\|UInt\\|ULng\\|UShort\\)\\|Char\\|Class\\|Const\\|Continue\\|Currency\\|Date\\|Decimal\\|Declare\\|Default\\|Delegate\\|Dim\\|DirectCast\\|Do\\|Double\\|Each\\|Else\\(\\?:If\\)\\?\\|End\\(\\?:If\\)\\?\\|Enum\\|Erase\\|Error\\|Event\\|Exit\\|Finally\\|For\\|Friend\\|Function\\|Get\\(\\?:Type\\|XMLNamespace\\)\\?\\|Global\\|GoSub\\|GoTo\\|Handles\\|If\\|Implements\\|Imports\\|In\\|Inherits\\|Integer\\|Interface\\|Is\\|IsNot\\|Let\\|Lib\\|Like\\|Long\\|Loop\\|Me\\|Mod\\|Module\\|Must\\(\\?:Inherit\\|Override\\)\\|My\\(\\?:Base\\|Class\\)\\|Namespace\\|Narrowing\\|New\\|Next\\|Not\\(\\?:Inheritable\\|Overridable\\)\\?\\|Object\\|Of\\|On\\|Operator\\|Option\\(\\?:al\\)\\?\\|Or\\(\\?:Else\\)\\?\\|Out\\|Overloads\\|Overridable\\|Overrides\\|ParamArray\\|Partial\\|Private\\|Property\\|Protected\\|Public\\|RaiseEvent\\|ReadOnly\\|ReDim\\|RemoveHandler\\|Resume\\|Return\\|SByte\\|Select\\|Set\\|Shadows\\|Shared\\|short\\|Single\\|Static\\|Step\\|Stop\\|String\\|Structure\\|Sub\\|SyncLock\\|Then\\|Throw\\|To\\|Try\\|TryCast\\|Type\\|TypeOf\\|U\\(\\?:Integer\\|Long\\|Short\\)\\|Using\\|Variant\\|Wend\\|When\\|While\\|Widening\\|With\\(\\?:Events\\)\\?\\|WriteOnly\\|Until\\|Xor\\)\\\\b/i,
                            "number": /\\(\\?:\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)\\(\\?:E\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|&\\[HO\\]\\[\\\\dA-F\\]\\+\\)\\(\\?:U\\?\\[ILS\\]\\|\\[FRD\\]\\)\\?/i,
                            "operator": Array [
                              /\\[\\+\\\\-\\*/\\\\\\\\\\^<=>&#@\\$%!\\]/,
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\[\\^\\\\S\\\\r\\\\n\\]\\)_\\(\\?=\\[\\^\\\\S\\\\r\\\\n\\]\\*\\[\\\\r\\\\n\\]\\)/,
                              },
                            ],
                            "punctuation": /\\[\\{\\}\\(\\)\\.,:\\?\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\\\\\$\\?\\["ââ\\]\\(\\?:\\["ââ\\]\\{2\\}\\|\\[\\^"ââ\\]\\)\\*\\["ââ\\]C\\?/i,
                            },
                          },
                          "visual-basic": Object {
                            "boolean": /\\\\b\\(\\?:True\\|False\\|Nothing\\)\\\\b/i,
                            "comment": Object {
                              "inside": Object {
                                "keyword": /\\^REM/i,
                              },
                              "pattern": /\\(\\?:\\['ââ\\]\\|REM\\\\b\\)\\(\\?:\\[\\^\\\\r\\\\n_\\]\\|_\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?\\)\\*/i,
                            },
                            "date": Object {
                              "alias": "builtin",
                              "pattern": /#\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:\\\\d\\+\\(\\[/-\\]\\)\\\\d\\+\\\\1\\\\d\\+\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\+\\(\\?:\\\\d\\+\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\|\\\\d\\+:\\\\d\\+\\(\\?::\\\\d\\+\\)\\?\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\)\\?\\)\\)\\?\\|\\\\d\\+\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\|\\\\d\\+:\\\\d\\+\\(\\?::\\\\d\\+\\)\\?\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:AM\\|PM\\)\\)\\?\\)\\[\\^\\\\S\\\\r\\\\n\\]\\*#/i,
                            },
                            "directive": Object {
                              "alias": "comment",
                              "greedy": true,
                              "pattern": /#\\(\\?:Const\\|Else\\|ElseIf\\|End\\|ExternalChecksum\\|ExternalSource\\|If\\|Region\\)\\(\\?:\\[\\^\\\\S\\\\r\\\\n\\]_\\[\\^\\\\S\\\\r\\\\n\\]\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\|\\.\\)\\+/i,
                            },
                            "keyword": /\\\\b\\(\\?:AddHandler\\|AddressOf\\|Alias\\|And\\(\\?:Also\\)\\?\\|As\\|Boolean\\|ByRef\\|Byte\\|ByVal\\|Call\\|Case\\|Catch\\|C\\(\\?:Bool\\|Byte\\|Char\\|Date\\|Dbl\\|Dec\\|Int\\|Lng\\|Obj\\|SByte\\|Short\\|Sng\\|Str\\|Type\\|UInt\\|ULng\\|UShort\\)\\|Char\\|Class\\|Const\\|Continue\\|Currency\\|Date\\|Decimal\\|Declare\\|Default\\|Delegate\\|Dim\\|DirectCast\\|Do\\|Double\\|Each\\|Else\\(\\?:If\\)\\?\\|End\\(\\?:If\\)\\?\\|Enum\\|Erase\\|Error\\|Event\\|Exit\\|Finally\\|For\\|Friend\\|Function\\|Get\\(\\?:Type\\|XMLNamespace\\)\\?\\|Global\\|GoSub\\|GoTo\\|Handles\\|If\\|Implements\\|Imports\\|In\\|Inherits\\|Integer\\|Interface\\|Is\\|IsNot\\|Let\\|Lib\\|Like\\|Long\\|Loop\\|Me\\|Mod\\|Module\\|Must\\(\\?:Inherit\\|Override\\)\\|My\\(\\?:Base\\|Class\\)\\|Namespace\\|Narrowing\\|New\\|Next\\|Not\\(\\?:Inheritable\\|Overridable\\)\\?\\|Object\\|Of\\|On\\|Operator\\|Option\\(\\?:al\\)\\?\\|Or\\(\\?:Else\\)\\?\\|Out\\|Overloads\\|Overridable\\|Overrides\\|ParamArray\\|Partial\\|Private\\|Property\\|Protected\\|Public\\|RaiseEvent\\|ReadOnly\\|ReDim\\|RemoveHandler\\|Resume\\|Return\\|SByte\\|Select\\|Set\\|Shadows\\|Shared\\|short\\|Single\\|Static\\|Step\\|Stop\\|String\\|Structure\\|Sub\\|SyncLock\\|Then\\|Throw\\|To\\|Try\\|TryCast\\|Type\\|TypeOf\\|U\\(\\?:Integer\\|Long\\|Short\\)\\|Using\\|Variant\\|Wend\\|When\\|While\\|Widening\\|With\\(\\?:Events\\)\\?\\|WriteOnly\\|Until\\|Xor\\)\\\\b/i,
                            "number": /\\(\\?:\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)\\(\\?:E\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|&\\[HO\\]\\[\\\\dA-F\\]\\+\\)\\(\\?:U\\?\\[ILS\\]\\|\\[FRD\\]\\)\\?/i,
                            "operator": Array [
                              /\\[\\+\\\\-\\*/\\\\\\\\\\^<=>&#@\\$%!\\]/,
                              Object {
                                "lookbehind": true,
                                "pattern": /\\(\\[\\^\\\\S\\\\r\\\\n\\]\\)_\\(\\?=\\[\\^\\\\S\\\\r\\\\n\\]\\*\\[\\\\r\\\\n\\]\\)/,
                              },
                            ],
                            "punctuation": /\\[\\{\\}\\(\\)\\.,:\\?\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /\\\\\\$\\?\\["ââ\\]\\(\\?:\\["ââ\\]\\{2\\}\\|\\[\\^"ââ\\]\\)\\*\\["ââ\\]C\\?/i,
                            },
                          },
                          "wasm": Object {
                            "comment": Array [
                              /\\\\\\(;\\[\\\\s\\\\S\\]\\*\\?;\\\\\\)/,
                              Object {
                                "greedy": true,
                                "pattern": /;;\\.\\*/,
                              },
                            ],
                            "keyword": Array [
                              Object {
                                "inside": Object {
                                  "operator": /=/,
                                },
                                "pattern": /\\\\b\\(\\?:align\\|offset\\)=/,
                              },
                              Object {
                                "inside": Object {
                                  "punctuation": /\\\\\\./,
                                },
                                "pattern": /\\\\b\\(\\?:\\(\\?:f32\\|f64\\|i32\\|i64\\)\\(\\?:\\\\\\.\\(\\?:abs\\|add\\|and\\|ceil\\|clz\\|const\\|convert_\\[su\\]\\\\/i\\(\\?:32\\|64\\)\\|copysign\\|ctz\\|demote\\\\/f64\\|div\\(\\?:_\\[su\\]\\)\\?\\|eqz\\?\\|extend_\\[su\\]\\\\/i32\\|floor\\|ge\\(\\?:_\\[su\\]\\)\\?\\|gt\\(\\?:_\\[su\\]\\)\\?\\|le\\(\\?:_\\[su\\]\\)\\?\\|load\\(\\?:\\(\\?:8\\|16\\|32\\)_\\[su\\]\\)\\?\\|lt\\(\\?:_\\[su\\]\\)\\?\\|max\\|min\\|mul\\|neg\\?\\|nearest\\|or\\|popcnt\\|promote\\\\/f32\\|reinterpret\\\\/\\[fi\\]\\(\\?:32\\|64\\)\\|rem_\\[su\\]\\|rot\\[lr\\]\\|shl\\|shr_\\[su\\]\\|sqrt\\|store\\(\\?:8\\|16\\|32\\)\\?\\|sub\\|trunc\\(\\?:_\\[su\\]\\\\/f\\(\\?:32\\|64\\)\\)\\?\\|wrap\\\\/i64\\|xor\\)\\)\\?\\|memory\\\\\\.\\(\\?:grow\\|size\\)\\)\\\\b/,
                              },
                              /\\\\b\\(\\?:anyfunc\\|block\\|br\\(\\?:_if\\|_table\\)\\?\\|call\\(\\?:_indirect\\)\\?\\|data\\|drop\\|elem\\|else\\|end\\|export\\|func\\|get_\\(\\?:global\\|local\\)\\|global\\|if\\|import\\|local\\|loop\\|memory\\|module\\|mut\\|nop\\|offset\\|param\\|result\\|return\\|select\\|set_\\(\\?:global\\|local\\)\\|start\\|table\\|tee_local\\|then\\|type\\|unreachable\\)\\\\b/,
                            ],
                            "number": /\\[\\+-\\]\\?\\\\b\\(\\?:\\\\d\\(\\?:_\\?\\\\d\\)\\*\\(\\?:\\\\\\.\\\\d\\(\\?:_\\?\\\\d\\)\\*\\)\\?\\(\\?:\\[eE\\]\\[\\+-\\]\\?\\\\d\\(\\?:_\\?\\\\d\\)\\*\\)\\?\\|0x\\[\\\\da-fA-F\\]\\(\\?:_\\?\\[\\\\da-fA-F\\]\\)\\*\\(\\?:\\\\\\.\\[\\\\da-fA-F\\]\\(\\?:_\\?\\[\\\\da-fA-D\\]\\)\\*\\)\\?\\(\\?:\\[pP\\]\\[\\+-\\]\\?\\\\d\\(\\?:_\\?\\\\d\\)\\*\\)\\?\\)\\\\b\\|\\\\binf\\\\b\\|\\\\bnan\\(\\?::0x\\[\\\\da-fA-F\\]\\(\\?:_\\?\\[\\\\da-fA-D\\]\\)\\*\\)\\?\\\\b/,
                            "punctuation": /\\[\\(\\)\\]/,
                            "string": Object {
                              "greedy": true,
                              "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^"\\\\\\\\\\]\\)\\*"/,
                            },
                            "variable": /\\\\\\$\\[\\\\w!#\\$%&'\\*\\+\\\\-\\./:<=>\\?@\\\\\\\\\\^\`\\|~\\]\\+/,
                          },
                          "webmanifest": Object {
                            "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                            "comment": Object {
                              "greedy": true,
                              "pattern": /\\\\/\\\\/\\.\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                            },
                            "null": Object {
                              "alias": "keyword",
                              "pattern": /\\\\bnull\\\\b/,
                            },
                            "number": /-\\?\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\\\b/i,
                            "operator": /:/,
                            "property": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?=\\\\s\\*:\\)/,
                            },
                            "punctuation": /\\[\\{\\}\\[\\\\\\],\\]/,
                            "string": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?!\\\\s\\*:\\)/,
                            },
                          },
                          "xml": Object {
                            "cdata": Object {
                              "greedy": true,
                              "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                            },
                            "comment": Object {
                              "greedy": true,
                              "pattern": /<!--\\(\\?:\\(\\?!<!--\\)\\[\\\\s\\\\S\\]\\)\\*\\?-->/,
                            },
                            "doctype": Object {
                              "greedy": true,
                              "inside": Object {
                                "doctype-tag": /\\^DOCTYPE/i,
                                "internal-subset": Object {
                                  "greedy": true,
                                  "inside": [Circular],
                                  "lookbehind": true,
                                  "pattern": /\\(\\^\\[\\^\\\\\\[\\]\\*\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                },
                                "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                "string": Object {
                                  "greedy": true,
                                  "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                },
                              },
                              "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                            },
                            "entity": Array [
                              Object {
                                "alias": "named-entity",
                                "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                              },
                              /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                            ],
                            "prolog": Object {
                              "greedy": true,
                              "pattern": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                            },
                            "tag": Object {
                              "greedy": true,
                              "inside": Object {
                                "attr-name": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                  },
                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                                "attr-value": Object {
                                  "inside": Object {
                                    "entity": Array [
                                      Object {
                                        "alias": "named-entity",
                                        "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                      },
                                      /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                    ],
                                    "punctuation": Array [
                                      Object {
                                        "alias": "attr-equals",
                                        "pattern": /\\^=/,
                                      },
                                      /"\\|'/,
                                    ],
                                  },
                                  "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                },
                                "punctuation": /\\\\/\\?>/,
                                "special-attr": Array [],
                                "tag": Object {
                                  "inside": Object {
                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                    "punctuation": /\\^<\\\\/\\?/,
                                  },
                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                },
                              },
                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                            },
                          },
                          "yaml": Object {
                            "boolean": Object {
                              "alias": "important",
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:false\\|true\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                            },
                            "comment": /#\\.\\*/,
                            "datetime": Object {
                              "alias": "number",
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\\\d\\{4\\}-\\\\d\\\\d\\?-\\\\d\\\\d\\?\\(\\?:\\[tT\\]\\|\\[ \\\\t\\]\\+\\)\\\\d\\\\d\\?:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\(\\?:\\[ \\\\t\\]\\*\\(\\?:Z\\|\\[-\\+\\]\\\\d\\\\d\\?\\(\\?::\\\\d\\{2\\}\\)\\?\\)\\)\\?\\|\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\|\\\\d\\\\d\\?:\\\\d\\{2\\}\\(\\?::\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                            },
                            "directive": Object {
                              "alias": "important",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)%\\.\\+/m,
                            },
                            "important": /\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+/,
                            "key": Object {
                              "alias": "atrule",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[:\\\\-,\\[\\{\\\\r\\\\n\\?\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\(\\?:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f!"#%&'\\*,\\\\-:>\\?@\\[\\\\\\]\`\\{\\|\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|\\[\\?:-\\]\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\(\\?:\\[ \\\\t\\]\\*\\(\\?:\\(\\?!\\[#:\\]\\)\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\)\\*\\|"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\\\s\\*:\\\\s\\)/,
                            },
                            "null": Object {
                              "alias": "important",
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:null\\|~\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\[\\+-\\]\\?\\(\\?:0x\\[\\\\da-f\\]\\+\\|0o\\[0-7\\]\\+\\|\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\\\\\.inf\\|\\\\\\.nan\\)\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                            },
                            "punctuation": /---\\|\\[:\\[\\\\\\]\\{\\}\\\\-,\\|>\\?\\]\\|\\\\\\.\\\\\\.\\\\\\./,
                            "scalar": Object {
                              "alias": "string",
                              "lookbehind": true,
                              "pattern": /\\(\\[\\\\-:\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\[\\|>\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\[ \\\\t\\]\\+\\)\\\\S\\[\\^\\\\r\\\\n\\]\\*\\(\\?:\\\\2\\[\\^\\\\r\\\\n\\]\\+\\)\\*\\)/,
                            },
                            "string": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                            },
                            "tag": /!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?/,
                          },
                          "yml": Object {
                            "boolean": Object {
                              "alias": "important",
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:false\\|true\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                            },
                            "comment": /#\\.\\*/,
                            "datetime": Object {
                              "alias": "number",
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\\\d\\{4\\}-\\\\d\\\\d\\?-\\\\d\\\\d\\?\\(\\?:\\[tT\\]\\|\\[ \\\\t\\]\\+\\)\\\\d\\\\d\\?:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\(\\?:\\[ \\\\t\\]\\*\\(\\?:Z\\|\\[-\\+\\]\\\\d\\\\d\\?\\(\\?::\\\\d\\{2\\}\\)\\?\\)\\)\\?\\|\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\|\\\\d\\\\d\\?:\\\\d\\{2\\}\\(\\?::\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                            },
                            "directive": Object {
                              "alias": "important",
                              "lookbehind": true,
                              "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)%\\.\\+/m,
                            },
                            "important": /\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+/,
                            "key": Object {
                              "alias": "atrule",
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\(\\?:\\^\\|\\[:\\\\-,\\[\\{\\\\r\\\\n\\?\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\(\\?:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f!"#%&'\\*,\\\\-:>\\?@\\[\\\\\\]\`\\{\\|\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|\\[\\?:-\\]\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\(\\?:\\[ \\\\t\\]\\*\\(\\?:\\(\\?!\\[#:\\]\\)\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\)\\*\\|"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\\\s\\*:\\\\s\\)/,
                            },
                            "null": Object {
                              "alias": "important",
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:null\\|~\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                            },
                            "number": Object {
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\[\\+-\\]\\?\\(\\?:0x\\[\\\\da-f\\]\\+\\|0o\\[0-7\\]\\+\\|\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\\\\\.inf\\|\\\\\\.nan\\)\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                            },
                            "punctuation": /---\\|\\[:\\[\\\\\\]\\{\\}\\\\-,\\|>\\?\\]\\|\\\\\\.\\\\\\.\\\\\\./,
                            "scalar": Object {
                              "alias": "string",
                              "lookbehind": true,
                              "pattern": /\\(\\[\\\\-:\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\[\\|>\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\[ \\\\t\\]\\+\\)\\\\S\\[\\^\\\\r\\\\n\\]\\*\\(\\?:\\\\2\\[\\^\\\\r\\\\n\\]\\+\\)\\*\\)/,
                            },
                            "string": Object {
                              "greedy": true,
                              "lookbehind": true,
                              "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\\\\\]\\|\\\\\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                            },
                            "tag": /!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?/,
                          },
                        },
                        "plugins": Object {},
                        "tokenize": [Function],
                        "util": Object {
                          "clone": [Function],
                          "encode": [Function],
                          "getLanguage": [Function],
                          "isActive": [Function],
                          "objId": [Function],
                          "setLanguage": [Function],
                          "type": [Function],
                        },
                      }
                    }
                    code="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
                    language="jsx"
                    theme={
                      Object {
                        "plain": Object {
                          "backgroundColor": "#1e1e1e",
                          "color": "#d4d4d4",
                        },
                        "styles": Array [
                          Object {
                            "style": Object {
                              "color": "rgb(0, 0, 128)",
                            },
                            "types": Array [
                              "prolog",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(106, 153, 85)",
                            },
                            "types": Array [
                              "comment",
                              "punctuation",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(79, 193, 255)",
                            },
                            "types": Array [
                              "builtin",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(181, 206, 168)",
                            },
                            "types": Array [
                              "number",
                              "variable",
                              "inserted",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(212, 212, 212)",
                            },
                            "types": Array [
                              "operator",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(100, 102, 149)",
                            },
                            "types": Array [
                              "constant",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(86, 156, 214)",
                            },
                            "types": Array [
                              "tag",
                              "changed",
                              "function",
                              "keyword",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(156, 220, 254)",
                            },
                            "types": Array [
                              "attr-name",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(206, 145, 120)",
                            },
                            "types": Array [
                              "deleted",
                              "string",
                              "attr-value",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(78, 201, 176)",
                            },
                            "types": Array [
                              "class-name",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(209, 105, 105)",
                            },
                            "types": Array [
                              "char",
                            ],
                          },
                          Object {
                            "style": Object {
                              "color": "rgb(215, 186, 125)",
                            },
                            "types": Array [
                              "selector",
                            ],
                          },
                          Object {
                            "languages": Array [
                              "markup",
                            ],
                            "style": Object {
                              "color": "rgb(86, 156, 214)",
                            },
                            "types": Array [
                              "tag",
                            ],
                          },
                          Object {
                            "languages": Array [
                              "markup",
                            ],
                            "style": Object {
                              "color": "#808080",
                            },
                            "types": Array [
                              "punctuation",
                            ],
                          },
                        ],
                      }
                    }
                  >
                    <YozoraCodeHighlighterContent
                      className="prism-code language-jsx"
                      codesRef={
                        Object {
                          "current": <div
                            class="yozora-code-highlighter__codes"
                          >
                            <div
                              class="yozora-code-highlighter__codes-wrapper"
                            >
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                  style="display: inline-block;"
                                >
                                  

                                </span>
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                >
                                    
                                </span>
                                <span
                                  class="token keyword"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  function
                                </span>
                                <span
                                  class="token plain"
                                >
                                   
                                </span>
                                <span
                                  class="token function"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  Counter
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  (
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  )
                                </span>
                                <span
                                  class="token plain"
                                >
                                   
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  {
                                </span>
                                <span
                                  class="token plain"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                >
                                      
                                </span>
                                <span
                                  class="token keyword"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  const
                                </span>
                                <span
                                  class="token plain"
                                >
                                   
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  [
                                </span>
                                <span
                                  class="token plain"
                                >
                                  count
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  ,
                                </span>
                                <span
                                  class="token plain"
                                >
                                   setCount
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  ]
                                </span>
                                <span
                                  class="token plain"
                                >
                                   
                                </span>
                                <span
                                  class="token operator"
                                  style="color: rgb(212, 212, 212);"
                                >
                                  =
                                </span>
                                <span
                                  class="token plain"
                                >
                                   React
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  .
                                </span>
                                <span
                                  class="token function"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  useState
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  (
                                </span>
                                <span
                                  class="token number"
                                  style="color: rgb(181, 206, 168);"
                                >
                                  0
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  )
                                </span>
                                <span
                                  class="token plain"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                >
                                      
                                </span>
                                <span
                                  class="token keyword"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  return
                                </span>
                                <span
                                  class="token plain"
                                >
                                   
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  (
                                </span>
                                <span
                                  class="token plain"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                >
                                        
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  div
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token plain-text"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain-text"
                                >
                                          
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  button
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag attr-name"
                                  style="color: rgb(156, 220, 254);"
                                >
                                  onClick
                                </span>
                                <span
                                  class="token tag script language-javascript script-punctuation punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  =
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  {
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  (
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  )
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript operator"
                                  style="color: rgb(212, 212, 212);"
                                >
                                  =&gt;
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript function"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  setCount
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  (
                                </span>
                                <span
                                  class="token tag script language-javascript parameter"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  c
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript operator"
                                  style="color: rgb(212, 212, 212);"
                                >
                                  =&gt;
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   c 
                                </span>
                                <span
                                  class="token tag script language-javascript operator"
                                  style="color: rgb(212, 212, 212);"
                                >
                                  +
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript number"
                                  style="color: rgb(181, 206, 168);"
                                >
                                  1
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  )
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  }
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token plain-text"
                                >
                                  +
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;/
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  button
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token plain-text"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain-text"
                                >
                                          
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  span
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag attr-name"
                                  style="color: rgb(156, 220, 254);"
                                >
                                  data-type
                                </span>
                                <span
                                  class="token tag attr-value punctuation attr-equals"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  =
                                </span>
                                <span
                                  class="token tag attr-value punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  "
                                </span>
                                <span
                                  class="token tag attr-value"
                                  style="color: rgb(206, 145, 120);"
                                >
                                  value
                                </span>
                                <span
                                  class="token tag attr-value punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  "
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  {
                                </span>
                                <span
                                  class="token plain"
                                >
                                  count
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  }
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;/
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  span
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token plain-text"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain-text"
                                >
                                          
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  button
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag attr-name"
                                  style="color: rgb(156, 220, 254);"
                                >
                                  onClick
                                </span>
                                <span
                                  class="token tag script language-javascript script-punctuation punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  =
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  {
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  (
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  )
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript operator"
                                  style="color: rgb(212, 212, 212);"
                                >
                                  =&gt;
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript function"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  setCount
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  (
                                </span>
                                <span
                                  class="token tag script language-javascript parameter"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  c
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript operator"
                                  style="color: rgb(212, 212, 212);"
                                >
                                  =&gt;
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   c 
                                </span>
                                <span
                                  class="token tag script language-javascript operator"
                                  style="color: rgb(212, 212, 212);"
                                >
                                  -
                                </span>
                                <span
                                  class="token tag script language-javascript"
                                  style="color: rgb(86, 156, 214);"
                                >
                                   
                                </span>
                                <span
                                  class="token tag script language-javascript number"
                                  style="color: rgb(181, 206, 168);"
                                >
                                  1
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  )
                                </span>
                                <span
                                  class="token tag script language-javascript punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  }
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token plain-text"
                                >
                                  -
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;/
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  button
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token plain-text"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain-text"
                                >
                                        
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &lt;/
                                </span>
                                <span
                                  class="token tag"
                                  style="color: rgb(86, 156, 214);"
                                >
                                  div
                                </span>
                                <span
                                  class="token tag punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  &gt;
                                </span>
                                <span
                                  class="token plain"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                >
                                      
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  )
                                </span>
                                <span
                                  class="token plain"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                >
                                    
                                </span>
                                <span
                                  class="token punctuation"
                                  style="color: rgb(106, 153, 85);"
                                >
                                  }
                                </span>
                                <span
                                  class="token plain"
                                />
                              </div>
                              <div
                                class="yozora-code-highlighter__line token-line"
                                style="color: rgb(212, 212, 212);"
                              >
                                <span
                                  class="token plain"
                                  style="display: inline-block;"
                                >
                                  

                                </span>
                              </div>
                            </div>
                          </div>,
                        }
                      }
                      collapsed={false}
                      getLineProps={[Function]}
                      getTokenProps={[Function]}
                      lineHeight="1.6rem"
                      onLinenoWidthChange={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#1e1e1e",
                          "color": "#d4d4d4",
                        }
                      }
                      tokens={
                        Array [
                          Array [
                            Object {
                              "content": "
",
                              "empty": true,
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "  ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "function",
                              "types": Array [
                                "keyword",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "Counter",
                              "types": Array [
                                "function",
                              ],
                            },
                            Object {
                              "content": "(",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": ")",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "{",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "    ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "const",
                              "types": Array [
                                "keyword",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "[",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "count",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": ",",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": " setCount",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "]",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "=",
                              "types": Array [
                                "operator",
                              ],
                            },
                            Object {
                              "content": " React",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": ".",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "useState",
                              "types": Array [
                                "function",
                              ],
                            },
                            Object {
                              "content": "(",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "0",
                              "types": Array [
                                "number",
                              ],
                            },
                            Object {
                              "content": ")",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "    ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "return",
                              "types": Array [
                                "keyword",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "(",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "      ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "<",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "div",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "        ",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                            Object {
                              "content": "<",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "button",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": "onClick",
                              "types": Array [
                                "tag",
                                "attr-name",
                              ],
                            },
                            Object {
                              "content": "=",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "script-punctuation",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "{",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "(",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": ")",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "=>",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "operator",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "setCount",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "function",
                              ],
                            },
                            Object {
                              "content": "(",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "c",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "parameter",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "=>",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "operator",
                              ],
                            },
                            Object {
                              "content": " c ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "+",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "operator",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "1",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "number",
                              ],
                            },
                            Object {
                              "content": ")",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "}",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "+",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                            Object {
                              "content": "</",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "button",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "        ",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                            Object {
                              "content": "<",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "span",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": "data-type",
                              "types": Array [
                                "tag",
                                "attr-name",
                              ],
                            },
                            Object {
                              "content": "=",
                              "types": Array [
                                "tag",
                                "attr-value",
                                "punctuation",
                                "attr-equals",
                              ],
                            },
                            Object {
                              "content": "\\"",
                              "types": Array [
                                "tag",
                                "attr-value",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "value",
                              "types": Array [
                                "tag",
                                "attr-value",
                              ],
                            },
                            Object {
                              "content": "\\"",
                              "types": Array [
                                "tag",
                                "attr-value",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "{",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "count",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "}",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "</",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "span",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "        ",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                            Object {
                              "content": "<",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "button",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": "onClick",
                              "types": Array [
                                "tag",
                                "attr-name",
                              ],
                            },
                            Object {
                              "content": "=",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "script-punctuation",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "{",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "(",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": ")",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "=>",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "operator",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "setCount",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "function",
                              ],
                            },
                            Object {
                              "content": "(",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "c",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "parameter",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "=>",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "operator",
                              ],
                            },
                            Object {
                              "content": " c ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "-",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "operator",
                              ],
                            },
                            Object {
                              "content": " ",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                              ],
                            },
                            Object {
                              "content": "1",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "number",
                              ],
                            },
                            Object {
                              "content": ")",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "}",
                              "types": Array [
                                "tag",
                                "script",
                                "language-javascript",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "-",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                            Object {
                              "content": "</",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "button",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "      ",
                              "types": Array [
                                "plain-text",
                              ],
                            },
                            Object {
                              "content": "</",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "div",
                              "types": Array [
                                "tag",
                              ],
                            },
                            Object {
                              "content": ">",
                              "types": Array [
                                "tag",
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "    ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": ")",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "  ",
                              "types": Array [
                                "plain",
                              ],
                            },
                            Object {
                              "content": "}",
                              "types": Array [
                                "punctuation",
                              ],
                            },
                            Object {
                              "content": "",
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                          Array [
                            Object {
                              "content": "
",
                              "empty": true,
                              "types": Array [
                                "plain",
                              ],
                            },
                          ],
                        ]
                      }
                    >
                      <div
                        className="yozora-code-highlighter prism-code language-jsx"
                        style={
                          Object {
                            "backgroundColor": "none",
                            "color": "#d4d4d4",
                            "lineHeight": "1.6rem",
                            "maxHeight": "20.8rem",
                            "minHeight": "100%",
                          }
                        }
                      >
                        <div
                          className="yozora-code-highlighter__linenos"
                          key="linenos"
                          style={
                            Object {
                              "width": "2.2em",
                            }
                          }
                        >
                          <div
                            className="yozora-code-highlighter__line"
                            key="0"
                          >
                            <span
                              key="0"
                            >
                              1
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="1"
                          >
                            <span
                              key="1"
                            >
                              2
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="2"
                          >
                            <span
                              key="2"
                            >
                              3
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="3"
                          >
                            <span
                              key="3"
                            >
                              4
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="4"
                          >
                            <span
                              key="4"
                            >
                              5
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="5"
                          >
                            <span
                              key="5"
                            >
                              6
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="6"
                          >
                            <span
                              key="6"
                            >
                              7
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="7"
                          >
                            <span
                              key="7"
                            >
                              8
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="8"
                          >
                            <span
                              key="8"
                            >
                              9
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="9"
                          >
                            <span
                              key="9"
                            >
                              10
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="10"
                          >
                            <span
                              key="10"
                            >
                              11
                            </span>
                          </div>
                          <div
                            className="yozora-code-highlighter__line"
                            key="11"
                          >
                            <span
                              key="11"
                            >
                              12
                            </span>
                          </div>
                        </div>
                        <div
                          className="yozora-code-highlighter__codes"
                          key="codes"
                          onScroll={[Function]}
                        >
                          <div
                            className="yozora-code-highlighter__codes-wrapper"
                          >
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="0"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                                style={
                                  Object {
                                    "display": "inline-block",
                                  }
                                }
                              >
                                

                              </span>
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="1"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                              >
                                  
                              </span>
                              <span
                                className="token keyword"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                function
                              </span>
                              <span
                                className="token plain"
                                key="2"
                              >
                                 
                              </span>
                              <span
                                className="token function"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                Counter
                              </span>
                              <span
                                className="token punctuation"
                                key="4"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                (
                              </span>
                              <span
                                className="token punctuation"
                                key="5"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                )
                              </span>
                              <span
                                className="token plain"
                                key="6"
                              >
                                 
                              </span>
                              <span
                                className="token punctuation"
                                key="7"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                {
                              </span>
                              <span
                                className="token plain"
                                key="8"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="2"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                              >
                                    
                              </span>
                              <span
                                className="token keyword"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                const
                              </span>
                              <span
                                className="token plain"
                                key="2"
                              >
                                 
                              </span>
                              <span
                                className="token punctuation"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                [
                              </span>
                              <span
                                className="token plain"
                                key="4"
                              >
                                count
                              </span>
                              <span
                                className="token punctuation"
                                key="5"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                ,
                              </span>
                              <span
                                className="token plain"
                                key="6"
                              >
                                 setCount
                              </span>
                              <span
                                className="token punctuation"
                                key="7"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                ]
                              </span>
                              <span
                                className="token plain"
                                key="8"
                              >
                                 
                              </span>
                              <span
                                className="token operator"
                                key="9"
                                style={
                                  Object {
                                    "color": "rgb(212, 212, 212)",
                                  }
                                }
                              >
                                =
                              </span>
                              <span
                                className="token plain"
                                key="10"
                              >
                                 React
                              </span>
                              <span
                                className="token punctuation"
                                key="11"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                .
                              </span>
                              <span
                                className="token function"
                                key="12"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                useState
                              </span>
                              <span
                                className="token punctuation"
                                key="13"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                (
                              </span>
                              <span
                                className="token number"
                                key="14"
                                style={
                                  Object {
                                    "color": "rgb(181, 206, 168)",
                                  }
                                }
                              >
                                0
                              </span>
                              <span
                                className="token punctuation"
                                key="15"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                )
                              </span>
                              <span
                                className="token plain"
                                key="16"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="3"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                              >
                                    
                              </span>
                              <span
                                className="token keyword"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                return
                              </span>
                              <span
                                className="token plain"
                                key="2"
                              >
                                 
                              </span>
                              <span
                                className="token punctuation"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                (
                              </span>
                              <span
                                className="token plain"
                                key="4"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="4"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                              >
                                      
                              </span>
                              <span
                                className="token tag punctuation"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;
                              </span>
                              <span
                                className="token tag"
                                key="2"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                div
                              </span>
                              <span
                                className="token tag punctuation"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token plain-text"
                                key="4"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="5"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain-text"
                                key="0"
                              >
                                        
                              </span>
                              <span
                                className="token tag punctuation"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;
                              </span>
                              <span
                                className="token tag"
                                key="2"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                button
                              </span>
                              <span
                                className="token tag"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag attr-name"
                                key="4"
                                style={
                                  Object {
                                    "color": "rgb(156, 220, 254)",
                                  }
                                }
                              >
                                onClick
                              </span>
                              <span
                                className="token tag script language-javascript script-punctuation punctuation"
                                key="5"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                =
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="6"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                {
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="7"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                (
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="8"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                )
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="9"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript operator"
                                key="10"
                                style={
                                  Object {
                                    "color": "rgb(212, 212, 212)",
                                  }
                                }
                              >
                                =&gt;
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="11"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript function"
                                key="12"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                setCount
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="13"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                (
                              </span>
                              <span
                                className="token tag script language-javascript parameter"
                                key="14"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                c
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="15"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript operator"
                                key="16"
                                style={
                                  Object {
                                    "color": "rgb(212, 212, 212)",
                                  }
                                }
                              >
                                =&gt;
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="17"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 c 
                              </span>
                              <span
                                className="token tag script language-javascript operator"
                                key="18"
                                style={
                                  Object {
                                    "color": "rgb(212, 212, 212)",
                                  }
                                }
                              >
                                +
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="19"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript number"
                                key="20"
                                style={
                                  Object {
                                    "color": "rgb(181, 206, 168)",
                                  }
                                }
                              >
                                1
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="21"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                )
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="22"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                }
                              </span>
                              <span
                                className="token tag punctuation"
                                key="23"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token plain-text"
                                key="24"
                              >
                                +
                              </span>
                              <span
                                className="token tag punctuation"
                                key="25"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;/
                              </span>
                              <span
                                className="token tag"
                                key="26"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                button
                              </span>
                              <span
                                className="token tag punctuation"
                                key="27"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token plain-text"
                                key="28"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="6"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain-text"
                                key="0"
                              >
                                        
                              </span>
                              <span
                                className="token tag punctuation"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;
                              </span>
                              <span
                                className="token tag"
                                key="2"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                span
                              </span>
                              <span
                                className="token tag"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag attr-name"
                                key="4"
                                style={
                                  Object {
                                    "color": "rgb(156, 220, 254)",
                                  }
                                }
                              >
                                data-type
                              </span>
                              <span
                                className="token tag attr-value punctuation attr-equals"
                                key="5"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                =
                              </span>
                              <span
                                className="token tag attr-value punctuation"
                                key="6"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                "
                              </span>
                              <span
                                className="token tag attr-value"
                                key="7"
                                style={
                                  Object {
                                    "color": "rgb(206, 145, 120)",
                                  }
                                }
                              >
                                value
                              </span>
                              <span
                                className="token tag attr-value punctuation"
                                key="8"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                "
                              </span>
                              <span
                                className="token tag punctuation"
                                key="9"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token punctuation"
                                key="10"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                {
                              </span>
                              <span
                                className="token plain"
                                key="11"
                              >
                                count
                              </span>
                              <span
                                className="token punctuation"
                                key="12"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                }
                              </span>
                              <span
                                className="token tag punctuation"
                                key="13"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;/
                              </span>
                              <span
                                className="token tag"
                                key="14"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                span
                              </span>
                              <span
                                className="token tag punctuation"
                                key="15"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token plain-text"
                                key="16"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="7"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain-text"
                                key="0"
                              >
                                        
                              </span>
                              <span
                                className="token tag punctuation"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;
                              </span>
                              <span
                                className="token tag"
                                key="2"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                button
                              </span>
                              <span
                                className="token tag"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag attr-name"
                                key="4"
                                style={
                                  Object {
                                    "color": "rgb(156, 220, 254)",
                                  }
                                }
                              >
                                onClick
                              </span>
                              <span
                                className="token tag script language-javascript script-punctuation punctuation"
                                key="5"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                =
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="6"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                {
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="7"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                (
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="8"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                )
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="9"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript operator"
                                key="10"
                                style={
                                  Object {
                                    "color": "rgb(212, 212, 212)",
                                  }
                                }
                              >
                                =&gt;
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="11"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript function"
                                key="12"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                setCount
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="13"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                (
                              </span>
                              <span
                                className="token tag script language-javascript parameter"
                                key="14"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                c
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="15"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript operator"
                                key="16"
                                style={
                                  Object {
                                    "color": "rgb(212, 212, 212)",
                                  }
                                }
                              >
                                =&gt;
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="17"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 c 
                              </span>
                              <span
                                className="token tag script language-javascript operator"
                                key="18"
                                style={
                                  Object {
                                    "color": "rgb(212, 212, 212)",
                                  }
                                }
                              >
                                -
                              </span>
                              <span
                                className="token tag script language-javascript"
                                key="19"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                 
                              </span>
                              <span
                                className="token tag script language-javascript number"
                                key="20"
                                style={
                                  Object {
                                    "color": "rgb(181, 206, 168)",
                                  }
                                }
                              >
                                1
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="21"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                )
                              </span>
                              <span
                                className="token tag script language-javascript punctuation"
                                key="22"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                }
                              </span>
                              <span
                                className="token tag punctuation"
                                key="23"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token plain-text"
                                key="24"
                              >
                                -
                              </span>
                              <span
                                className="token tag punctuation"
                                key="25"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;/
                              </span>
                              <span
                                className="token tag"
                                key="26"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                button
                              </span>
                              <span
                                className="token tag punctuation"
                                key="27"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token plain-text"
                                key="28"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="8"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain-text"
                                key="0"
                              >
                                      
                              </span>
                              <span
                                className="token tag punctuation"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &lt;/
                              </span>
                              <span
                                className="token tag"
                                key="2"
                                style={
                                  Object {
                                    "color": "rgb(86, 156, 214)",
                                  }
                                }
                              >
                                div
                              </span>
                              <span
                                className="token tag punctuation"
                                key="3"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                &gt;
                              </span>
                              <span
                                className="token plain"
                                key="4"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="9"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                              >
                                    
                              </span>
                              <span
                                className="token punctuation"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                )
                              </span>
                              <span
                                className="token plain"
                                key="2"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="10"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                              >
                                  
                              </span>
                              <span
                                className="token punctuation"
                                key="1"
                                style={
                                  Object {
                                    "color": "rgb(106, 153, 85)",
                                  }
                                }
                              >
                                }
                              </span>
                              <span
                                className="token plain"
                                key="2"
                              />
                            </div>
                            <div
                              className="yozora-code-highlighter__line token-line"
                              key="11"
                              style={
                                Object {
                                  "backgroundColor": null,
                                  "color": "#d4d4d4",
                                }
                              }
                            >
                              <span
                                className="token plain"
                                key="0"
                                style={
                                  Object {
                                    "display": "inline-block",
                                  }
                                }
                              >
                                

                              </span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </YozoraCodeHighlighterContent>
                  </Highlight>
                </YozoraCodeHighlighter>
              </pre>
            </div>
          </SimpleCodeEditor>
        </YozoraCodeEditor>
      </div>
      <div
        className="yozora-code-live__previewer yozora-code-live__previewer--center"
        key="previewer"
      >
        <YozoraCodeEmbed
          lang="jsx"
          runner={[Function]}
          value="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
        >
          <div
            className="yozora-code-embed"
          >
            <JsxRunner
              lang="jsx"
              onError={[Function]}
              value="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
            >
              <YozoraCodeRendererJsx
                code="
  function Counter() {
    const [count, setCount] = React.useState(0)
    return (
      <div>
        <button onClick={() => setCount(c => c + 1)}>+</button>
        <span data-type=\\"value\\">{count}</span>
        <button onClick={() => setCount(c => c - 1)}>-</button>
      </div>
    )
  }
"
                inline={true}
                onError={[Function]}
                scope={Object {}}
              >
                <ErrorBoundary>
                  <Counter>
                    <div>
                      <button
                        onClick={[Function]}
                      >
                        +
                      </button>
                      <span
                        data-type="value"
                      >
                        0
                      </span>
                      <button
                        onClick={[Function]}
                      >
                        -
                      </button>
                    </div>
                  </Counter>
                </ErrorBoundary>
              </YozoraCodeRendererJsx>
            </JsxRunner>
          </div>
        </YozoraCodeEmbed>
      </div>
    </div>
  </div>
</YozoraCodeLive>
`;
